[{"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\index.js":"1","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\App.js":"3","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\store.js":"4","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\setAuthToken.js":"5","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\authAutentications.js":"6","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Email.js":"7","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Chisiamo.js":"8","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\modificaPassword.js":"9","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\aggiornaPatente.js":"10","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\IlMioProfilo.js":"11","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\notfound404.js":"12","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\GestioneCorsa.js":"13","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Notifiche.js":"14","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\VisualizzaPrenotazioni.js":"15","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\modificaArrivo.js":"16","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\errorServer.js":"17","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\VeicoliLista.js":"18","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\private-route\\PrivateRoute.js":"19","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\HomeCliente.js":"20","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\auth\\Register.js":"21","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\auth\\Login.js":"22","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\googlemap\\mappa.js":"23","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\ListaVeicoli.js":"24","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\NuovaPrenotazione.js":"25","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\MetodiPagamento.js":"26","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\InserimentoParcheggio.js":"27","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\RiepilogoPrenotazione.js":"28","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\SchermataPagamento.js":"29","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\DashboardAdmin.js":"30","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\GestioneAmministrazione.js":"31","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaClienti.js":"32","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaVeicoli.js":"33","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaParcheggi.js":"34","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaTariffe.js":"35","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaDipendenti.js":"36","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineDipendenti\\ModificaParcheggio.js":"37","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineDipendenti\\DashboardDipendenti.js":"38","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\layout\\layout.js":"39","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\type.js":"40","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\prenotazioniActions.js":"41","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\filtriVeicoli.js":"42","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\notificheActions.js":"43","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\veicoliActions.js":"44","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\ricercaFiltro.js":"45","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\parcheggiActions.js":"46","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\filtriParcheggi.js":"47","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\footer\\footer.js":"48","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\navbar\\navbar.js":"49","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\metodipagamentoActions.js":"50","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\googlemap\\styleMappa.js":"51","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\index.js":"52","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\notificheReducers.js":"53","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\prenotazioniReducers.js":"54","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\veicoliDisponibiliReducers.js":"55","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\metodipagamentoReducers.js":"56","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\parcheggiReducers.js":"57","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\veicoliReducers.js":"58","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\errorReducers.js":"59","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\customerlistReducers.js":"60","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\authReducers.js":"61"},{"size":500,"mtime":499162500000,"results":"62","hashOfConfig":"63"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"63"},{"size":6668,"mtime":1626135899828,"results":"65","hashOfConfig":"63"},{"size":465,"mtime":1624651635775,"results":"66","hashOfConfig":"63"},{"size":342,"mtime":1624988981742,"results":"67","hashOfConfig":"63"},{"size":5484,"mtime":1626393438604,"results":"68","hashOfConfig":"63"},{"size":9702,"mtime":1626617218652,"results":"69","hashOfConfig":"63"},{"size":483,"mtime":1624973331666,"results":"70","hashOfConfig":"63"},{"size":4559,"mtime":1626617290714,"results":"71","hashOfConfig":"63"},{"size":5729,"mtime":1626392859316,"results":"72","hashOfConfig":"63"},{"size":7322,"mtime":1626393424496,"results":"73","hashOfConfig":"63"},{"size":1411,"mtime":1625602940203,"results":"74","hashOfConfig":"63"},{"size":7186,"mtime":1626616470053,"results":"75","hashOfConfig":"63"},{"size":5890,"mtime":1626556534824,"results":"76","hashOfConfig":"63"},{"size":20908,"mtime":1626614278777,"results":"77","hashOfConfig":"63"},{"size":7908,"mtime":1626140396406,"results":"78","hashOfConfig":"63"},{"size":1208,"mtime":1626129662729,"results":"79","hashOfConfig":"63"},{"size":5076,"mtime":1626134868867,"results":"80","hashOfConfig":"63"},{"size":615,"mtime":1625427336275,"results":"81","hashOfConfig":"63"},{"size":4860,"mtime":1626015445781,"results":"82","hashOfConfig":"63"},{"size":9655,"mtime":1626675691521,"results":"83","hashOfConfig":"63"},{"size":5711,"mtime":1626136742105,"results":"84","hashOfConfig":"63"},{"size":3505,"mtime":1626642495158,"results":"85","hashOfConfig":"63"},{"size":7338,"mtime":1626552484872,"results":"86","hashOfConfig":"63"},{"size":16418,"mtime":1626529894961,"results":"87","hashOfConfig":"63"},{"size":10383,"mtime":1626372839595,"results":"88","hashOfConfig":"63"},{"size":9602,"mtime":1626552497232,"results":"89","hashOfConfig":"63"},{"size":10171,"mtime":1626532607845,"results":"90","hashOfConfig":"63"},{"size":10921,"mtime":1626555452857,"results":"91","hashOfConfig":"63"},{"size":2320,"mtime":1626104956431,"results":"92","hashOfConfig":"63"},{"size":2900,"mtime":1625238902808,"results":"93","hashOfConfig":"63"},{"size":4414,"mtime":1625955624294,"results":"94","hashOfConfig":"63"},{"size":32894,"mtime":1626528945723,"results":"95","hashOfConfig":"63"},{"size":12656,"mtime":1626395309377,"results":"96","hashOfConfig":"63"},{"size":10938,"mtime":1626527200938,"results":"97","hashOfConfig":"63"},{"size":32493,"mtime":1626529203036,"results":"98","hashOfConfig":"63"},{"size":3535,"mtime":1625652956382,"results":"99","hashOfConfig":"63"},{"size":1823,"mtime":1625830127669,"results":"100","hashOfConfig":"63"},{"size":406,"mtime":1624379407461,"results":"101","hashOfConfig":"63"},{"size":1803,"mtime":1626130683238,"results":"102","hashOfConfig":"63"},{"size":2735,"mtime":1626613702276,"results":"103","hashOfConfig":"63"},{"size":382,"mtime":1625087719259,"results":"104","hashOfConfig":"63"},{"size":1206,"mtime":1626109356684,"results":"105","hashOfConfig":"63"},{"size":3355,"mtime":1626529072232,"results":"106","hashOfConfig":"63"},{"size":382,"mtime":1625085409667,"results":"107","hashOfConfig":"63"},{"size":728,"mtime":1626394833030,"results":"108","hashOfConfig":"63"},{"size":339,"mtime":1625222931363,"results":"109","hashOfConfig":"63"},{"size":2151,"mtime":1625938337213,"results":"110","hashOfConfig":"63"},{"size":8662,"mtime":1626396851469,"results":"111","hashOfConfig":"63"},{"size":1198,"mtime":1626373126952,"results":"112","hashOfConfig":"63"},{"size":2163,"mtime":1625870337941,"results":"113","hashOfConfig":"63"},{"size":933,"mtime":1626097390480,"results":"114","hashOfConfig":"63"},{"size":786,"mtime":1626107428104,"results":"115","hashOfConfig":"63"},{"size":759,"mtime":1626130795166,"results":"116","hashOfConfig":"63"},{"size":392,"mtime":1625911660138,"results":"117","hashOfConfig":"63"},{"size":679,"mtime":1625596285857,"results":"118","hashOfConfig":"63"},{"size":546,"mtime":1625784486717,"results":"119","hashOfConfig":"63"},{"size":1193,"mtime":1625162095719,"results":"120","hashOfConfig":"63"},{"size":486,"mtime":1625430020399,"results":"121","hashOfConfig":"63"},{"size":617,"mtime":1625223999112,"results":"122","hashOfConfig":"63"},{"size":1289,"mtime":1625651752054,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"shqrgk",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"126"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"126"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"126"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"126"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"126"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"126"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"126"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"126"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"126"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"126"},"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\index.js",[],["298","299"],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\App.js",["300","301"],"import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport {\n  setCurrentUser,\n  logoutUser,\n  Listaclienti,\n} from \"../src/actions/authAutentications\";\n\n//store\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n//css\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//componenti\nimport Layout from \"./componenti/Layout/layout/layout\";\nimport PrivateRoute from \"../src/componenti/private-route/PrivateRoute\";\nimport Register from \"./componenti/auth/Register\";\nimport Login from \"./componenti/auth/Login\";\nimport Mappa from \"./componenti/googlemap/mappa\";\n\n//pagineGeneriche\nimport Email from \"./pagineGeneriche/Email\";\nimport Chisiamo from \"./pagineGeneriche/Chisiamo\";\nimport notFound from \"./pagineGeneriche/notfound404\";\nimport ModificaPassword from \"./pagineGeneriche/modificaPassword\";\nimport Patente from \"./pagineGeneriche/aggiornaPatente\";\nimport IlMioProfilo from \"./pagineGeneriche/IlMioProfilo\";\nimport VisualizzaPrenotazioni from \"./pagineGeneriche/VisualizzaPrenotazioni\";\nimport GestioneCorsa from \"./pagineGeneriche/GestioneCorsa\";\nimport NotificheLista from \"./pagineGeneriche/Notifiche\";\nimport errorServer from \"../src/pagineGeneriche/errorServer\";\nimport ModificaArrivo from \"./pagineGeneriche/modificaArrivo\";\n\n//pagineCliente\nimport HomeCliente from \"./componenti/PagineCliente/HomeCliente\";\nimport NuovaPrenotazione from \"./componenti/PagineCliente/NuovaPrenotazione\";\nimport ListaVeicoli from \"./componenti/PagineCliente/ListaVeicoli\";\nimport MetodiPagamento from \"./componenti/PagineCliente/MetodiPagamento\";\nimport InserimentoParcheggio from \"./componenti/PagineCliente/InserimentoParcheggio\";\nimport RiepilogoPrenotazione from \"./componenti/PagineCliente/RiepilogoPrenotazione\";\nimport SchermataPagamento from \"./componenti/PagineCliente/SchermataPagamento\";\n\n//pagineAdmin\nimport Dashboard from \"../src/componenti/PagineAdmin/DashboardAdmin\";\nimport GestioneAmministrazione from \"./componenti/PagineAdmin/GestioneAmministrazione\";\nimport AggiornaClienti from \"./componenti/PagineAdmin/AggiornaClienti\";\nimport AggiornaVeicoli from \"./componenti/PagineAdmin/AggiornaVeicoli\";\nimport AggiornaDipendenti from \"./componenti/PagineAdmin/AggiornaDipendenti\";\nimport AggiornaParcheggi from \"./componenti/PagineAdmin/AggiornaParcheggi\";\nimport ModificaTariffe from \"./componenti/PagineAdmin/AggiornaTariffe\";\n\n//pagineDipendenti\nimport ModificaParcheggio from \"./componenti/PagineDipendenti/ModificaParcheggio\";\nimport DashboardDipendenti from \"./componenti/PagineDipendenti/DashboardDipendenti\";\nimport VeicoliLista from \"./pagineGeneriche/VeicoliLista\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Layout>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/email\" component={Email} />\n\n          <Switch>\n            <PrivateRoute exact path=\"/HomeCliente\" component={HomeCliente} />\n            <PrivateRoute\n              exact\n              path=\"/NuovaPrenotazione\"\n              component={NuovaPrenotazione}\n            />\n            <PrivateRoute exact path=\"/Dashboard\" component={Dashboard} />\n            <PrivateRoute\n              exact\n              path=\"/GestioneAmministrazione\"\n              component={GestioneAmministrazione}\n            />\n            <PrivateRoute exact path=\"/ListaVeicoli\" component={ListaVeicoli} />\n            <PrivateRoute\n              exact\n              path=\"/ListaClienti\"\n              component={AggiornaClienti}\n            />\n            <PrivateRoute\n              exact\n              path=\"/AggiornaVeicoli\"\n              component={AggiornaVeicoli}\n            />\n            <PrivateRoute\n              path=\"/AggiornaDipendenti\"\n              component={AggiornaDipendenti}\n            />\n            <PrivateRoute\n              path=\"/AggiornaParcheggi\"\n              component={AggiornaParcheggi}\n            />\n            <PrivateRoute\n              path=\"/DashboardDipendenti\"\n              component={DashboardDipendenti}\n            />\n            <PrivateRoute path=\"/IlMioProfilo\" component={IlMioProfilo} />\n            <PrivateRoute\n              path=\"/ModificaPassword\"\n              component={ModificaPassword}\n            />\n            <PrivateRoute\n              path=\"/MetodiDiPagamento\"\n              component={MetodiPagamento}\n            />\n            <PrivateRoute path=\"/Patente\" component={Patente} />\n            <PrivateRoute\n              path=\"/ModificaParcheggio\"\n              component={ModificaParcheggio}\n            />\n            <PrivateRoute path=\"/ModificaTariffe\" component={ModificaTariffe} />\n            <PrivateRoute\n              path=\"/InserimentoParcheggio\"\n              component={InserimentoParcheggio}\n            />\n            <PrivateRoute\n              path=\"/RiepilogoPrenotazione\"\n              component={RiepilogoPrenotazione}\n            />\n            <PrivateRoute\n              path=\"/SchermataPagamento\"\n              component={SchermataPagamento}\n            />\n            <PrivateRoute\n              path=\"/VisualizzaPrenotazioni\"\n              component={VisualizzaPrenotazioni}\n            />\n            <PrivateRoute path=\"/GestioneCorsa\" component={GestioneCorsa} />\n            <PrivateRoute path=\"/Notifiche\" component={NotificheLista} />\n            <PrivateRoute path=\"/VeicoliLista\" component={VeicoliLista} />\n            <PrivateRoute path=\"/ModificaArrivo\" component={ModificaArrivo} />\n            <Route exact path=\"/ChiSiamo\" component={Chisiamo} />\n            <Route exact path=\"/Mappa\" component={Mappa} />\n            <Route exact path=\"/errorServer\" component={errorServer} />\n            <PrivateRoute exact path=\"*\" component={notFound} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\store.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\setAuthToken.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\authAutentications.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Email.js",["302","303","304","305","306","307","308","309"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loginUser,\r\n  recuperoPassword,\r\n  codiceOTP,\r\n  modificaPassword,\r\n} from \"../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\r\n\r\nclass Email extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      modalShow: false,\r\n      modalShow1: false,\r\n      error: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    if (\r\n      this.state.email === \"gabrielekarra@hotmail.it\" ||\r\n      this.state.email === \"salvatoregabriele.karra@outlook.it\"\r\n    ) {\r\n      this.setState({ error: false });\r\n      this.setState({ error: false });\r\n      this.props.recuperoPassword(userData);\r\n      this.setState({ modalShow: true });\r\n    } else {\r\n      this.setState({ error: true });\r\n      this.state.errors.email = \"L'email inserita non risulta registrata\";\r\n    }\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit1 = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      otp: this.state.otp,\r\n    };\r\n    this.props.codiceOTP(userData);\r\n    if (!this.state.errors.otp) {\r\n      this.setState({ modalShow: true });\r\n    } else {\r\n      this.setState({ modalShow1: true });\r\n    } //mettere notifica di errore con else\r\n  };\r\n  onSubmit2 = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ error: false });\r\n    const dataUser = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n    this.props.modificaPassword(this.state.email, dataUser);\r\n    if (this.state.password === \"\") {\r\n      this.state.errors.password = \"Inserisci la password\";\r\n      this.setState({ error: true });\r\n    } else if (this.state.password2 === \"\") {\r\n      this.state.errors.password2 = \"Conferma la password\";\r\n      this.setState({ error: true });\r\n    } else if (this.state.password.length < 6) {\r\n      this.state.errors.password =\r\n        \"La password deve essere di minimo 6 caratteri\";\r\n      this.setState({ error: true });\r\n    } else if (this.state.password !== this.state.password2) {\r\n      this.state.errors.password2 = \"Le due password non corrispondono\";\r\n      this.setState({ error: true });\r\n    } else {\r\n      this.setState({ error: false });\r\n      this.setState({ modalShow: false });\r\n      this.props.history.push(`/login`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n              <div className=\"form\">\r\n                <form noValidate onSubmit={this.onSubmit1}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                    Inserisci il codice OTP inviato alla tua email\r\n                  </h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"otp\">Codice OTP</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.otp}\r\n                      error={errors.otp}\r\n                      id=\"otp\"\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.otp,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.otp}</span>\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Verifica\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow1}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit2}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                    Inserisci la nuova password\r\n                  </h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                      error={errors.password}\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password,\r\n                      })}\r\n                    />\r\n                    {this.state.error ? (\r\n                      <span className=\"red-text\">{errors.password}</span>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">Conferma Password</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password2}\r\n                      error={errors.password2}\r\n                      id=\"password2\"\r\n                      type=\"password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password2,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.password2}</span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Avanti\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container style={{ marginTop: \"10rem\", marginBottom: \"17rem\" }}>\r\n          <div className=\"form\">\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                Inserisci l'email\r\n              </h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.email || errors.emailnotfound,\r\n                  })}\r\n                />\r\n                {this.state.error ? (\r\n                  <span className=\"red-text\">\r\n                    {errors.email}\r\n                    {errors.emailnotfound}\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                value=\"Registrazione Log\"\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n              >\r\n                Recupera\r\n              </button>\r\n              <h5 style={{ marginTop: \"1rem\", color: \"black\" }}>\r\n                <p className=\"forgot-password text-right\">\r\n                  Non hai un account? <Link to=\"/register\">Registrati</Link>\r\n                </p>\r\n              </h5>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nEmail.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  codiceOTP: PropTypes.func.isRequired,\r\n  recuperoPassword: PropTypes.func.isRequired,\r\n  modificaPassword: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginUser,\r\n  recuperoPassword,\r\n  codiceOTP,\r\n  modificaPassword,\r\n})(Email);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Chisiamo.js",["310","311","312","313","314"],"import React, { Component } from \"react\";\r\nimport '../App.css';\r\nimport Noi from '../immagini/chisiamo1.png';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class Chisiamo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n\r\n   render(){ \r\n      return( \r\n         <div className='Chisiamo'> \r\n                <img src={Noi} alt=\"studenti\" width=\"60%\" className='imgChisiamo' />\r\n         </div>\r\n      ); \r\n   } \r\n}\r\n\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\modificaPassword.js",["315","316","317","318","319"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  recuperoPassword,\r\n  codiceOTP,\r\n  modificaPassword2,\r\n} from \"../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass ModificaPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      vecchiapassword: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errore: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const dataUser = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n\r\n    if (\r\n      this.state.vecchiapassword === \"123456\" ||\r\n      this.state.vecchiapassword === \"987654321\" ||\r\n      this.state.vecchiapassword === \"123456789\"\r\n    ) {\r\n      this.props.modificaPassword2(this.state.email, dataUser);\r\n    } else {\r\n      this.setState({ errore: true });\r\n      this.state.errors.vecchiapassword = \"Hai inserito una password sbagliata\";\r\n    }\r\n    //this.props.history.push(\"/HomeCliente\");\r\n\r\n    //aggiungere notifica\r\n    //aggiungere notifica errore\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.state.email = user.email;\r\n\r\n    return (\r\n      // dentro div {this.status.errore && setStateModal(true)}\r\n      <Container style={{ marginTop: \"12rem\", marginBottom: \"15rem\" }}>\r\n        <div className=\"Form\">\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n              Qui puoi modificare la tua password\r\n            </h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Vecchia Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.vecchiapassword}\r\n                id=\"vecchiapassword\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.vecchiapassword,\r\n                })}\r\n              />\r\n              {this.state.errore ? (\r\n                <span className=\"red-text\">{errors.vecchiapassword}</span>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Nuova Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.password,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.password}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password2\">Conferma Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password2}\r\n                error={errors.password2}\r\n                id=\"password2\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.password2,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.password2}</span>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Registrazione Log\"\r\n              className=\"btn btn-dark btn-lg btn-block bottone\"\r\n            >\r\n              Conferma\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nModificaPassword.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  modificaPassword2: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginUser,\r\n  modificaPassword2,\r\n  logoutUser,\r\n})(withRouter(ModificaPassword));\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\aggiornaPatente.js",["320"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  modificaPatente,\r\n} from \"../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Patente extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id_utente: \"\",\r\n      numero_patente: \"\",\r\n      data_rilascio_patente: \"\",\r\n      data_scadenza_patente: \"\",\r\n      ente_rilascio: \"\",\r\n      type: \"text\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  setType = (tipo) => {\r\n    this.setState({ type: \"date\" });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const dataUser = {\r\n      numero_patente: this.state.numero_patente,\r\n      data_rilascio_patente: this.state.data_rilascio_patente,\r\n      data_scadenza_patente: this.state.data_scadenza_patente,\r\n      ente_rilascio: this.state.ente_rilascio,\r\n    };\r\n    this.props.modificaPatente(this.state.id, dataUser);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.state.id = user.id;\r\n    console.log(user.numero_patente);\r\n    return (\r\n      <Container style={{ marginTop: \"12rem\", marginBottom: \"15rem\" }}>\r\n        <div className=\"Form\">\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n              Inserisci o aggiorna la patente\r\n            </h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"numero_patente\">Numero Patente</label>\r\n              <input\r\n                placeholder={user.numero_patente}\r\n                onChange={this.onChange}\r\n                value={this.state.numero_patente}\r\n                error={errors.numero_patente}\r\n                id=\"numero_patente\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.numero_patente,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.numero_patente}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"data_rilascio_patente\">Data rilascio</label>\r\n              <input\r\n                type={this.state.type}\r\n                onFocus={() => this.setType(\"date\")}\r\n                placeholder={user.data_rilascio_patente.substring(0, 10)}\r\n                onChange={this.onChange}\r\n                value={this.state.data_rilascio_patente}\r\n                error={errors.data_rilascio_patente}\r\n                id=\"data_rilascio_patente\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.data_rilascio_patente,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.data_rilascio_patente}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"data_scadenza_patente\">Data scadenza</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                type={this.state.type}\r\n                onFocus={() => this.setType(\"date\")}\r\n                placeholder={user.data_scadenza_patente.substring(0, 10)}\r\n                value={this.state.data_scadenza_patente}\r\n                error={errors.data_scadenza_patente}\r\n                id=\"data_scadenza_patente\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.data_scadenza_patente,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.data_scadenza_patente}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ente_rilascio\">Ente rilascio</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                placeholder={user.ente_rilascio}\r\n                value={this.state.ente_rilascio}\r\n                error={errors.ente_rilascio}\r\n                id=\"ente_rilascio\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.ente_rilascio,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.ente_rilascio}</span>\r\n            </div>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Link to=\"/IlMioProfilo\">\r\n                  <button className=\"btn btn-primary btn-lg btn-block bottone\">\r\n                    Annulla\r\n                  </button>\r\n                </Link>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Registrazione Log\"\r\n                  className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                >\r\n                  Conferma\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nPatente.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  modificaPatente: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginUser,\r\n  modificaPatente,\r\n  logoutUser,\r\n})(withRouter(Patente));\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\IlMioProfilo.js",["321"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/authAutentications\";\r\nimport { Container, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet stileProfilo;\r\n\r\nclass IlMioProfilo extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    if (user.ruolo === \"Admin\") stileProfilo = \"Admin\";\r\n    else if (user.ruolo === \"Autista\") stileProfilo = \"Autista\";\r\n    else if (user.ruolo === \"Addetto\") stileProfilo = \"Addetto\";\r\n    //localStorage.setItem(\"patenteaggiunta\", false);\r\n    switch (stileProfilo) {\r\n      case \"Admin\":\r\n        return (\r\n          <div\r\n            className=\"dashboardAutista\"\r\n            style={{ backgroundColor: \"#010101\", paddingBottom: \"32rem\" }}\r\n          >\r\n            <Container\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col sm>\r\n                  <h1>\r\n                    Benvenuto <b>{user.nome}</b>, qui puoi modificare il tuo\r\n                    profilo\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col sm={4} className=\"colonnaAutista\">\r\n                  <Link to=\"/ModificaPassword\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Cambia Password\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      case \"Autista\":\r\n        return (\r\n          <div\r\n            className=\"dashboardAutista\"\r\n            style={{ backgroundColor: \"#010101\" }}\r\n          >\r\n            <Container\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"21rem\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <h1>\r\n                    Benvenuto <b>{user.nome}</b>, qui puoi modificare il tuo\r\n                    profilo\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/ModificaPassword\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Cambia Password\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/Patente\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Inserisci o aggiorna patente\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      case \"Addetto\":\r\n        return (\r\n          <div\r\n            className=\"dashboardAutista\"\r\n            style={{ backgroundColor: \"#010101\" }}\r\n          >\r\n            <Container\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"21rem\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <h1>\r\n                    Benvenuto <b>{user.nome}</b>, qui puoi modificare il tuo\r\n                    profilo\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/ModificaPassword\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Cambia Password\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/ModificaParcheggio\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Modifica Parcheggio Associato\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      default:\r\n        //cliente\r\n        return (\r\n          <div\r\n            className=\"dashboardAutista\"\r\n            style={{\r\n              backgroundColor: \"#010101\",\r\n              paddingBottom: \"28rem\",\r\n            }}\r\n          >\r\n            <Container\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <h1>\r\n                    Benvenuto <b>{user.nome}</b>, qui puoi modificare il tuo\r\n                    profilo\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/ModificaPassword\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Cambio Password\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/MetodiDiPagamento\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      I miei metodi di pagamento\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col sm={6} className=\"colonnaAutista\">\r\n                  <Link to=\"/Patente\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      className=\"bottone\"\r\n                    >\r\n                      Inserisci o aggiorna patente\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nIlMioProfilo.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(IlMioProfilo);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\notfound404.js",["322"],"import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport logo from \"../immagini/logo.png\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class notFound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      speed: 3,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Chisiamo\" style={{ paddingBottom: \"6rem\" }}>\r\n        <Container>\r\n          <Row>\r\n            <Col sm>\r\n              <h1 className=\"testonotfound\">4</h1>\r\n            </Col>\r\n            <Col sm>\r\n              <img\r\n                style={{\r\n                  animation: `spin ${this.state.speed}s linear infinite`,\r\n                  marginTop: \"3rem\",\r\n                }}\r\n                src={logo}\r\n                alt=\"img\"\r\n                width=\"110%\"\r\n                className=\"logonotfound\"\r\n              />\r\n            </Col>\r\n            <Col sm>\r\n              <h1 className=\"testonotfound\">4</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm>\r\n              <h5 style={{ fontWeight: \"400\" }}>\r\n                La pagina che stavi cercando non esiste!{\" \"}\r\n                <Link to=\"/HomeCliente\">Premi qui </Link> per tornare alla Home\r\n              </h5>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\GestioneCorsa.js",["323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, setCurrentUser } from \"../actions/authAutentications\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  ListaPrenotazioni,\r\n  cancellaPrenotazione,\r\n  modificaStatoPrenotazione2,\r\n  modificaStatoPrenotazione,\r\n} from \"../actions/prenotazioniActions\";\r\nimport \"../App.css\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n  Card,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Mappa from \"../../src/componenti/googlemap/mappa\";\r\nimport classnames from \"classnames\";\r\n\r\nclass GestioneCorsa extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      error: false,\r\n      prenotazione_in_corso: false,\r\n      idVeicolo: \"\",\r\n      error2: false,\r\n      messaggio: false,\r\n      messaggio2: false,\r\n    };\r\n  }\r\n\r\n  consegna() {\r\n    const prenotazione = {\r\n      statoiniziale: \"Pagata\",\r\n      stato: \"In-Corso\",\r\n    };\r\n    if (this.state.idVeicolo === \"60f3445a1055ff1cac9afb11\") {\r\n      this.props.modificaStatoPrenotazione(prenotazione);\r\n      this.setState({ modalShow: false });\r\n      this.setState({ messaggio: true });\r\n      this.setState({ prenotazione_in_corso: true });\r\n    } else this.setState({ error2: true });\r\n  }\r\n\r\n  controllaprenotazioneUno() {\r\n    if (this.state.prenotazione_in_corso === false) {\r\n      this.setState({ error: true });\r\n    } else {\r\n      const prenotazione = {\r\n        statoiniziale: \"In-Corso\",\r\n        stato: \"Terminata\",\r\n      };\r\n      this.setState({ messaggio2: true });\r\n      this.setState({ prenotazione_in_corso: false });\r\n      this.props.modificaStatoPrenotazione(prenotazione);\r\n    }\r\n  }\r\n\r\n  controllaprenotazioneDue() {\r\n    if (this.state.prenotazione_in_corso === false) {\r\n      this.setState({ error: true });\r\n    } else this.props.comunicaGuasto();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    if (user.ruolo === \"Admin\" || user.ruolo === \"Addetto\") {\r\n      return <div></div>;\r\n    } else if (user.ruolo === \"Cliente\" || user.ruolo === \"Autista\") {\r\n      return (\r\n        <Container fluid style={{ backgroundColor: \"#010101\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow}\r\n            onHide={() => this.setState({ modalShow: false })}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci il codice identificativo del veicolo\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"idVeicolo\">Codice identificativo veicolo</label>\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.idVeicolo}\r\n                  id=\"idVeicolo\"\r\n                />\r\n                {!this.state.error2 ? null : (\r\n                  <span className=\"red-text\">\r\n                    Hai inserito un codice identificativo errato o il veicolo\r\n                    non ha una prenotazione in questo momento\r\n                  </span>\r\n                )}{\" \"}\r\n              </div>\r\n              <Button onClick={() => this.consegna()}>Avanti</Button>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setState({ modalShow: false })}>\r\n                Annulla\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          {this.state.error ? (\r\n            <Row\r\n              className=\"justify-content-md-center\"\r\n              style={{ display: \"block\" }}\r\n            >\r\n              <Alert\r\n                variant=\"danger\"\r\n                style={{\r\n                  zIndex: \"1000\",\r\n                  justifyItems: \"center\",\r\n                  width: \"400rem\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Non hai una prenotazione in corso\r\n              </Alert>\r\n            </Row>\r\n          ) : null}\r\n          {this.state.messaggio ? (\r\n            <Row\r\n              className=\"justify-content-md-center\"\r\n              style={{ display: \"block\" }}\r\n            >\r\n              <Alert\r\n                variant=\"success\"\r\n                style={{\r\n                  zIndex: \"1000\",\r\n                  justifyItems: \"center\",\r\n                  width: \"400rem\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Hai avviato la corsa!\r\n              </Alert>\r\n            </Row>\r\n          ) : null}\r\n          {this.state.messaggio2 ? (\r\n            <Row\r\n              className=\"justify-content-md-center\"\r\n              style={{ display: \"block\" }}\r\n            >\r\n              <Alert\r\n                variant=\"success\"\r\n                style={{\r\n                  zIndex: \"1000\",\r\n                  justifyItems: \"center\",\r\n                  width: \"400rem\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                Hai terminato correttamente la corsa!\r\n              </Alert>\r\n            </Row>\r\n          ) : null}\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={3}>\r\n              <button\r\n                class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                onClick={() => this.setState({ modalShow: true })}\r\n              >\r\n                Consegna\r\n              </button>\r\n              <br />\r\n            </Col>\r\n            <Col sm={3}>\r\n              <button\r\n                class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                onClick={() => this.controllaprenotazioneUno()}\r\n              >\r\n                Rilascio\r\n              </button>\r\n              <br />\r\n            </Col>\r\n            <Col sm={3}>\r\n              <button\r\n                class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                onClick={() => this.controllaprenotazioneDue()}\r\n              >\r\n                Comunica Guasto\r\n              </button>\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Mappa style={{ zIndex: \"0\" }} />\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\nGestioneCorsa.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  modificaStatoPrenotazione: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  logoutUser,\r\n  modificaStatoPrenotazione,\r\n})(GestioneCorsa);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\Notifiche.js",["335","336","337","338","339","340","341","342","343","344","345"],"import React, { Component } from \"react\";\r\nimport { inviaNotificheAutisti } from \"../actions/prenotazioniActions\";\r\nimport { ListaNotifiche } from \"../actions/notificheActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  inviaNotificaCliente,\r\n  cancellaNotifica,\r\n} from \"../actions/notificheActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n  Card,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\n\r\nimport Logo from \"../immagini/logo1.png\";\r\n\r\nimport \"../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass NotificheLista extends Component {\r\n  state = {\r\n    errors: {},\r\n    id: \"\",\r\n    ruolo: \"\",\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  accettaNotifica(id, utente) {\r\n    this.props.inviaNotificaCliente(utente);\r\n    this.props.cancellaNotifica(id);\r\n    window.location.reload();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const Cliente = {\r\n      id: this.state.id,\r\n      ruolo: this.state.ruolo,\r\n    };\r\n    await this.props.ListaNotifiche(Cliente);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { notifica } = this.props.listanotifiche;\r\n    const { user } = this.props.auth;\r\n    this.state.id = user.id;\r\n    this.state.ruolo = user.ruolo;\r\n    console.log(this.state.id);\r\n    const today = new Date();\r\n    const NL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          {notifica.map((notifica) => (\r\n            <Col xs={12}>\r\n              <Toast show={true} style={{ maxWidth: \"900px\" }}>\r\n                <Toast.Header>\r\n                  <img\r\n                    src={Logo}\r\n                    className=\"rounded mr-2\"\r\n                    alt=\"logo-karm\"\r\n                    width=\"100vw\"\r\n                  />\r\n                  <strong\r\n                    className=\"mr-auto\"\r\n                    style={{\r\n                      color: \"#010101\",\r\n                      fontWeight: \"600\",\r\n                      fontFamily: \"Montserrat\",\r\n                    }}\r\n                  >\r\n                    {notifica.titolo}\r\n                  </strong>\r\n                  <small\r\n                    syle={{\r\n                      color: \"#010101\",\r\n                    }}\r\n                  >\r\n                    {notifica.createdAt.substring(0, 10)}\r\n                  </small>\r\n                </Toast.Header>\r\n                <Toast.Body\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    fontWeight: \"600\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  {notifica.descrizione} <br />\r\n                  <br />\r\n                  {user.ruolo === \"Autista\" ? (\r\n                    <Row className=\"justify-content-md-center\">\r\n                      <Col sm={3}>\r\n                        <button\r\n                          class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                          onClick={() =>\r\n                            this.accettaNotifica(\r\n                              notifica._id,\r\n                              notifica.id_utente\r\n                            )\r\n                          }\r\n                        >\r\n                          Accetta\r\n                        </button>\r\n                      </Col>\r\n                      <Col sm={3}>\r\n                        <button\r\n                          class=\"btn btn-dark btn-lg btn-block bottone\"\r\n                          onClick={() => {\r\n                            this.props.cancellaNotifica(notifica._id);\r\n                            window.location.reload();\r\n                          }}\r\n                        >\r\n                          Rifiuta\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : (\r\n                    <Row className=\"justify-content-md-center\">\r\n                      <Col sm={5}>\r\n                        <button\r\n                          class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                          onClick={() => {\r\n                            this.props.cancellaNotifica(notifica._id);\r\n                            window.location.href = \"/RiepilogoPrenotazione\";\r\n                          }}\r\n                        >\r\n                          Completa Operazione\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                </Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    return (\r\n      <Container fluid style={{ marginBottom: \"3rem\", paddingBottom: \"39rem\" }}>\r\n        <Container sm={12}>\r\n          {notifica.length === 0 ? \"Non ci sono notifiche\" : NL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nNotificheLista.propTypes = {\r\n  ListaNotifiche: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listanotifiche: PropTypes.object.isRequired,\r\n  inviaNotificaCliente: PropTypes.func.isRequired,\r\n  cancellaNotifica: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listanotifiche: state.listanotifiche,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  ListaNotifiche,\r\n  inviaNotificaCliente,\r\n  cancellaNotifica,\r\n})(NotificheLista);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\VisualizzaPrenotazioni.js",["346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  ListaPrenotazioni,\r\n  cancellaPrenotazione,\r\n  modificaStatoPrenotazione2,\r\n} from \"../actions/prenotazioniActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Alert } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport ricercaFiltro from \"../utils/ricercaFiltro\";\r\n\r\nclass VisualizzaPrenotazioni extends Component {\r\n  state = {\r\n    tipo: \"\",\r\n    filtroStato: \"\",\r\n    utente: \"\",\r\n    currentPrenotazione: \"\",\r\n    currentTipoVeicolo: \"\",\r\n    messaggioerrore: \"\",\r\n    currentDataPrenotazione: \"\",\r\n    currentid: \"\",\r\n    messaggio: true,\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const utente = {\r\n      id: this.state.utente,\r\n      ruolo: this.state.tipo,\r\n    };\r\n    await this.props.ListaPrenotazioni(utente);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  deletePrenotazione(id) {\r\n    this.setState({ modalShow1: true });\r\n    //this.props.cancellaPrenotazione(id);\r\n  }\r\n  modificaVeicolo(id) {\r\n    const today = new Date();\r\n    if (\r\n      this.state.currentDataPrenotazione.substring(8, 10) <\r\n      today.getDate() + 1\r\n    ) {\r\n      this.setState({ modalShow: false });\r\n      this.state.messaggioerrore =\r\n        \"Non puoi modificare il veicolo, poichè la prenotazione dista meno di un giorno\";\r\n      this.setState({ showAlert: true });\r\n    } else if (\r\n      this.state.currentTipoVeicolo === \"Bicicletta\" ||\r\n      this.state.currentTipoVeicolo === \"Monopattino\"\r\n    ) {\r\n      this.setState({ modalShow: false });\r\n      this.state.messaggioerrore =\r\n        \"Non puoi modificare il veicolo dato che in fase di prenotazione hai scelto una bicicletto o un monopattino\";\r\n      this.setState({ showAlert: true });\r\n    } else {\r\n      localStorage.setItem(\"id_prenotazione\", id);\r\n      window.location.href = \"/VeicoliLista\";\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  render() {\r\n    const { filtroStato, errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.state.utente = user.id;\r\n    if (user.ruolo === \"Cliente\") this.state.tipo = \"Cliente\";\r\n    else if (user.ruolo === \"Admin\") this.state.tipo = \"Admin\";\r\n    else if (user.ruolo === \"Autista\") this.state.tipo = \"Autista\";\r\n    else if (user.ruolo === \"Addetti\") this.state.tipo = \"Addetto\";\r\n    const { prenotazione } = this.props.listaprenotazioni;\r\n    let prenotazioniFiltrate = [];\r\n    prenotazioniFiltrate = ricercaFiltro(prenotazione, filtroStato, \"stato\");\r\n    const PRLC = (\r\n      <div className=\"container\" style={{ marginBottom: \"14rem\" }}>\r\n        <h1\r\n          style={{\r\n            color: \"#010101\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n        >\r\n          Le tue prenotazioni\r\n        </h1>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID Veicolo</th>\r\n                <th>Partenza</th>\r\n                <th>Data Partenza</th>\r\n                <th>Ora Partenza</th>\r\n                <th>Data Arrivo</th>\r\n                <th>Ora Arrivo</th>\r\n                <th>Stato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prenotazioniFiltrate.map((prenotazione) => (\r\n                <tr key={prenotazione._id}>\r\n                  <td>{prenotazione.idVeicolo}</td>\r\n                  <td>{prenotazione.partenza}</td>\r\n                  <td>{prenotazione.data_partenza.substring(0, 10)}</td>\r\n                  <td>{prenotazione.ora_partenza}</td>\r\n                  <td>{prenotazione.data_arrivo.substring(0, 10)}</td>\r\n                  <td>{prenotazione.ora_arrivo}</td>\r\n                  <td>{prenotazione.stato}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {prenotazione.stato !== \"Terminata\" &&\r\n                    prenotazione.stato !== \"Annullata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => {\r\n                          this.setModalShow(true);\r\n                          this.state.currentPrenotazione = prenotazione._id;\r\n                          this.state.currentTipoVeicolo =\r\n                            prenotazione.tipo_veicolo;\r\n                          this.state.currentDataPrenotazione =\r\n                            prenotazione.data_partenza;\r\n                          localStorage.setItem(\r\n                            \"data_arrivo\",\r\n                            prenotazione.data_arrivo\r\n                          );\r\n                          localStorage.setItem(\r\n                            \"ora_arrivo\",\r\n                            prenotazione.ora_arrivo\r\n                          );\r\n                          localStorage.setItem(\r\n                            \"destinazione\",\r\n                            prenotazione.partenza\r\n                          );\r\n                          localStorage.setItem(\r\n                            \"id_prenotazione\",\r\n                            prenotazione._id\r\n                          );\r\n                        }}\r\n                      >\r\n                        <i class=\"material-icons\">create</i>\r\n                      </button>\r\n                    ) : null}\r\n                    {prenotazione.stato !== \"Terminata\" &&\r\n                    prenotazione.stato !== \"Annullata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => {\r\n                          this.deletePrenotazione(prenotazione._id);\r\n                          this.setState({ currentid: prenotazione._id });\r\n                        }}\r\n                      >\r\n                        <i class=\"material-icons\">delete</i>\r\n                      </button>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    const PRLA = (\r\n      <div className=\"container\" style={{ marginBottom: \"14rem\" }}>\r\n        <h1\r\n          style={{\r\n            color: \"#010101\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n        >\r\n          Le prenotazioni di tutti i clienti\r\n        </h1>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID Cliente</th>\r\n                <th>Partenza</th>\r\n                <th>Data Partenza</th>\r\n                <th>Ora Partenza</th>\r\n                <th>Data Arrivo</th>\r\n                <th>Ora Arrivo</th>\r\n                <th>Parcheggio Destinazione</th>\r\n                <th>Autista</th>\r\n                <th>Stato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prenotazioniFiltrate.map((prenotazione) => (\r\n                <tr key={prenotazione._id}>\r\n                  <td>{prenotazione.idCliente}</td>\r\n                  <td>{prenotazione.partenza}</td>\r\n                  <td>{prenotazione.data_partenza}</td>\r\n                  <td>{prenotazione.ora_partenza}</td>\r\n                  <td>{prenotazione.data_arrivo}</td>\r\n                  <td>{prenotazione.ora_arrivo}</td>\r\n                  <td>{prenotazione.parcheggio_destinazione}</td>\r\n                  <td>{prenotazione.idAutista}</td>\r\n                  <td>{prenotazione.stato}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">create</i>\r\n                      </button>\r\n                    ) : null}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">delete</i>\r\n                      </button>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    const PRLAD = (\r\n      <div className=\"container\" style={{ marginBottom: \"14rem\" }}>\r\n        <h1\r\n          style={{\r\n            color: \"#010101\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n        >\r\n          Le prenotazioni per il tuo Parcheggio\r\n        </h1>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID Cliente</th>\r\n                <th>Partenza</th>\r\n                <th>Data Partenza</th>\r\n                <th>Ora Partenza</th>\r\n                <th>Data Arrivo</th>\r\n                <th>Ora Arrivo</th>\r\n                <th>Parcheggio Destinazione</th>\r\n                <th>Autista</th>\r\n                <th>Stato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prenotazioniFiltrate.map((prenotazione) => (\r\n                <tr key={prenotazione._id}>\r\n                  <td>{prenotazione.idCliente}</td>\r\n                  <td>{prenotazione.partenza}</td>\r\n                  <td>{prenotazione.data_partenza}</td>\r\n                  <td>{prenotazione.ora_partenza}</td>\r\n                  <td>{prenotazione.data_arrivo}</td>\r\n                  <td>{prenotazione.ora_arrivo}</td>\r\n                  <td>{prenotazione.parcheggio_destinazione}</td>\r\n                  <td>{prenotazione.idAutista}</td>\r\n                  <td>{prenotazione.stato}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">create</i>\r\n                      </button>\r\n                    ) : null}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">delete</i>\r\n                      </button>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    const PRLAU = (\r\n      <div className=\"container\" style={{ marginBottom: \"14rem\" }}>\r\n        <h1\r\n          style={{\r\n            color: \"#010101\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bolder\",\r\n          }}\r\n        >\r\n          Le prenotazioni che hai accettato\r\n        </h1>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID Cliente</th>\r\n                <th>Partenza</th>\r\n                <th>Data Partenza</th>\r\n                <th>Ora Partenza</th>\r\n                <th>Data Arrivo</th>\r\n                <th>Ora Arrivo</th>\r\n                <th>Parcheggio Destinazione</th>\r\n                <th>Autista</th>\r\n                <th>Stato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {prenotazioniFiltrate.map((prenotazione) => (\r\n                <tr key={prenotazione._id}>\r\n                  <td>{prenotazione.idCliente}</td>\r\n                  <td>{prenotazione.partenza}</td>\r\n                  <td>{prenotazione.data_partenza}</td>\r\n                  <td>{prenotazione.ora_partenza}</td>\r\n                  <td>{prenotazione.data_arrivo}</td>\r\n                  <td>{prenotazione.ora_arrivo}</td>\r\n                  <td>{prenotazione.parcheggio_destinazione}</td>\r\n                  <td>{prenotazione.idAutista}</td>\r\n                  <td>{prenotazione.stato}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">create</i>\r\n                      </button>\r\n                    ) : null}\r\n                    {prenotazione.stato !== \"Terminata\" ? (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => console.log(prenotazione.destinazione)}\r\n                      >\r\n                        <i class=\"material-icons\">delete</i>\r\n                      </button>\r\n                    ) : null}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (user.ruolo === \"Admin\") {\r\n      return (\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"39rem\" }}>\r\n          <div className=\"row\">\r\n            {prenotazione.length === 0 ? \"Non ci sono prenotazioni\" : PRLA}\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else if (user.ruolo === \"Cliente\") {\r\n      return (\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"39rem\" }}>\r\n          {this.state.messaggio ? null : (\r\n            <Alert variant=\"success\">\r\n              Hai annullato la prenotazione!\r\n              <Alert.Link href=\"/VisualizzaPrenotazioni\">\r\n                {\" \"}\r\n                Premi qui{\" \"}\r\n              </Alert.Link>\r\n              per visualizzare il cambiamento\r\n            </Alert>\r\n          )}\r\n          {this.state.showAlert ? (\r\n            <Alert variant=\"danger\">{this.state.messaggioerrore}</Alert>\r\n          ) : null}\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow}\r\n            onHide={() => this.setState({ modalShow: false })}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Scegli cosa modificare\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Col sm={4}>\r\n                    <button\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() =>\r\n                        this.modificaVeicolo(this.state.currentPrenotazione)\r\n                      }\r\n                    >\r\n                      Modifica Veicolo\r\n                    </button>\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    <button\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() => {\r\n                        localStorage.setItem(\r\n                          \"id_prenotazione\",\r\n                          this.state.currentPrenotazione\r\n                        );\r\n                        window.location.href = \"/ModificaArrivo\";\r\n                      }}\r\n                    >\r\n                      Modifica Arrivo\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow1}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Sei sicuro di voler cancellare questa prenotazione?\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <Row className=\"justify-content-md-center\">\r\n                  <Col sm={4}>\r\n                    <button\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                      onClick={() => {\r\n                        const prenotazione = {\r\n                          stato: \"Annullata\",\r\n                        };\r\n                        this.props.modificaStatoPrenotazione2(\r\n                          this.state.currentid,\r\n                          prenotazione\r\n                        );\r\n                        this.setState({ modalShow1: false });\r\n                        this.setState({ messaggio: false });\r\n                        window.location.reload();\r\n                        this.setState({ messaggio: false });\r\n                      }}\r\n                    >\r\n                      Conferma\r\n                    </button>\r\n                  </Col>\r\n                  <Col sm={4}>\r\n                    <button\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() => {\r\n                        localStorage.setItem(\r\n                          \"id_prenotazione\",\r\n                          this.state.currentPrenotazione\r\n                        );\r\n                        window.location.href = \"/ModificaArrivo\";\r\n                      }}\r\n                    >\r\n                      Annulla\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setState({ modalShow1: false })}>\r\n                Annulla\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={3}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"stato\">Stato</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroStato\", event.target.value)\r\n                  }\r\n                  id=\"stato\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"row\">\r\n            {prenotazione.length === 0 ? \"Non ci sono prenotazioni\" : PRLC}\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else if (user.ruolo === \"Autista\") {\r\n      return (\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"39rem\" }}>\r\n          <div className=\"row\">\r\n            {prenotazione.length === 0 ? \"Non ci sono prenotazioni\" : PRLAU}\r\n          </div>\r\n        </Container>\r\n      );\r\n    } else if (user.ruolo === \"Addetto\") {\r\n      return (\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"39rem\" }}>\r\n          <div className=\"row\">\r\n            {prenotazione.length === 0 ? \"Non ci sono prenotazioni\" : PRLAD}\r\n          </div>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nVisualizzaPrenotazioni.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaprenotazioni: PropTypes.object.isRequired,\r\n  ListaPrenotazioni: PropTypes.func.isRequired,\r\n  cancellaPrenotazione: PropTypes.func.isRequired,\r\n  modificaStatoPrenotazione2: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaprenotazioni: state.listaprenotazioni,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  ListaPrenotazioni,\r\n  cancellaPrenotazione,\r\n  modificaStatoPrenotazione2,\r\n})(withRouter(VisualizzaPrenotazioni));\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\modificaArrivo.js",["359","360","361","362","363","364","365"],"import { Listaveicolidisponibili } from \"../actions/veicoliActions\";\r\nimport { Listaparcheggi } from \"../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  registerPrenotazione,\r\n  modificaPrenotazione,\r\n} from \"../actions/prenotazioniActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport classnames from \"classnames\";\r\nimport Mappa from \"../../src/componenti/googlemap/mappa\";\r\n\r\nimport filtriVeicoli from \"../../src/utils/filtriVeicoli\";\r\n\r\nclass ModificaArrivo extends Component {\r\n  state = {\r\n    data_arrivo: \"\",\r\n    ora_arrivo: \"\",\r\n    destinazione: \"\",\r\n    type: false,\r\n    error: false,\r\n    errors: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n  setType = (tipo) => {\r\n    this.setState({ type: \"date\" });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ error: false });\r\n    if (this.state.data_arrivo === \"\") {\r\n      this.state.errors.data_arrivo = \"Inserisci la data di arrivo\";\r\n      await this.setState({ error: true });\r\n    }\r\n    if (this.state.ora_arrivo === \"\") {\r\n      this.state.errors.ora_arrivo = \"Inserisci l'ora di arrivo\";\r\n      this.setState({ error: true });\r\n    }\r\n    if (this.state.destinazione === \"\") {\r\n      this.state.errors.destinazione = \"Inserisci la destinazione\";\r\n      this.setState({ error: true });\r\n    }\r\n    if (this.state.error === false) {\r\n      const Prenotazione = {\r\n        data_arrivo: this.state.data_arrivo,\r\n        ora_arrivo: this.state.ora_arrivo,\r\n        destinazione: this.state.destinazione,\r\n      };\r\n      this.props.modificaPrenotazione(\r\n        localStorage.getItem(\"id_prenotazione\"),\r\n        Prenotazione\r\n      );\r\n      this.setState({ modalShow: true });\r\n    }\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Container fluid>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Hai scelto di modificare i seguenti dati:\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col sm={4}>\r\n                  <h2 style={{ color: \"#010101\", fontSize: \"18px\" }}>\r\n                    Data Arrivo: {this.state.data_arrivo}\r\n                  </h2>\r\n                  <h2 style={{ color: \"#010101\", fontSize: \"18px\" }}>\r\n                    Ora Arrivo: {this.state.ora_arrivo}\r\n                  </h2>\r\n                  <h2 style={{ color: \"#010101\", fontSize: \"18px\" }}>\r\n                    Destinazione: {this.state.destinazione}\r\n                  </h2>{\" \"}\r\n                  <br />\r\n                  <h2 style={{ color: \"#010101\", fontSize: \"18px\" }}>\r\n                    Sovraprezzo calcolato: 0\r\n                  </h2>\r\n                  <button\r\n                    className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() =>\r\n                      (window.location.href = \"/VisualizzaPrenotazioni\")\r\n                    }\r\n                  >\r\n                    Avanti\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container sm={12} style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n          <div className=\"Form\">\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                Modifica i campi\r\n              </h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"data_arrivo\">Data Arrivo</label>\r\n                <input\r\n                  placeholder={localStorage\r\n                    .getItem(\"data_arrivo\")\r\n                    .substring(0, 10)}\r\n                  onChange={this.onChange}\r\n                  value={this.state.data_arrivo}\r\n                  error={errors.data_arrivo}\r\n                  id=\"data_arrivo\"\r\n                  type={this.state.type ? \"date\" : \"text\"}\r\n                  onFocus={() => this.setType(true)}\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.data_arrivo,\r\n                  })}\r\n                />\r\n                {!this.state.error ? null : (\r\n                  <span className=\"red-text\">{errors.data_arrivo}</span>\r\n                )}{\" \"}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"destinazione\">Parcheggio Destinazione</label>\r\n                <input\r\n                  placeholder={localStorage.getItem(\"destinazione\")}\r\n                  onChange={this.onChange}\r\n                  value={this.state.destinazione}\r\n                  error={errors.destinazione}\r\n                  id=\"destinazione\"\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.destinazione,\r\n                  })}\r\n                />\r\n                {!this.state.error ? null : (\r\n                  <span className=\"red-text\">{errors.destinazione}</span>\r\n                )}{\" \"}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ora_arrivo\">Ora Destinazione</label>\r\n                <input\r\n                  placeholder={localStorage.getItem(\"ora_partenza\")}\r\n                  onChange={this.onChange}\r\n                  value={this.state.ora_arrivo}\r\n                  error={errors.ora_arrivo}\r\n                  id=\"ora_arrivo\"\r\n                  type={this.state.type ? \"time\" : \"text\"}\r\n                  onFocus={() => this.setType(true)}\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.ora_arrivo,\r\n                  })}\r\n                />\r\n                {!this.state.error ? null : (\r\n                  <span className=\"red-text\">{errors.ora_arrivo}</span>\r\n                )}{\" \"}\r\n              </div>\r\n              <Row className=\"justify-content-md-center\">\r\n                <Col sm={3}>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Mappa style={{ zIndex: \"0\" }} />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nModificaArrivo.propTypes = {\r\n  modificaPrenotazione: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  modificaPrenotazione,\r\n})(ModificaArrivo);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\errorServer.js",["366"],"import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport logo from \"../immagini/logo.png\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class errorServer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      speed: 3,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Chisiamo\" style={{ paddingBottom: \"9rem\" }}>\r\n        <Container>\r\n          <Row>\r\n            <Col sm>\r\n              <img\r\n                style={{\r\n                  animation: `spin ${this.state.speed}s linear infinite`,\r\n                  marginTop: \"3rem\",\r\n                }}\r\n                src={logo}\r\n                alt=\"img\"\r\n                width=\"50vw\"\r\n                className=\"logonotfound\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm>\r\n              <h5 style={{ fontWeight: \"400\" }}>\r\n                Il server è crashato! <Link to=\"/HomeCliente\">Premi qui </Link>{\" \"}\r\n                per tornare alla Home\r\n              </h5>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\pagineGeneriche\\VeicoliLista.js",["367","368","369","370","371","372","373","374","375"],"import { Listaveicolidisponibili } from \"../actions/veicoliActions\";\r\nimport React, { Component } from \"react\";\r\nimport { inviaNotificheAutisti } from \"../actions/prenotazioniActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../utils/filtriVeicoli\";\r\n\r\nclass VeicoliLista extends Component {\r\n  state = {\r\n    errors: {},\r\n    filtroModello: \"\",\r\n    filtroCilindrata: \"\",\r\n    id_utente: \"\",\r\n    nome_utente: \"\",\r\n    cognome_utente: \"\",\r\n    prenotazione: \"\",\r\n    current_id: \"\",\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  aggiungiVeicolo() {\r\n    window.location.href = \"/VisualizzaPrenotazioni\";\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const Veicolo = {\r\n      tipo: localStorage.getItem(\"tipoVeicolo\"),\r\n    };\r\n    await this.props.Listaveicolidisponibili(\r\n      localStorage.getItem(\"tipoVeicolo\"),\r\n      Veicolo\r\n    );\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { filtroModello, filtroCilindrata, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { user } = this.props.auth;\r\n    this.state.id_utente = user.id;\r\n    this.state.nome_utente = user.nome;\r\n    this.state.cognome_utente = user.cognome;\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroCilindrata,\r\n      \"cilindrata\"\r\n    );\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div\r\n          class=\"center\"\r\n          style={{ textAlign: \"left\", display: \"flex\", flexWrap: \"wrap\" }}\r\n        >\r\n          {veicoliFiltrati.map((veicolo) => (\r\n            <Card style={{ width: \"18rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{veicolo.marca}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.modello}\r\n                </Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.prezzo_feriale + \"€/ora\"}\r\n                </Card.Subtitle>\r\n                <Card.Text>{veicolo.descrizione}</Card.Text>\r\n                <Card.Link>\r\n                  {\" \"}\r\n                  <button\r\n                    class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() => this.aggiungiVeicolo()}\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    return (\r\n      <Container fluid style={{ marginBottom: \"3rem\" }}>\r\n        <Container sm={12}>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"modello\">Modello</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroModello\", event.target.value)\r\n                  }\r\n                  id=\"modello\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroCilindrata\", event.target.value)\r\n                  }\r\n                  id=\"cilindrata\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <h1\r\n            style={{\r\n              color: \"#010101\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"25px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            VEICOLI DISPONIBILI\r\n          </h1>\r\n          {veicolo.length === 0\r\n            ? \"Non ci sono veicoli per la tipologia scelta disponibili\"\r\n            : VL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nVeicoliLista.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n  inviaNotificheAutisti: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n  inviaNotificheAutisti,\r\n})(VeicoliLista);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\private-route\\PrivateRoute.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\HomeCliente.js",["376","377","378","379"],"import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, setCurrentUser } from \"../../actions/authAutentications\";\r\nimport car from \"../../immagini/CAR.png\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass HomeCliente extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    //Redirect\r\n    if (user.ruolo === \"Admin\") this.props.history.push(\"/Dashboard\");\r\n    else if (user.ruolo === \"Autista\" || user.ruolo === \"Addetto\")\r\n      this.props.history.push(\"/DashboardDipendenti\");\r\n    return (\r\n      <div className=\"HomeCliente\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <h1 style={{ fontWeight: \"bold\" }} className=\"TestoHomeCliente\">\r\n                Il passaggio di cui <br />\r\n                hai bisogno <br />e molto altro\r\n                <h4 style={{ fontWeight: \"300\" }}>\r\n                  Richiedi una corsa, sali sul veicolo e goditi il viaggio.\r\n                </h4>\r\n              </h1>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <img src={car} alt=\"fiat-500\" className=\"Fiat\" />\r\n            </Col>\r\n          </Row>\r\n          <br /> <br /> <br /> <br />\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={3}>\r\n              <Link to=\"/NuovaPrenotazione\">\r\n                <button className=\"btn btn-primary btn-lg btn-block bottone\">\r\n                  Nuova Prenotazione\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <Link to=\"/GestioneCorsa\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Registrazione Log\"\r\n                  className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                >\r\n                  Gestione Corsa\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Link to=\"/VisualizzaPrenotazioni\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Registrazione Log\"\r\n                  className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                >\r\n                  Visualizza Prenotazioni\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n          </Row>{\" \"}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h2 style={{ fontWeight: \"bolder\", textAlign: \"center\" }}>\r\n                {\" \"}\r\n                TROVA IL MEZZO PER ANDARE DOVE VUOI{\" \"}\r\n              </h2>\r\n            </Col>\r\n          </Row>\r\n          <br /> <br />\r\n          <Row>\r\n            <Col sm style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n              <ScheduleIcon style={{ fontSize: 60, color: \"white\" }} />\r\n              <br />\r\n              <br />\r\n              <h5 style={{ fontWeight: \"bolder\" }}>PARTI QUANDO VUOI</h5>\r\n              <h6>\r\n                Richiedi una corsa a qualsiasi ora e in qualsiasi giorno\r\n                dell'anno.\r\n              </h6>\r\n            </Col>\r\n            <Col sm style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n              <LocalAtmIcon style={{ fontSize: 60, color: \"white\" }} />\r\n              <br />\r\n              <br />\r\n              <h5 style={{ fontWeight: \"bolder\" }}>\r\n                OPZIONI A PREZZI ACCESSIBILI\r\n              </h5>\r\n              <h6>\r\n                Confronta i prezzi di tutte le opzioni di corsa, dai tragitti da\r\n                pendolare giornalieri alle serate speciali.\r\n              </h6>\r\n            </Col>\r\n            <Col sm style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n              <MapIcon style={{ fontSize: 60, color: \"white\" }} />\r\n              <br />\r\n              <br />\r\n              <h5 style={{ fontWeight: \"bolder\" }}>\r\n                UN MODO FACILE PER SPOSTARSI\r\n              </h5>\r\n              <h6>\r\n                Tocca per farti accompagnare a destinazione dall’autista o guida\r\n                tu e divertiti\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHomeCliente.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(HomeCliente);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\auth\\Register.js",["380","381"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { registerUser } from \"../../actions/authAutentications\";\r\n\r\n//import type\r\nimport { GET_ERRORS } from \"../../actions/type\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      nome: \"\",\r\n      cognome: \"\",\r\n      data_nascita: \"\",\r\n      sesso: \"\",\r\n      luogo_nascita: \"\",\r\n      provincia_nascita: \"\",\r\n      codice_fiscale: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/HomeCliente\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      nome: this.state.nome,\r\n      cognome: this.state.cognome,\r\n      data_nascita: this.state.data_nascita,\r\n      codice_fiscale: this.state.codice_fiscale.toUpperCase(),\r\n      sesso: this.state.sesso,\r\n      luogo_nascita: this.state.luogo_nascita,\r\n      provincia_nascita: this.state.provincia_nascita,\r\n      patente: this.state.patente,\r\n      numero_telefono: this.state.numero_telefono,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <div className=\"Form\">\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <h3 style={{ textAlign: \"center\", color: \"black\" }}>Registrati</h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nome\">Nome</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.nome}\r\n                error={errors.nome}\r\n                id=\"nome\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.nome,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.nome}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"cognome\">Cognome</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.cognome}\r\n                error={errors.cognome}\r\n                id=\"cognome\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.cognome,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.cognome}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"data_nascita\">Data di nascita</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.data_nascita}\r\n                error={errors.data_nascita}\r\n                id=\"data_nascita\"\r\n                type=\"date\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.data_nascita,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.data_nascita}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Sesso</label>\r\n              <select\r\n                id=\"sesso\"\r\n                type=\"text\"\r\n                value={this.state.sesso}\r\n                onChange={this.onChange}\r\n                error={errors.sesso}\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.sesso,\r\n                })}\r\n              >\r\n                <option value=\"\" disabled selected>\r\n                  Sesso\r\n                </option>\r\n                <option value=\"M\">Uomo</option>\r\n                <option value=\"F\">Donna</option>\r\n              </select>\r\n              <span className=\"red-text\">{errors.sesso}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"luogo_nascita\">Luogo di nascita</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.luogo_nascita}\r\n                error={errors.luogo_nascita}\r\n                id=\"luogo_nascita\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.luogo_nascita,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.luogo_nascita}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Provincia di nascita</label>\r\n              <select\r\n                id=\"provincia_nascita\"\r\n                type=\"text\"\r\n                value={this.state.provincia_nascita}\r\n                onChange={this.onChange}\r\n                error={errors.provincia_nascita}\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.provincia_nascita,\r\n                })}\r\n              >\r\n                <option value=\"\" disabled selected>\r\n                  Provincia di Nascita\r\n                </option>\r\n                <option value=\"AG\">Agrigento</option>\r\n                <option value=\"CL\">Caltanissetta</option>\r\n                <option value=\"CT\">Catania</option>\r\n                <option value=\"EN\">Enna</option>\r\n                <option value=\"ME\">Messina</option>\r\n                <option value=\"PA\">Palermo</option>\r\n                <option value=\"RG\">Ragusa</option>\r\n                <option value=\"SR\">Siracusa</option>\r\n                <option value=\"TP\">Trapani</option>\r\n              </select>\r\n              <span className=\"red-text\">{errors.provincia_nascita}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"codice_fiscale\">Codice Fiscale</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.codice_fiscale}\r\n                error={errors.codice_fiscale}\r\n                id=\"codice_fiscale\"\r\n                type=\"text\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.codice_fiscale,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.codice_fiscale}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.email,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.email}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.password,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.password}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password2\">Conferma Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password2}\r\n                error={errors.password2}\r\n                id=\"password2\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.password2,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.password2}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <p>\r\n                Effettuando la registrazione si accettano le condizioni generali\r\n                e si autorizza l’azienda al trattamento dei dati personali\r\n              </p>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Registrazione Log\"\r\n              className=\"btn btn-dark btn-lg btn-block bottone\"\r\n            >\r\n              Registrati\r\n            </button>\r\n            <h5 style={{ marginTop: \"1rem\", color: \"black\" }}>\r\n              <p className=\"forgot-password text-right\">\r\n                Hai già un account? <Link to=\"/login\">Accedi</Link>\r\n              </p>\r\n            </h5>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\auth\\Login.js",["382"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      modalShow: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //se sei autenticato e provi ad andare indietro\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/HomeCliente\");\r\n    }\r\n  }\r\n  //dopo autenticazione\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/HomeCliente\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingTop: \"20rem\",\r\n          paddingBottom: \"16rem\",\r\n        }}\r\n      >\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-center\">\r\n              Inserisci i dati di accesso\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"#010101\" }}>\r\n                    Accedi\r\n                  </h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.email}\r\n                      error={errors.email}\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.email || errors.emailnotfound,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">\r\n                      {errors.email}\r\n                      {errors.emailnotfound}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                      error={errors.password}\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password || errors.passwordincorrect,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">\r\n                      {errors.password}\r\n                      {errors.passwordincorrect}\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Accedi\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <h5 style={{ marginTop: \"1rem\" }}>\r\n              <p className=\"forgot-password text-left\">\r\n                <Link to=\"/email\"> Hai dimenticato la password? </Link>\r\n              </p>\r\n            </h5>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={6}>\r\n              {\" \"}\r\n              <button\r\n                onClick={() => this.setModalShow(true)}\r\n                value=\"Registrazione Log\"\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n              >\r\n                Accedi\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={6}>\r\n              <h5 style={{ color: \"black\" }}>\r\n                <p className=\"forgot-password text-center\">\r\n                  Non sei registrato? <Link to=\"/register\">Registrati</Link>\r\n                </p>\r\n              </h5>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\googlemap\\mappa.js",["383","384","385","386","387","388"],"import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport styleMappa from \"./styleMappa\";\r\nimport Logo from \"../../immagini/logo.png\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"80vh\",\r\n  width: \"100vw\",\r\n};\r\nconst options = {\r\n  styles: styleMappa,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nconst center = {\r\n  lat: 38.115688,\r\n  lng: 13.361267,\r\n};\r\n\r\nexport default function Mappa() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyCTbH-HgcbQUWQXz24mm9gmkQCmJk98L7c\",\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  const onMapClick = React.useCallback((e) => {\r\n    setMarkers((current) => [\r\n      ...current,\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = React.useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(14);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n      >\r\n        <Marker\r\n          position={{ lat: 38.10369, lng: 13.34858 }}\r\n          icon={{\r\n            url: \"/logo.png\",\r\n            scaledSize: new window.google.maps.Size(40, 40),\r\n            origin: new window.google.maps.Point(0, 0),\r\n            anchor: new window.google.maps.Point(20, 20),\r\n          }}\r\n        />\r\n        <Marker\r\n          position={{ lat: 38.11554, lng: 13.36154 }}\r\n          icon={{\r\n            url: \"/logo.png\",\r\n            scaledSize: new window.google.maps.Size(40, 40),\r\n            origin: new window.google.maps.Point(0, 0),\r\n            anchor: new window.google.maps.Point(20, 20),\r\n          }}\r\n        />\r\n        <Marker\r\n          position={{ lat: 38.118439, lng: 13.36267 }}\r\n          icon={{\r\n            url: \"/logo.png\",\r\n            scaledSize: new window.google.maps.Size(40, 40),\r\n            origin: new window.google.maps.Point(0, 0),\r\n            anchor: new window.google.maps.Point(20, 20),\r\n          }}\r\n        />\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                PARCHEGGIO\r\n              </h2>\r\n              <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                PARCHEGGIO KARM\r\n              </p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Locate({ panTo }) {\r\n  return (\r\n    <button\r\n      className=\"locate\"\r\n      onClick={() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            panTo({\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            });\r\n          },\r\n          () => null\r\n        );\r\n      }}\r\n    >\r\n      <img src=\"/compass.svg\" alt=\"compass\" />\r\n    </button>\r\n  );\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\ListaVeicoli.js",["389","390","391","392","393","394","395","396","397","398"],"import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport React, { Component } from \"react\";\r\nimport { inviaNotificheAutisti } from \"../../actions/prenotazioniActions\";\r\nimport {\r\n  modificaStatoPrenotazione,\r\n  registerPrenotazione,\r\n} from \"../../actions/prenotazioniActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass ListaVeicoli extends Component {\r\n  state = {\r\n    errors: {},\r\n    filtroModello: \"\",\r\n    filtroCilindrata: \"\",\r\n    id_utente: \"\",\r\n    nome_utente: \"\",\r\n    cognome_utente: \"\",\r\n    prenotazione: \"\",\r\n    current_id: \"\",\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  aggiungiVeicolo(idVeicolo, posizione, modello, marca, prezzo_feriale) {\r\n    localStorage.setItem(\"idVeicolo\", idVeicolo);\r\n    localStorage.setItem(\"posizioneVeicolo\", posizione);\r\n    localStorage.setItem(\"modelloveicolo\", modello);\r\n    localStorage.setItem(\"marcaveicolo\", marca);\r\n    localStorage.setItem(\"prezzo\", prezzo_feriale);\r\n    if (localStorage.getItem(\"idAutista\") === \"No\")\r\n      window.location.href = \"/InserimentoParcheggio\";\r\n    else if (localStorage.getItem(\"idAutista\") === \"Sì\") {\r\n      const newPrenotazione1 = {\r\n        ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n        partenza: localStorage.getItem(\"partenza\"),\r\n        ora_arrivo: localStorage.getItem(\"ora_arrivo\"),\r\n        data_partenza: localStorage.getItem(\"data_partenza\"),\r\n        data_arrivo: localStorage.getItem(\"data_arrivo\"),\r\n        destinazione: localStorage.getItem(\"destinazione\"),\r\n        parcheggio_partenza: \"\",\r\n        parcheggio_destinazione: \"\",\r\n        tipo_veicolo: localStorage.getItem(\"tipoVeicolo\"),\r\n        idVeicolo: localStorage.getItem(\"idVeicolo\"),\r\n        idCliente: localStorage.getItem(\"idCliente\"),\r\n        idAutista: localStorage.getItem(\"idAutista\"),\r\n        stato: \"Incompleta\",\r\n      };\r\n      this.props.registerPrenotazione(newPrenotazione1, this.props.history);\r\n      const NewPrenotazione = {\r\n        id_utente: this.state.id_utente,\r\n        nome_utente: this.state.nome_utente,\r\n        cognome_utente: this.state.cognome_utente,\r\n        partenza: localStorage.getItem(\"partenza\"),\r\n        destinazione: localStorage.getItem(\"destinazione\"),\r\n        ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n        data_partenza: localStorage.getItem(\"data_partenza\"),\r\n      };\r\n      this.props.inviaNotificheAutisti(NewPrenotazione);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const Veicolo = {\r\n      tipo: localStorage.getItem(\"tipoVeicolo\"),\r\n    };\r\n    await this.props.Listaveicolidisponibili(\r\n      localStorage.getItem(\"tipoVeicolo\"),\r\n      Veicolo\r\n    );\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { filtroModello, filtroCilindrata, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { user } = this.props.auth;\r\n    this.state.id_utente = user.id;\r\n    this.state.nome_utente = user.nome;\r\n    this.state.cognome_utente = user.cognome;\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroCilindrata,\r\n      \"cilindrata\"\r\n    );\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div\r\n          class=\"center\"\r\n          style={{ textAlign: \"left\", display: \"flex\", flexWrap: \"wrap\" }}\r\n        >\r\n          {veicoliFiltrati.map((veicolo) => (\r\n            <Card style={{ width: \"18rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{veicolo.marca}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.modello}\r\n                </Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.prezzo_feriale + \"€/ora\"}\r\n                </Card.Subtitle>\r\n                <Card.Text>{veicolo.descrizione}</Card.Text>\r\n                <Card.Link>\r\n                  {\" \"}\r\n                  <button\r\n                    class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() =>\r\n                      this.aggiungiVeicolo(\r\n                        veicolo._id,\r\n                        veicolo.id_parcheggio,\r\n                        veicolo.modello,\r\n                        veicolo.marca,\r\n                        veicolo.prezzo_feriale\r\n                      )\r\n                    }\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    return (\r\n      <Container fluid style={{ marginBottom: \"3rem\" }}>\r\n        <Container sm={12}>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"modello\">Modello</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroModello\", event.target.value)\r\n                  }\r\n                  id=\"modello\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroCilindrata\", event.target.value)\r\n                  }\r\n                  id=\"cilindrata\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <h1\r\n            style={{\r\n              color: \"#010101\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"25px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            VEICOLI DISPONIBILI\r\n          </h1>\r\n          {veicolo.length === 0\r\n            ? \"Non ci sono veicoli per la tipologia scelta disponibili\"\r\n            : VL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nListaVeicoli.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  registerPrenotazione: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n  inviaNotificheAutisti: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n  inviaNotificheAutisti,\r\n  registerPrenotazione,\r\n})(ListaVeicoli);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\NuovaPrenotazione.js",["399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\n\n//componenti da react-bootstrap\nimport { Container, Form, Alert } from \"react-bootstrap\";\n\n//componenti da material-ui\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n    this.state = {\n      partenza: \"\",\n      data_partenza: \"\",\n      ora_partenza: \"\",\n      destinazione: \"\",\n      data_arrivo: \"\",\n      ora_arrivo: \"\",\n      ora_partenza: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      tipo_veicolo: \"\",\n      dispositivo: \"\",\n      numero_patente: \"\",\n      error: false,\n      errors: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  validate(Prenotazione) {\n    this.setState({ error: false });\n    this.state.errors.partenza = \"\";\n    this.state.errors.data_partenza = \"\";\n    this.state.errors.ora_partenza = \"\";\n    this.state.errors.destinazione = \"\";\n    this.state.errors.data_arrivo = \"\";\n    this.state.errors.ora_arrivo = \"\";\n    this.state.errors.tipo_veicolo = \"\";\n    this.state.errors.idAutista = \"\";\n    this.state.errors.dispositivo = \"\";\n    if (Prenotazione.partenza === \"\") {\n      this.state.errors.partenza = \"Inserisci la partenza\";\n      this.setState({ error: true });\n    }\n    if (this.state.data_partenza === \"\") {\n      this.state.errors.data_partenza = \"Inserisci la data di partenza\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.ora_partenza === \"\") {\n      this.state.errors.ora_partenza = \"Inserisci l'ora di partenza\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.destinazione === \"\") {\n      this.state.errors.destinazione = \"Inserisci la destinazione\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.data_arrivo === \"\") {\n      this.state.errors.data_arrivo = \"Inserisci la data di arrivo\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.ora_arrivo === \"\") {\n      this.state.errors.ora_arrivo = \"Inserisci l'ora di arrivo\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.tipo_veicolo === \"\") {\n      this.state.errors.tipo_veicolo = \"Seleziona una tipologia\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.idAutista === \"\") {\n      this.state.errors.idAutista = \"Scegli se richiedere un'autista\";\n      this.setState({ error: true });\n    }\n    if (Prenotazione.dispositivo === \"\" || Prenotazione.dispositivo === \"No\") {\n      this.state.errors.dispositivo =\n        \"E' obbligatorio accettare i termini previsti\";\n      this.setState({ error: true });\n    }\n\n    var datapartenza = new Date(this.state.data_partenza);\n    var dataarrivo = new Date(this.state.data_arrivo);\n    var today = new Date();\n\n    var ora = today.getHours();\n    if (ora < 10) {\n      ora = \"0\" + ora;\n    }\n    var minuti = today.getMinutes();\n    if (minuti < 10) {\n      minuti = \"0\" + minuti;\n    }\n    var str = ora + \":\" + minuti;\n    if (\n      datapartenza.getDate() === today.getDate() &&\n      Prenotazione.ora_partenza < str\n    ) {\n      this.state.errors.ora_partenza = \"Non puoi tornare indietro nel tempo\";\n      this.setState({ error: true });\n    }\n    if (datapartenza.getTime() > dataarrivo.getTime()) {\n      this.state.errors.data_partenza = \"Non puoi partire prima di arrivare\";\n      this.state.errors.data_arrivo = \"Non puoi partire prima di arrivare\";\n      this.setState({ error: true });\n    } else if (\n      datapartenza.getTime() === today.getTime() &&\n      Prenotazione.ora_arrivo < Prenotazione.ora_partenza\n    ) {\n      this.state.errors.ora_partenza = \"Non puoi partire prima di arrivare\";\n      this.state.errors.ora_arrivo = \"Non puoi partire prima di arrivare\";\n      this.setState({ error: true });\n    }\n\n    if (\n      (Prenotazione.tipo_veicolo === \"Autovettura\" ||\n        Prenotazione.tipo_veicolo === \"Moto\") &&\n      this.state.numero_patente === \"Nessuna\" &&\n      Prenotazione.idAutista === \"No\"\n    ) {\n      this.state.errors.tipo_veicolo =\n        \"Non hai inserito una patente valida per la tipologia di veicolo scelto\";\n      this.setState({ error: true });\n    }\n    if (\n      Prenotazione.tipo_veicolo !== \"Autovettura\" &&\n      Prenotazione.idAutista === \"Sì\"\n    ) {\n      this.state.errors.idAutista =\n        \"Non puoi richiedere un'utista se non scegli un tipo di veicolo autovettura\";\n      this.setState({ error: true });\n    } else if (\n      Prenotazione.tipo_veicolo === \"Autovettura\" &&\n      Prenotazione.idAutista === \"Sì\" &&\n      datapartenza.getDate() < today.getDate() + 3 &&\n      datapartenza.getMonth() === today.getMonth() &&\n      datapartenza.getFullYear() === today.getFullYear()\n    ) {\n      this.state.errors.idAutista =\n        \"Non puoi richiedere un'autista se non scegli di partire tra almeno 3 giorni\";\n      this.setState({ error: true });\n    }\n\n    return this.state.error;\n  }\n\n  handleSubmit = async (e) => {\n    this.setState({ error: false });\n    e.preventDefault();\n    const Prenotazione = {\n      ora_partenza: this.state.ora_partenza,\n      partenza: this.state.partenza,\n      ora_arrivo: this.state.ora_arrivo,\n      data_partenza: this.state.data_partenza,\n      data_arrivo: this.state.data_arrivo,\n      destinazione: this.state.destinazione,\n      tipo_veicolo: this.state.tipo_veicolo,\n      idAutista: this.state.idAutista,\n      dispositivo: this.state.dispositivo,\n    };\n    await this.validate(Prenotazione);\n    /*\n    var today = new Date();\n    var ora = today.getHours();\n    var minuti = today.getMinutes();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    if (ora < 10) {\n      ora = \"0\" + ora;\n    }\n    if (minuti < 10) {\n      minuti = \"0\" + minuti;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    var orario = ora + \":\" + minuti;\n\n    if (this.state.data_partenza == today) {\n      if (this.state.ora_partenza < orario)\n        this.state.errors.ora_partenza = \"Errore partenza\";\n    }\n    if (this.state.data_arrivo == today) {\n      if (this.state.ora_arrivo < orario)\n        this.state.errors.ora_arrivo = \"Errore arrivo\";\n    }*/ if (this.state.error === false) {\n      localStorage.setItem(\"idAutista\", this.state.idAutista);\n      localStorage.setItem(\"tipoVeicolo\", this.state.tipo_veicolo);\n      localStorage.setItem(\"ora_partenza\", this.state.ora_partenza);\n      localStorage.setItem(\"partenza\", this.state.partenza);\n      localStorage.setItem(\"ora_arrivo\", this.state.ora_arrivo);\n      localStorage.setItem(\"data_partenza\", this.state.data_partenza);\n      localStorage.setItem(\"data_arrivo\", this.state.data_arrivo);\n      localStorage.setItem(\"destinazione\", this.state.destinazione);\n      localStorage.setItem(\n        \"parcheggio_partenza\",\n        this.state.parcheggio_partenza\n      );\n      localStorage.setItem(\n        \"parcheggio_destinazione\",\n        this.state.parcheggio_destinazione\n      );\n      localStorage.setItem(\"idCliente\", this.state.idCliente);\n      window.location.href = \"/ListaVeicoli\";\n    }\n    //else(this.state.idAutista === \"Sì\")\n    //this.props.inviaNotificheAutisti();\n  };\n\n  render() {\n    const { errors } = this.state;\n    const { user } = this.props.auth;\n    this.state.idCliente = user.id;\n    this.state.numero_patente = user.numero_patente;\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    return (\n      <Container sm style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\n        <div className=\"Form\">\n          <form noValidate onSubmit={this.handleSubmit}>\n            <h1\n              style={{\n                textAlign: \"center\",\n                color: \"black\",\n                gridColumn: \"2\",\n                gridRow: \"2\",\n              }}\n            >\n              Nuova Prenotazione\n            </h1>\n            <div className=\"form-group\">\n              <label>Partenza</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.partenza}\n                error={errors.partenza}\n                id=\"partenza\"\n                type=\"text\"\n                placeholder=\"Inserisci l'indirizzo di partenza\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.partenza,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.partenza}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Data di partenza</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.data_partenza}\n                error={errors.data_partenza}\n                id=\"data_partenza\"\n                type=\"date\"\n                min={today}\n                className={classnames(\"form-control\", {\n                  invalid: errors.data_partenza,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.data_partenza}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Orario di partenza</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.ora_partenza}\n                error={errors.ora_partenza}\n                id=\"ora_partenza\"\n                type=\"time\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.ora_partenza,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.ora_partenza}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Destinazione</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.destinazione}\n                error={errors.destinazione}\n                id=\"destinazione\"\n                type=\"text\"\n                placeholder=\"Inserisci l'indirizzo di destinazione\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.destinazione,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.destinazione}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Data di arrivo</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.data_arrivo}\n                error={errors.data_arrivo}\n                id=\"data_arrivo\"\n                type=\"date\"\n                min={today}\n                className={classnames(\"form-control\", {\n                  invalid: errors.data_arrivo,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.data_arrivo}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Orario di arrivo</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.ora_arrivo}\n                error={errors.ora_arrivo}\n                id=\"ora_arrivo\"\n                type=\"time\"\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.ora_arrivo,\n                })}\n              />\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.ora_arrivo}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Tipo Veicolo</label>\n              <select\n                onChange={this.onChange}\n                value={this.state.tipo_veicolo}\n                error={errors.tipo_veicolo}\n                id=\"tipo_veicolo\"\n                type=\"text\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.tipo_veicolo,\n                })}\n              >\n                <option value=\"\" disabled selected>\n                  Tipo Veicolo\n                </option>\n                <option value=\"Autovettura\">Autovettura</option>\n                <option value=\"Moto\">Moto</option>\n                <option value=\"Bicicletta\">Bicicletta</option>\n                <option value=\"Monopattino\">Monopattino</option>\n              </select>\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.tipo_veicolo}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>Presenza Autista</label>\n              <select\n                onChange={this.onChange}\n                value={this.state.idAutista}\n                error={errors.idAutista}\n                id=\"idAutista\"\n                type=\"text\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.idAutista,\n                })}\n              >\n                <option value=\"\" disabled selected>\n                  Presenza Autista\n                </option>\n                <option value=\"Sì\">Sì</option>\n                <option value=\"No\">No</option>\n              </select>\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.idAutista}</span>\n              )}{\" \"}\n            </div>\n            <div className=\"form-group\">\n              <label>\n                Dichiaro di portare con me un dispositivo mobile per tutta la\n                durata della corsa e di accettare le normative dell'azienda\n              </label>\n              <select\n                onChange={this.onChange}\n                value={this.state.dispositivo}\n                error={errors.dispositivo}\n                id=\"dispositivo\"\n                type=\"text\"\n                className={classnames(\"form-control\", {\n                  invalid: errors.dispositivo,\n                })}\n              >\n                <option value=\"\" disabled selected>\n                  Accetto\n                </option>\n                <option value=\"Sì\">Sì</option>\n                <option value=\"No\">No</option>\n              </select>\n              {!this.state.error ? null : (\n                <span className=\"red-text\">{errors.dispositivo}</span>\n              )}{\" \"}\n            </div>\n\n            {/*<div className=\"form-check\">\n              <label>\n                Dichiare di portare con me un dispositivo per tutta la durata\n                della corsa\n              </label>\n              <input\n                type=\"checkbox\"\n                checked={this.state.dispositivo}\n                onChange={this.handleCheckClick}\n                className={classnames(\"form-control\", {\n                  invalid: errors.idAutista,\n                })}\n                id=\"dispositivo\"\n              />\n              <span className=\"red-text\">{errors.dispositivo}</span>\n            </div>\n              non funziona non si sa per quale motivo*/}\n            <button\n              type=\"submit\"\n              value=\"Registrazione Log\"\n              className=\"btn btn-dark btn-lg btn-block bottone\"\n            >\n              Avanti\n            </button>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  registerPrenotazione: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, {})(NuovaPrenotazione);\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\MetodiPagamento.js",["435","436","437","438"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  registerMetodoPagamento,\r\n  CancellaMetodoPagamento,\r\n  Listametodipagamento,\r\n} from \"../../actions/metodipagamentoActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Alert } from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass MetodiPagamento extends Component {\r\n  state = {\r\n    id_cliente: \"\",\r\n    numero_carta: \"\",\r\n    intestatario: \"\",\r\n    data_scadenza: \"\",\r\n    cvv: \"\",\r\n    errors: {},\r\n    messaggio: true,\r\n    messaggio2: true,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  deleteMetodoPagamento(id) {\r\n    this.setState({messaggio2: false});\r\n    this.setState({modalShow1: false});\r\n    this.props.CancellaMetodoPagamento(id);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMetodoPagamento = {\r\n      id_cliente: this.state.id_cliente,\r\n      numero_carta: this.state.numero_carta,\r\n      intestatario: this.state.intestatario,\r\n      data_scadenza: this.state.data_scadenza,\r\n      cvv: this.state.cvv,\r\n    };\r\n    if(!this.props.registerMetodoPagamento(newMetodoPagamento)){\r\n      this.setState({messaggio: false});\r\n      this.setState({modalShow: false});\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listametodipagamento(this.state.id_cliente);\r\n  }\r\n\r\n  viewCustomer(id) {\r\n    console.log(id);\r\n  }\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    const { pagamento } = this.props.listametodipagamento;\r\n    this.state.id_cliente = user.id;\r\n    const MP = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Numero Carta</th>\r\n                <th>intestatario</th>\r\n                <th>Data Scadenza</th>\r\n                <th>CVV</th>\r\n                <th>Rimuovi</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pagamento.map((pagamento) => (\r\n                <tr key={pagamento._id}>\r\n                  <td>{pagamento.numero_carta}</td>\r\n                  <td>{pagamento.intestatario}</td>\r\n                  <td>{pagamento.data_scadenza.substring(0, 10)}</td>\r\n                  <td>{pagamento.cvv}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => {this.setState({modalShow1:true}); localStorage.setItem(\"currentcarta\", pagamento.numero_carta); localStorage.setItem(\"currentcartaid\", pagamento._id);}}\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    >\r\n                      RIMUOVI\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        {this.state.messaggio  ? null : <Alert variant=\"success\">\r\n        Hai inserito correttamente un nuovo metodo di pagamento!<Alert.Link href=\"/MetodiDiPagamento\"> Premi qui </Alert.Link>per visualizzarlo\r\n      </Alert> }\r\n      {this.state.messaggio2  ? null : <Alert variant=\"danger\">\r\n        Hai eliminato correttamente un metodo di pagamento!<Alert.Link href=\"/MetodiDiPagamento\"> Premi qui </Alert.Link>per visualizzare la rimozione\r\n      </Alert> }\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-center\">\r\n              Inserisci i dati del metodo di pagamento\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"numero_carta\">Numero di carta</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.numero_carta}\r\n                      error={errors.numero_carta}\r\n                      id=\"numero_carta\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.numero_carta,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.numero_carta}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"intestatario\">intestatario</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.intestatario}\r\n                      error={errors.intestatario}\r\n                      id=\"intestatario\"\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.intestatario,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.intestatario}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"date\">Data di scadenza</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.data_scadenza}\r\n                      error={errors.data_scadenza}\r\n                      id=\"data_scadenza\"\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.data_scadenza,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.data_scadenza}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cvv\">CVV</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.cvv}\r\n                      error={errors.cvv}\r\n                      id=\"cvv\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.cvv,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.cvv}</span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                  >\r\n                    Aggiungi\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow1}\r\n          onHide={() => this.setState({ modalShow1: false})}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton><h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                    Sei sicuro di voler eliminare il tuo metodo di pagamento con numero di carta: {localStorage.getItem(\"currentcarta\")}?\r\n                  </h3></Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                  <Row className=\"justify-content-md-center\">\r\n                  <Col sm={3}>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    onClick={(e) => this.deleteMetodoPagamento(localStorage.getItem(\"currentcartaid\"))}\r\n                  >\r\n                    Conferma\r\n                  </button>\r\n                  </Col>\r\n\r\n                  </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setState({ modalShow1: false})}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm={3} md={{ span: 3, offset: 9 }}>\r\n              <button\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                onClick={() => {this.setModalShow(true); this.state.messaggio=true;}}\r\n              >\r\n                + Inserisci nuova carta\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"row\" style={{ marginBottom: \"35rem\" }}>\r\n          {pagamento.length === 0 ? \"Non ci sono metodi di pagamento\" : MP}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nMetodiPagamento.propTypes = {\r\n  registerMetodoPagamento: PropTypes.func.isRequired,\r\n  CancellaMetodoPagamento: PropTypes.func.isRequired,\r\n  Listametodipagamento: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listametodipagamento: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listametodipagamento: state.listametodipagamento,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  registerMetodoPagamento,\r\n  Listametodipagamento,\r\n  CancellaMetodoPagamento,\r\n})(MetodiPagamento);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\InserimentoParcheggio.js",["439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { registerPrenotazione } from \"../../actions/prenotazioniActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\nimport Mappa from \"../googlemap/mappa\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass InserimentoParcheggio extends Component {\r\n  state = {\r\n    parcheggio_destinazione: \"\",\r\n    parcheggio_partenza: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaparcheggi();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  registraPreotazione() {\r\n    const newPrenotazione = {\r\n      ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n      partenza: localStorage.getItem(\"partenza\"),\r\n      ora_arrivo: localStorage.getItem(\"ora_arrivo\"),\r\n      data_partenza: localStorage.getItem(\"data_partenza\"),\r\n      data_arrivo: localStorage.getItem(\"data_arrivo\"),\r\n      destinazione: localStorage.getItem(\"destinazione\"),\r\n      parcheggio_partenza: this.state.parcheggio_partenza,\r\n      parcheggio_destinazione: this.state.parcheggio_destinazione,\r\n      tipo_veicolo: localStorage.getItem(\"tipoVeicolo\"),\r\n      idVeicolo: localStorage.getItem(\"idVeicolo\"),\r\n      idCliente: localStorage.getItem(\"idCliente\"),\r\n      idAutista: localStorage.getItem(\"idAutista\"),\r\n      stato: \"Incompleta\",\r\n    };\r\n    this.props.registerPrenotazione(newPrenotazione, this.props.history);\r\n    window.location.href = \"/RiepilogoPrenotazione\";\r\n  }\r\n\r\n  render() {\r\n    const { filtroTipo, filtroParcheggio, filtroID, errors } = this.state;\r\n    const { parcheggio } = this.props.listaparcheggi;\r\n    let veicoliFiltrati = [];\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    let stile = \"\";\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroTipo, \"tipo\");\r\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroID, \"_id\");\r\n    if (localStorage.getItem(\"posizioneVeicolo\").startsWith(\"6\")) stile = \"Sì\";\r\n    else stile = \"No\";\r\n\r\n    const PL = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>\r\n                    <button\r\n                      class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() => {\r\n                        this.state.parcheggio_partenza = parcheggio.indirizzo;\r\n                        localStorage.setItem(\r\n                          \"parcheggio_partenza\",\r\n                          this.state.parcheggio_partenza\r\n                        );\r\n                        window.location.reload();\r\n                      }}\r\n                    >\r\n                      Seleziona\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    const PL2 = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>\r\n                    <button\r\n                      class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() => {\r\n                        this.state.parcheggio_destinazione =\r\n                          parcheggio.indirizzo;\r\n                        localStorage.setItem(\r\n                          \"parcheggio_destinazione\",\r\n                          this.state.parcheggio_destinazione\r\n                        );\r\n                        window.location.reload();\r\n                      }}\r\n                    >\r\n                      Seleziona\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    console.log(localStorage.getItem(\"Parcheggio_partenza\"));\r\n\r\n    switch (stile) {\r\n      case \"Sì\": //veicolo in un parcheggio\r\n        return (\r\n          <Container fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Mappa style={{ zIndex: \"0\" }} />\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={6}>\r\n                <h1\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                >\r\n                  Parcheggio Partenza:{\" \"}\r\n                  {localStorage.getItem(\"parcheggio_partenza\")}\r\n                </h1>\r\n                {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n              </Col>\r\n              <Col sm={6}>\r\n                {\" \"}\r\n                <h1\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                >\r\n                  Parcheggio Destinazione:{\" \"}\r\n                  {localStorage.getItem(\"parcheggio_destinazione\")}\r\n                </h1>\r\n                <h1\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                  id=\"parcheggiodestinazione\"\r\n                ></h1>\r\n                {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL2}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={4}>\r\n                <button\r\n                  class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                  onClick={() => this.registraPreotazione()}\r\n                >\r\n                  Completa Operazione\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      case \"No\": {\r\n        return (\r\n          <Container fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Mappa style={{ zIndex: \"0\" }} />\r\n            </Row>\r\n            <Row>\r\n              <Col sm={6}>\r\n                {\" \"}\r\n                <h1\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                >\r\n                  Parcheggio Destinazione:{\" \"}\r\n                  {localStorage.getItem(\"parcheggio_destinazione\")}\r\n                </h1>\r\n                <h1\r\n                  style={{\r\n                    color: \"#010101\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bolder\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                  id=\"parcheggiodestinazione\"\r\n                ></h1>\r\n                {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL2}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={4}>\r\n                <button\r\n                  class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                  onClick={() => this.registraPreotazione()}\r\n                >\r\n                  Completa Operazione\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nInserimentoParcheggio.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  registerPrenotazione: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n  Listaparcheggi,\r\n  registerPrenotazione,\r\n})(InserimentoParcheggio);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\RiepilogoPrenotazione.js",["453","454","455","456","457","458","459"],"import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport { registerPrenotazione } from \"../../actions/prenotazioniActions\";\r\nimport { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\n\r\nclass RiepilogoPrenotazione extends Component {\r\n  state = {\r\n    errors: {},\r\n  };\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  registraPreotazione() {\r\n    localStorage.setItem(\"parcheggio_partenza\", this.state.parcheggio_partenza);\r\n    localStorage.setItem(\r\n      \"parcheggio_destinazione\",\r\n      this.state.parcheggio_destinazione\r\n    );\r\n    const newPrenotazione = {\r\n      ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n      partenza: localStorage.getItem(\"partenza\"),\r\n      ora_arrivo: localStorage.getItem(\"ora_arrivo\"),\r\n      ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n      data_partenza: localStorage.getItem(\"data_partenza\"),\r\n      data_arrivo: localStorage.getItem(\"data_arrivo\"),\r\n      destinazione: localStorage.getItem(\"destinazione\"),\r\n      parcheggio_partenza: this.state.parcheggio_partenza,\r\n      parcheggio_destinazione: this.state.parcheggio_destinazione,\r\n      tipo_veicolo: localStorage.getItem(\"tipoVeicolo\"),\r\n      idVeicolo: localStorage.getItem(\"idVeicolo\"),\r\n      idCliente: localStorage.getItem(\"idCliente\"),\r\n      idAutista: localStorage.getItem(\"idAutista\"),\r\n    };\r\n    this.props.registerPrenotazione(newPrenotazione, this.props.history);\r\n    window.location.href = \"/SchermataPagamento\";\r\n  }\r\n\r\n  render() {\r\n    let stile = \"\";\r\n    if (\r\n      localStorage.getItem(\"parcheggio_partenza\") === \"\" &&\r\n      localStorage.getItem(\"parcheggio_destinazione\") === \"\"\r\n    )\r\n      stile = \"ConAutista\";\r\n    else if (\r\n      localStorage.getItem(\r\n        localStorage.getItem(\"parcheggio_partenza\") !== \"\" &&\r\n          localStorage.getItem(\"parcheggio_destinazione\") === \"\"\r\n      )\r\n    )\r\n      stile = \"SenzaAutistaFuoriParcheggio\";\r\n    else stile = \"SenzaAutistaInParcheggio\";\r\n    switch (stile) {\r\n      case \"SenzaAutistaInParcheggio\": //se il cliente sleziona una corsa senza autista e un veicolo in un parcheggio\r\n        return (\r\n          <Container\r\n            fluid\r\n            sm={12}\r\n            style={{ marginTop: \"5rem\", marginBottom: \"15rem\" }}\r\n          >\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={6}>\r\n                <ListGroup as=\"ul\">\r\n                  <ListGroup.Item\r\n                    as=\"li\"\r\n                    active\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontWeight: \"bolder\",\r\n                      fontSize: \"30px\",\r\n                    }}\r\n                  >\r\n                    RIEPILOGO\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Veicolo: {localStorage.getItem(\"marcaveicolo\")}{\" \"}\r\n                    {localStorage.getItem(\"modelloveicolo\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Partenza: {localStorage.getItem(\"data_partenza\")}, Ora\r\n                    Partenza: {localStorage.getItem(\"ora_partenza\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Arrivo: {localStorage.getItem(\"data_arrivo\")} , Ora\r\n                    Arrivo: {localStorage.getItem(\"ora_arrivo\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Parcheggio Partenza:{\" \"}\r\n                    {localStorage.getItem(\"parcheggio_partenza\")}, Parcheggio\r\n                    Destinazione:{\" \"}\r\n                    {localStorage.getItem(\"parcheggio_destinazione\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Prezzo: {localStorage.getItem(\"prezzo\") + \"€\"}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={3}>\r\n                <Link to=\"/SchermataPagamento\">\r\n                  <button className=\"btn btn-primary btn-lg btn-block bottone\">\r\n                    Procedi al pagamento\r\n                  </button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      case \"SenzaAutistaFuoriParcheggio\": //se il cliente seleziona una corsa senza autista e un veicolo fuori parhceggio\r\n        return (\r\n          <Container\r\n            fluid\r\n            sm={12}\r\n            style={{ marginTop: \"5rem\", marginBottom: \"15rem\" }}\r\n          >\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={6}>\r\n                <ListGroup as=\"ul\">\r\n                  <ListGroup.Item\r\n                    as=\"li\"\r\n                    active\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontWeight: \"bolder\",\r\n                      fontSize: \"30px\",\r\n                    }}\r\n                  >\r\n                    RIEPILOGO\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Veicolo: {localStorage.getItem(\"marcaveicolo\")}{\" \"}\r\n                    {localStorage.getItem(\"modelloveicolo\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Partenza: {localStorage.getItem(\"data_partenza\")}, Ora\r\n                    Partenza: {localStorage.getItem(\"ora_partenza\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Arrivo: {localStorage.getItem(\"data_arrivo\")} , Ora\r\n                    Arrivo: {localStorage.getItem(\"ora_arrivo\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Partenza: {localStorage.getItem(\"partenza\")}, Parcheggio\r\n                    Destinazione:{\" \"}\r\n                    {localStorage.getItem(\"parcheggio_destinazione\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Prezzo: {localStorage.getItem(\"prezzo\") + \"€\"}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={3}>\r\n                <Link to=\"/SchermataPagamento\">\r\n                  <button className=\"btn btn-primary btn-lg btn-block bottone\">\r\n                    Procedi al pagamento\r\n                  </button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n      case \"ConAutista\": //se il cliente seleziona una corsa con autista\r\n        return (\r\n          <Container\r\n            fluid\r\n            sm={12}\r\n            style={{ marginTop: \"5rem\", marginBottom: \"15rem\" }}\r\n          >\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={6}>\r\n                <ListGroup as=\"ul\">\r\n                  <ListGroup.Item\r\n                    as=\"li\"\r\n                    active\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontWeight: \"bolder\",\r\n                      fontSize: \"30px\",\r\n                    }}\r\n                  >\r\n                    RIEPILOGO\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Veicolo: {localStorage.getItem(\"marcaveicolo\")}{\" \"}\r\n                    {localStorage.getItem(\"modelloveicolo\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Partenza: {localStorage.getItem(\"data_partenza\")}, Ora\r\n                    Partenza: {localStorage.getItem(\"ora_partenza\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Data Arrivo: {localStorage.getItem(\"data_arrivo\")} , Ora\r\n                    Arrivo: {localStorage.getItem(\"ora_arrivo\")}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Partenza: {localStorage.getItem(\"partenza\")}, Destinazione:{\" \"}\r\n                    {localStorage.getItem(\"destinazione\")}{\" \"}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item as=\"li\">\r\n                    Prezzo: {localStorage.getItem(\"prezzo\") + \"€\"}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm={3}>\r\n                <Link to=\"/SchermataPagamento\">\r\n                  <button className=\"btn btn-primary btn-lg btn-block bottone\">\r\n                    Procedi al pagamento\r\n                  </button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nRiepilogoPrenotazione.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  registerPrenotazione: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n  Listaparcheggi,\r\n  registerPrenotazione,\r\n})(RiepilogoPrenotazione);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineCliente\\SchermataPagamento.js",["460","461","462"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  registerMetodoPagamento,\r\n  CancellaMetodoPagamento,\r\n  Listametodipagamento,\r\n} from \"../../actions/metodipagamentoActions\";\r\n\r\nimport {\r\n  modificaStatoPrenotazione,\r\n  registerPrenotazione,\r\n} from \"../../actions/prenotazioniActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button } from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass SchermataPagamento extends Component {\r\n  state = {\r\n    id_cliente: \"\",\r\n    numero_carta: \"\",\r\n    intestatario: \"\",\r\n    data_scadenza: \"\",\r\n    cvv: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  deleteMetodoPagamento(id) {\r\n    this.props.CancellaMetodoPagamento(id);\r\n    window.location.reload();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMetodoPagamento = {\r\n      name: this.state.name,\r\n      id_cliente: this.state.id_cliente,\r\n      numero_carta: this.state.numero_carta,\r\n      intestatario: this.state.intestatario,\r\n      data_scadenza: this.state.data_scadenza,\r\n      cvv: this.state.cvv,\r\n    };\r\n    this.props.registerMetodoPagamento(newMetodoPagamento);\r\n    //this.setModalShow(false);\r\n    //window.location.reload();\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listametodipagamento(this.state.id_cliente);\r\n  }\r\n\r\n  viewCustomer(id) {\r\n    console.log(id);\r\n  }\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  effettuapagamento() {\r\n    if (\r\n      localStorage.getItem(\"parcheggio_partenza\") === \"\" &&\r\n      localStorage.getItem(\"parcheggio_destinazione\") === \"\"\r\n    ) {\r\n      this.setState({ modalShow1: true });\r\n      const statoPrenotazione = {\r\n        statoiniziale: \"Incompleta\",\r\n        stato: \"Pagata\",\r\n      };\r\n      this.props.modificaStatoPrenotazione(statoPrenotazione);\r\n    } else {\r\n      const statoPrenotazione = {\r\n        statoiniziale: \"Incompleta\",\r\n        stato: \"Pagata\",\r\n      };\r\n      this.props.modificaStatoPrenotazione(statoPrenotazione);\r\n      window.location.href = \"/HomeCliente\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    const { pagamento } = this.props.listametodipagamento;\r\n    this.state.id_cliente = user.id;\r\n    const MP = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Numero Carta</th>\r\n                <th>intestatario</th>\r\n                <th>Data Scadenza</th>\r\n                <th>CVV</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pagamento.map((pagamento) => (\r\n                <tr key={pagamento._id}>\r\n                  <td>{pagamento.numero_carta}</td>\r\n                  <td>{pagamento.intestatario}</td>\r\n                  <td>{pagamento.data_scadenza}</td>\r\n                  <td>{pagamento.cvv}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <button\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                      onClick={() => this.effettuapagamento()}\r\n                    >\r\n                      Seleziona\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow1}\r\n          onHide={() => this.setState({ modalShow1: false })}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Vuoi lasciare una mancia per l'autista?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"Form\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"mancia\">Mancia:</label>\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.mancia}\r\n                    error={errors.mancia}\r\n                    id=\"mancia\"\r\n                    type=\"number\"\r\n                    className={classnames(\"form-control\", {\r\n                      invalid: errors.mancia,\r\n                    })}\r\n                  />\r\n                  <span className=\"red-text\">{errors.mancia}</span>\r\n                </div>\r\n                <button\r\n                  value=\"Registrazione Log\"\r\n                  className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  onClick={() => (window.location.href = \"/HomeCliente\")}\r\n                >\r\n                  Paga ora\r\n                </button>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setState({ modalShow1: false })}>\r\n              Annulla\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-center\">\r\n              Inserisci i dati del metodo di pagamento\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"numero_carta\">Numero di carta</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.numero_carta}\r\n                      error={errors.numero_carta}\r\n                      id=\"numero_carta\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.numero_carta,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.numero_carta}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"intestatario\">intestatario</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.intestatario}\r\n                      error={errors.intestatario}\r\n                      id=\"intestatario\"\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.intestatario,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.intestatario}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"date\">Data di scadenza</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.data_scadenza}\r\n                      error={errors.data_scadenza}\r\n                      id=\"data_scadenza\"\r\n                      type=\"date\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.data_scadenza,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.data_scadenza}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cvv\">CVV</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.cvv}\r\n                      error={errors.cvv}\r\n                      id=\"cvv\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.cvv,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.cvv}</span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Inserisci\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm={3} md={{ span: 3, offset: 9 }}>\r\n              <button\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                onClick={() => this.setModalShow(true)}\r\n              >\r\n                + Inserisci nuovo metodo di pagamento\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"row\" style={{ marginBottom: \"35rem\" }}>\r\n          {pagamento.length === 0 ? \"Non ci sono metodi di pagamento\" : MP}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nSchermataPagamento.propTypes = {\r\n  registerMetodoPagamento: PropTypes.func.isRequired,\r\n  registerPrenotazione: PropTypes.func.isRequired,\r\n  CancellaMetodoPagamento: PropTypes.func.isRequired,\r\n  Listametodipagamento: PropTypes.func.isRequired,\r\n  modificaStatoPrenotazione: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listametodipagamento: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listametodipagamento: state.listametodipagamento,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  registerMetodoPagamento,\r\n  Listametodipagamento,\r\n  CancellaMetodoPagamento,\r\n  modificaStatoPrenotazione,\r\n  registerPrenotazione,\r\n})(SchermataPagamento);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\DashboardAdmin.js",["463"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authAutentications\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Logo from \"../../immagini/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    if (user.ruolo === \"Cliente\") this.props.history.push(\"/HomeCliente\");\r\n    return (\r\n      <div\r\n        className=\"dashboardAmministratore\"\r\n        style={{ backgroundColor: \"#010101\" }}\r\n      >\r\n        <Container\r\n          style={{\r\n            marginTop: \"2rem\",\r\n            marginBottom: \"20rem\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h1>\r\n                Benvenuto <b>{user.nome}</b>, qui puoi gestire\r\n                l'amministrazione!\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <Link to=\"/GestioneCorsaAdmin\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Gestione Corsa\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <Link to=\"/GestioneAmministrazione\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Gestione Amministrazione\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={6}>\r\n              <Link to=\"/VisualizzaPrenotazioni\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Visualizza Prenotazioni\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\GestioneAmministrazione.js",["464"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authAutentications\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Logo from \"../../immagini/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    if (user.ruolo === \"Cliente\") this.props.history.push(\"/HomeCliente\");\r\n    return (\r\n      <div\r\n        className=\"dashboardAmministratore\"\r\n        style={{ backgroundColor: \"#010101\" }}\r\n      >\r\n        <Container\r\n          style={{\r\n            marginTop: \"2rem\",\r\n            marginBottom: \"20rem\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col sm={12}>\r\n              <h1>\r\n                Benvenuto <b>{user.name}</b>, qui puoi gestire\r\n                l'amministrazione!\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}>\r\n              <Link to=\"/ListaClienti\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Visualizza Clienti\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Link to=\"/AggiornaDipendenti\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Visualizza Dipendenti\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Link to=\"/AggiornaVeicoli\">\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  block\r\n                  href=\"/\"\r\n                  className=\"bottone\"\r\n                >\r\n                  Visualizza Veicoli\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}>\r\n              <Link to=\"/AggiornaParcheggi\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Visualizza Parcheggi\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Link to=\"/ModificaTariffe\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Modifica Tariffe\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaClienti.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaVeicoli.js",["465","466","467","468","469","470","471","472","473"],"import { Listaveicoli } from \"../../actions/veicoliActions\";\r\nimport { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  registerVeicolo,\r\n  ModificaVeicolo,\r\n  CancellaVeicolo,\r\n  GetSpecificVeicolo,\r\n  modificaStato,\r\n  modificaParcheggio,\r\n} from \"../../actions/veicoliActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Alert } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass AggiornaVeicoli extends Component {\r\n  state = {\r\n    tipo: \"\",\r\n    modello: \"\",\r\n    marca: \"\",\r\n    cilindrata: 0,\r\n    n_posti: 0,\r\n    n_porte: 0,\r\n    targa: \"\",\r\n    id_parcheggio: \"\",\r\n    descrizione: \"\",\r\n    prezzo_festivo: \"\",\r\n    prezzo_feriale: \"\",\r\n    stato: \"\",\r\n    errors: {},\r\n    filtroTipo: \"\",\r\n    filtroParcheggio: \"\",\r\n    filtroID: \"\",\r\n    current_id: \"\",\r\n    current_veicolo_id: \"\",\r\n    messaggio: true,\r\n    messaggio1: true,\r\n    veicoli_inparcheggio: [], //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaveicoli();\r\n    await this.props.Listaparcheggi();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  deleteVeicolo(id) {\r\n    this.props.CancellaVeicolo(id);\r\n    this.setState({ modalShow: false });\r\n    this.setState({ modalShow1: false });\r\n    this.setState({ modalShow2: false });\r\n    this.setState({ modalShow3: false });\r\n    this.setState({ modalShow4: false });\r\n    this.setState({ modalShow5: false });\r\n    this.setState({ messaggio1: false });\r\n  }\r\n\r\n  modificaVeicolo(id) {\r\n    this.setState({ modalShow4: true });\r\n    this.state.current_id = id;\r\n  }\r\n\r\n  cambiaParcheggio(id) {\r\n    console.log(id);\r\n    this.state.id_parcheggio = id;\r\n    const VeicoloDaModificare = {\r\n      _id: this.state.current_id,\r\n      id_parcheggio: this.state.id_parcheggio,\r\n    };\r\n    this.props.modificaParcheggio(this.state.current_id, VeicoloDaModificare);\r\n  }\r\n\r\n  attivaVeicolo(id) {\r\n    this.state.stato = \"Attivo\";\r\n    const VeicoloDaModificare = {\r\n      _id: id,\r\n      stato: this.state.stato,\r\n    };\r\n    this.props.modificaStato(id, VeicoloDaModificare);\r\n  }\r\n  bloccaVeicolo(id) {\r\n    this.state.stato = \"Bloccato\";\r\n    console.log(this.state.stato);\r\n    const VeicoloDaModificare = {\r\n      _id: id,\r\n      stato: this.state.stato,\r\n    };\r\n    this.props.modificaStato(id, VeicoloDaModificare);\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newVeicolo = {\r\n      tipo: this.state.tipo,\r\n      modello: this.state.modello,\r\n      marca: this.state.marca,\r\n      cilindrata: this.state.cilindrata,\r\n      n_posti: this.state.n_posti,\r\n      n_porte: this.state.n_porte,\r\n      targa: this.state.targa,\r\n      id_parcheggio: this.state.id_parcheggio,\r\n      descrizione: this.state.descrizione,\r\n      prezzo_festivo: this.state.prezzo_festivo,\r\n      prezzo_feriale: this.state.prezzo_feriale,\r\n      stato: this.state.stato,\r\n    };\r\n    this.props.registerVeicolo(newVeicolo);\r\n    if (this.state.errors) {\r\n      this.setState({ messaggio: false });\r\n      this.setState({ modalShow: false });\r\n      this.setState({ modalShow1: false });\r\n      this.setState({ modalShow2: false });\r\n      this.setState({ modalShow3: false });\r\n      this.setState({ modalShow4: false });\r\n      this.setState({ modalShow5: false });\r\n    }\r\n  };\r\n\r\n  setModalShow = (input) => {\r\n    if (this.state.tipo === \"\") this.setState({ modalShow: input });\r\n    else if (this.state.tipo === \"Autovettura\")\r\n      this.setState({ modalShow1: input });\r\n    else if (this.state.tipo === \"Moto\") this.setState({ modalShow2: input });\r\n    else if (\r\n      this.state.tipo === \"Bicicletta\" ||\r\n      this.state.tipo === \"Monopattino\"\r\n    )\r\n      this.setState({ modalShow3: input });\r\n  };\r\n\r\n  render() {\r\n    const { filtroTipo, filtroParcheggio, filtroID, errors } = this.state;\r\n    const { parcheggio } = this.props.listaparcheggi;\r\n    let veicoliFiltrati = [];\r\n    const { veicolo } = this.props.listaveicoli;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroTipo, \"tipo\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroParcheggio,\r\n      \"id_parcheggio\"\r\n    );\r\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroID, \"_id\");\r\n\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        {this.state.messaggio ? null : (\r\n          <Alert variant=\"success\">\r\n            Hai inserito correttamente il veicolo!\r\n            <Alert.Link href=\"/AggiornaVeicoli\"> Premi qui </Alert.Link>per\r\n            visualizzarlo\r\n          </Alert>\r\n        )}\r\n        {this.state.messaggio1 ? null : (\r\n          <Alert variant=\"success\">\r\n            Hai eliminato correttamente il veicolo!\r\n            <Alert.Link href=\"/AggiornaVeicoli\"> Premi qui </Alert.Link>per\r\n            visualizzare le modifiche\r\n          </Alert>\r\n        )}\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Tipo</th>\r\n                <th>Modello</th>\r\n                <th>Marca</th>\r\n                <th>Cilindrata</th>\r\n                <th>Numero posti</th>\r\n                <th>Numero porte</th>\r\n                <th>Targa</th>\r\n                <th>Parcheggio</th>\r\n                <th>Stato</th>\r\n                <th>Modifica</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {veicoliFiltrati.map((veicolo) => (\r\n                <tr key={veicolo._id}>\r\n                  <td>{veicolo.tipo}</td>\r\n                  <td>{veicolo.modello}</td>\r\n                  <td>{veicolo.marca}</td>\r\n                  <td>{veicolo.cilindrata}</td>\r\n                  <td>{veicolo.n_posti}</td>\r\n                  <td>{veicolo.n_porte}</td>\r\n                  <td>{veicolo.targa}</td>\r\n                  <td>{veicolo.id_parcheggio}</td>\r\n                  <td>{veicolo.stato}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.attivaVeicolo(veicolo._id)}\r\n                    >\r\n                      <i class=\"material-icons\">flash_on</i>\r\n                    </button>\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.bloccaVeicolo(veicolo._id)}\r\n                    >\r\n                      <i class=\"material-icons\">block</i>\r\n                    </button>\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.modificaVeicolo(veicolo._id)}\r\n                    >\r\n                      <i class=\"material-icons\">create</i>\r\n                    </button>\r\n                    {veicolo.stato === \"Attivo\" ? null : (\r\n                      <button\r\n                        class=\"btn\"\r\n                        onClick={() => {\r\n                          this.setState({ modalShow5: true });\r\n                          this.setState({ current_veicolo_id: veicolo._id });\r\n                        }}\r\n                      >\r\n                        <i class=\"material-icons\">delete</i>\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Container>\r\n    );\r\n\r\n    const PL = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Capienza Auto</th>\r\n                <th>Capienza Moto</th>\r\n                <th>Capienza Biciclette</th>\r\n                <th>Capienza Monopattini</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>{parcheggio.capienza_auto}</td>\r\n                  <td>{parcheggio.capienza_moto}</td>\r\n                  <td>{parcheggio.capienza_bici}</td>\r\n                  <td>{parcheggio.capienza_monopattini}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() =>\r\n                        (this.state.id_parcheggio = parcheggio._id)\r\n                      }\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const PL2 = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Capienza Auto</th>\r\n                <th>Capienza Moto</th>\r\n                <th>Capienza Biciclette</th>\r\n                <th>Capienza Monopattini</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>{parcheggio.capienza_auto}</td>\r\n                  <td>{parcheggio.capienza_moto}</td>\r\n                  <td>{parcheggio.capienza_bici}</td>\r\n                  <td>{parcheggio.capienza_monopattini}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => this.cambiaParcheggio(parcheggio._id)}\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow5}\r\n          onHide={() => window.location.reload()}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n              <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                Sei sicuro di voler cancellare il veicolo?\r\n              </h3>\r\n              <Row>\r\n                <Col sm>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    onClick={(e) =>\r\n                      this.deleteVeicolo(this.state.current_veicolo_id)\r\n                    }\r\n                  >\r\n                    Conferma\r\n                  </button>\r\n                </Col>\r\n                <Col sm>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() => window.location.reload()}\r\n                  >\r\n                    Annulla\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => window.location.reload()}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => window.location.reload()}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Inserisci i dati del veicolo\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Tipo</label>\r\n                    <select\r\n                      id=\"tipo\"\r\n                      type=\"text\"\r\n                      value={this.state.tipo}\r\n                      onChange={async (e) => {\r\n                        await this.onChange(e);\r\n                        this.setModalShow(true);\r\n                      }}\r\n                      error={errors.tipo}\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.tipo,\r\n                      })}\r\n                    >\r\n                      <option value=\"\" disabled selected>\r\n                        Tipo\r\n                      </option>\r\n                      <option value=\"Autovettura\">Autovettura</option>\r\n                      <option value=\"Moto\">Moto</option>\r\n                      <option value=\"Bicicletta\">Bicicletta</option>\r\n                      <option value=\"Monopattino\">Monopattino</option>\r\n                    </select>\r\n                    <span className=\"red-text\">{errors.tipo}</span>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => window.location.reload()}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow1}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci i dati dell'autovettura\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label>Modello</label>\r\n                      <select\r\n                        id=\"modello\"\r\n                        type=\"text\"\r\n                        value={this.state.modello}\r\n                        onChange={this.onChange}\r\n                        error={errors.modello}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.modello,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Modello\r\n                        </option>\r\n                        <option value=\"Berlina\">Berlina</option>\r\n                        <option value=\"Suv\">Suv</option>\r\n                        <option value=\"Utilitaria\">Utilitaria</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.modello}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Marca</label>\r\n                      <select\r\n                        id=\"marca\"\r\n                        type=\"text\"\r\n                        value={this.state.marca}\r\n                        onChange={this.onChange}\r\n                        error={errors.marca}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.marca,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Marca\r\n                        </option>\r\n                        <option value=\"Toyota\">Today-Tomorrow-Toyota</option>\r\n                        <option value=\"Fiat\">Fiat</option>\r\n                        <option value=\"Audi\">Audi</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.marca}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.cilindrata}\r\n                        error={errors.cilindrata}\r\n                        id=\"cilindrata\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.cilindrata,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.cilindrata}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"n_posti\">Numero posti</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.n_posti}\r\n                        error={errors.n_posti}\r\n                        id=\"n_posti\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.n_posti,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.n_posti}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"n_porte\">Numero porte</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.n_porte}\r\n                        error={errors.n_porte}\r\n                        id=\"n_porte\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.n_porte,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.n_porte}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"targa\">Targa</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.targa}\r\n                        error={errors.targa}\r\n                        id=\"targa\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.targa,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.targa}</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"descrizione\">Descrizione</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.descrizione}\r\n                        error={errors.descrizione}\r\n                        id=\"descrizione\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.descrizione,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.descrizione}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Inserisci\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow2}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci i dati della moto\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label>Modello</label>\r\n                      <select\r\n                        id=\"modello\"\r\n                        type=\"text\"\r\n                        value={this.state.modello}\r\n                        onChange={this.onChange}\r\n                        error={errors.modello}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.modello,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Modello\r\n                        </option>\r\n                        <option value=\"Scooter\">Scooter</option>\r\n                        <option value=\"Motocicletta\">Motocicletta</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.modello}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Marca</label>\r\n                      <select\r\n                        id=\"marca\"\r\n                        type=\"text\"\r\n                        value={this.state.marca}\r\n                        onChange={this.onChange}\r\n                        error={errors.marca}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.marca,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Marca\r\n                        </option>\r\n                        <option value=\"Aprilia\">Aprilia</option>\r\n                        <option value=\"KTM\">KTM</option>\r\n                        <option value=\"Pegeout\">Pegeout</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.marca}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.cilindrata}\r\n                        error={errors.cilindrata}\r\n                        id=\"cilindrata\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.cilindrata,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.cilindrata}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"targa\">Targa</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.targa}\r\n                        error={errors.targa}\r\n                        id=\"targa\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.targa,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.targa}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"descrizione\">Descrizione</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.descrizione}\r\n                        error={errors.descrizione}\r\n                        id=\"descrizione\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.descrizione,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.descrizione}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Inserisci\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow3}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci i dati del monopattino o della bicicletta\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"descrizione\">Descrizione</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.descrizione}\r\n                        error={errors.descrizione}\r\n                        id=\"descrizione\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.descrizione,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.descrizione}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Inserisci\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow4}\r\n            onHide={() => window.location.reload()}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Modifica il parcheggio associato al veicolo selezionato\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"form-group\">\r\n                  <label>Parcheggio</label>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL2}\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => window.location.reload()}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm={3} md={{ span: 3, offset: 9 }}>\r\n              <button\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                onClick={() => this.setModalShow(true)}\r\n              >\r\n                + Inserisci veicolo\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tipo\">Tipo</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroTipo\", event.target.value)\r\n                  }\r\n                  id=\"tipo\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"parcheggio\">Parcheggio</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroParcheggio\", event.target.value)\r\n                  }\r\n                  id=\"parcheggio\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"id_veicolo\">ID</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroID\", event.target.value)\r\n                  }\r\n                  id=\"id_veicolo\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Container sm={12}>\r\n          {veicolo.length === 0 ? \"Non ci sono veicoli\" : VL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAggiornaVeicoli.propTypes = {\r\n  CancellaVeicolo: PropTypes.func.isRequired,\r\n  registerVeicolo: PropTypes.func.isRequired,\r\n  Listaveicoli: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicoli: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n  modificaStato: PropTypes.func.isRequired,\r\n  modificaParcheggio: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicoli: state.listaveicoli,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  registerVeicolo,\r\n  Listaveicoli,\r\n  CancellaVeicolo,\r\n  Listaparcheggi,\r\n  modificaStato,\r\n  modificaParcheggio,\r\n})(AggiornaVeicoli);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaParcheggi.js",["474","475"],"import { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { registerParcheggio } from \"../../actions/parcheggiActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Alert } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriParcheggi from \"../../utils/filtriParcheggi\";\r\n\r\nclass AggiornaParcheggi extends Component {\r\n  state = {\r\n    nome: \"\",\r\n    indirizzo: \"\",\r\n    numero_civico: \"\",\r\n    capienza_auto: \"\",\r\n    capienza_moto: \"\",\r\n    capienza_bici: \"\",\r\n    capienza_monopattini: \"\",\r\n    errore: false,\r\n    errors: {},\r\n    filtroNome: \"\",\r\n    filtroIndirizzo: \"\",\r\n    modalShow: false,\r\n    messaggio: false,\r\n    bool: false,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaparcheggi();\r\n  }\r\n\r\n  viewCustomer(id) {\r\n    console.log(id);\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (e) => {\r\n    this.state.bool = false;\r\n    e.preventDefault();\r\n    const newParcheggio = {\r\n      nome: this.state.nome,\r\n      indirizzo: this.state.indirizzo,\r\n      numero_civico: this.state.numero_civico,\r\n      capienza_auto: this.state.capienza_auto,\r\n      capienza_moto: this.state.capienza_moto,\r\n      capienza_bici: this.state.capienza_bici,\r\n      capienza_monopattini: this.state.capienza_monopattini,\r\n    };\r\n    for (var i = 0; i < this.props.listaparcheggi.parcheggio.length; i++) {\r\n      console.log(\r\n        this.state.indirizzo,\r\n        this.props.listaparcheggi.parcheggio[i].indirizzo,\r\n        this.state.indirizzo ===\r\n          this.props.listaparcheggi.parcheggio[i].indirizzo\r\n      );\r\n      if (\r\n        this.state.indirizzo ===\r\n        this.props.listaparcheggi.parcheggio[i].indirizzo\r\n      ) {\r\n        this.state.bool = true;\r\n        break;\r\n      }\r\n    }\r\n    this.props.registerParcheggio(newParcheggio, this.props.history);\r\n    if (this.state.indirizzo === \"\") {\r\n      this.setState({ errore: true });\r\n      this.state.errors.indirizzo = \"Inserisci l'indirizzo\";\r\n    } else if (this.state.bool) {\r\n      this.setState({ errore: true });\r\n      this.state.errors.indirizzo =\r\n        \"E' già presente un parcheggio con questo indirizzo\";\r\n    } else {\r\n      this.setModalShow(false);\r\n      this.setState({ messaggio: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filtroNome, filtroIndirizzo, errors } = this.state;\r\n\r\n    let parcheggiFiltrati = [];\r\n    const { parcheggio } = this.props.listaparcheggi;\r\n    parcheggiFiltrati = filtriParcheggi(parcheggio, filtroNome, \"nome\");\r\n    parcheggiFiltrati = filtriParcheggi(\r\n      parcheggiFiltrati,\r\n      filtroIndirizzo,\r\n      \"indirizzo\"\r\n    );\r\n\r\n    const PL = (\r\n      <div className=\"container\" style={{ marginBottom: \"16rem\" }}>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Capienza Auto</th>\r\n                <th>Capienza Moto</th>\r\n                <th>Capienza Biciclette</th>\r\n                <th>Capienza Monopattini</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggiFiltrati.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>{parcheggio.capienza_auto}</td>\r\n                  <td>{parcheggio.capienza_moto}</td>\r\n                  <td>{parcheggio.capienza_bici}</td>\r\n                  <td>{parcheggio.capienza_monopattini}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        {this.state.messaggio ? (\r\n          <Alert variant=\"success\">\r\n            Hai inserito correttamente il parcheggio!{\" \"}\r\n            <Alert.Link href=\"/AggiornaParcheggi\">Clicca qui </Alert.Link> per\r\n            visualizzarlo\r\n          </Alert>\r\n        ) : null}\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Inserisci i dati del parcheggio\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"nome\">Nome</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.nome}\r\n                      id=\"nome\"\r\n                      error={errors.nome}\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.nome,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.nome}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"indirizzo\">Indirizzo</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.indirizzo}\r\n                      id=\"indirizzo\"\r\n                      error={errors.indirizzo}\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.indirizzo,\r\n                      })}\r\n                    />\r\n                    {this.state.errore ? (\r\n                      <span className=\"red-text\">{errors.indirizzo}</span>\r\n                    ) : null}{\" \"}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"numero_civico\">Numero Civico</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.numero_civico}\r\n                      error={errors.numero_civico}\r\n                      id=\"numero_civico\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.numero_civico,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.numero_civico}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"capienza_auto\">Capienza Auto</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.capienza_auto}\r\n                      error={errors.capienza_auto}\r\n                      id=\"capienza_auto\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.capienza_auto,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.capienza_auto}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"capienza_moto\">Capienza Moto</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.capienza_moto}\r\n                      error={errors.capienza_moto}\r\n                      id=\"capienza_moto\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.capienza_moto,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.capienza_moto}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"capienza_bici\">Capienza Biciclette</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.capienza_bici}\r\n                      error={errors.capienza_bici}\r\n                      id=\"capienza_bici\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.capienza_bici,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">{errors.capienza_bici}</span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"capienza_monopattini\">\r\n                      Capienza Monopattini\r\n                    </label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.capienza_monopattini}\r\n                      error={errors.capienza_monopattini}\r\n                      id=\"capienza_monopattini\"\r\n                      type=\"number\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.capienza_monopattini,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">\r\n                      {errors.capienza_monopattini}\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Aggiunta Parcheggio\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Inserisci\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm={3} md={{ span: 3, offset: 9 }}>\r\n              <button\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                onClick={() => {\r\n                  this.setModalShow(true);\r\n                  this.setState({ messaggio: false });\r\n                }}\r\n              >\r\n                + Inserisci Parcheggio\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"nome\">Nome</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroNome\", event.target.value)\r\n                  }\r\n                  id=\"nome\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"indirizzo\">Indirizzo</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroIndirizzo\", event.target.value)\r\n                  }\r\n                  id=\"indirizzo\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"row\">\r\n          {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAggiornaParcheggi.propTypes = {\r\n  registerParcheggio: PropTypes.func.isRequired,\r\n  Listaparcheggi: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  registerParcheggio,\r\n  Listaparcheggi,\r\n})(AggiornaParcheggi);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaTariffe.js",["476","477","478","479","480"],"import { Listaveicoli } from \"../../actions/veicoliActions\";\r\nimport { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { modificaTariffa } from \"../../actions/veicoliActions\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass ModificaTariffe extends Component {\r\n  state = {\r\n    tipo: \"\",\r\n    modello: \"\",\r\n    marca: \"\",\r\n    cilindrata: 0,\r\n    n_posti: 0,\r\n    n_porte: 0,\r\n    targa: \"\",\r\n    id_parcheggio: \"\",\r\n    descrizione: \"\",\r\n    prezzo_festivo: \"\",\r\n    prezzo_feriale: \"\",\r\n    stato: \"\",\r\n    errors: {},\r\n    filtroTipo: \"\",\r\n    filtroParcheggio: \"\",\r\n    filtroID: \"\",\r\n    current_id: \"\",\r\n    veicoli_inparcheggio: [], //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaveicoli();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  modificaTariffaFeriale(id) {\r\n    this.setState({ modalShow1: true });\r\n    this.state.current_id = id;\r\n  }\r\n  modificaTariffaFestivo(id) {\r\n    this.setState({ modalShow2: true });\r\n    this.state.current_id = id;\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.prezzo_festivo === \"\" && this.state.prezzo_feriale !== \"\") {\r\n      const VeicoloDaModificare = {\r\n        _id: this.state.current_id,\r\n        prezzo_feriale: this.state.prezzo_feriale,\r\n      };\r\n      this.props.modificaTariffa(this.state.current_id, VeicoloDaModificare);\r\n    } else if (\r\n      this.state.prezzo_feriale === \"\" &&\r\n      this.state.prezzo_festivo !== \"\"\r\n    ) {\r\n      const VeicoloDaModificareDue = {\r\n        _id: this.state.current_id,\r\n        prezzo_festivo: this.state.prezzo_festivo,\r\n      };\r\n\r\n      this.props.modificaTariffa(this.state.current_id, VeicoloDaModificareDue);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { filtroTipo, filtroParcheggio, filtroID, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { veicolo } = this.props.listaveicoli;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroTipo, \"tipo\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroParcheggio,\r\n      \"id_parcheggio\"\r\n    );\r\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroID, \"_id\");\r\n\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"25rem\" }}>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Tipo</th>\r\n                <th>Modello</th>\r\n                <th>Marca</th>\r\n                <th>Targa</th>\r\n                <th>Parcheggio</th>\r\n                <th>Prezzo Festivo</th>\r\n                <th>Prezzo Feriale</th>\r\n                <th>Stato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {veicoliFiltrati.map((veicolo) => (\r\n                <tr key={veicolo._id}>\r\n                  <td>{veicolo.tipo}</td>\r\n                  <td>{veicolo.modello}</td>\r\n                  <td>{veicolo.marca}</td>\r\n                  <td>{veicolo.targa}</td>\r\n                  <td>{veicolo.id_parcheggio}</td>\r\n                  <td>\r\n                    {veicolo.prezzo_festivo + \"€ \"}\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.modificaTariffaFestivo(veicolo._id)}\r\n                    >\r\n                      <i class=\"material-icons\">create</i>\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    {veicolo.prezzo_feriale + \"€ \"}\r\n                    {\"  \"}\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.modificaTariffaFeriale(veicolo._id)}\r\n                    >\r\n                      <i class=\"material-icons\">create</i>\r\n                    </button>\r\n                  </td>\r\n                  <td>{veicolo.stato}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Container>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow1}\r\n            onHide={() => this.setState({ modalShow1: false })}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci il prezzo Feriale\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"prezzo_feriale\">Prezzo Feriale</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.prezzo_feriale}\r\n                        error={errors.prezzo_feriale}\r\n                        id=\"prezzo_feriale\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.prezzo_feriale,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.prezzo_feriale}</span>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Conferma\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setState({ modalShow1: false })}>\r\n                Annulla\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow2}\r\n            onHide={() => this.setState({ modalShow2: false })}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci il prezzo Festivo\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"prezzo_festivo\">Prezzo Festivo</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.prezzo_festivo}\r\n                        error={errors.prezzo_festivo}\r\n                        id=\"prezzo_festivo\"\r\n                        type=\"number\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.prezzo_festivo,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.prezzo_festivo}</span>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Conferma\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setState({ modalShow2: false })}>\r\n                Annulla\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tipo\">Tipo</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroTipo\", event.target.value)\r\n                  }\r\n                  id=\"tipo\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"parcheggio\">Parcheggio</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroParcheggio\", event.target.value)\r\n                  }\r\n                  id=\"parcheggio\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"id_veicolo\">ID</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroID\", event.target.value)\r\n                  }\r\n                  id=\"id_veicolo\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Container sm={12}>\r\n          {veicolo.length === 0 ? \"Non ci sono veicoli\" : VL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nModificaTariffe.propTypes = {\r\n  Listaveicoli: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicoli: PropTypes.object.isRequired,\r\n  modificaTariffa: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicoli: state.listaveicoli,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicoli,\r\n  modificaTariffa,\r\n})(ModificaTariffe);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineAdmin\\AggiornaDipendenti.js",["481","482"],"import { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport { Listadipendenti } from \"../../actions/authAutentications\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  registerUser,\r\n  CancellaDipendente,\r\n} from \"../../actions/authAutentications\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button } from \"react-bootstrap\";\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport ricercaFiltro from \"../../utils/ricercaFiltro\";\r\n\r\nclass AggiornaDipendenti extends Component {\r\n  state = {\r\n    nome: \"\",\r\n    cognome: \"\",\r\n    data_nascita: \"\",\r\n    sesso: \"\",\r\n    luogo_nascita: \"\",\r\n    provincia_nascita: \"\",\r\n    codice_fiscale: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    ruolo: \"\",\r\n    numero_patente: \"\",\r\n    data_rilascio_patente: \"\",\r\n    data_scadenza_patente: \"\",\r\n    ente_rilascio: \"\",\r\n    id_parcheggio: \"\",\r\n    filtroNome: \"\",\r\n    filtroCognome: \"\",\r\n    filtroEmail: \"\",\r\n    filtroFiscale: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaparcheggi();\r\n    await this.props.Listadipendenti();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  deleteDipendente(id) {\r\n    this.props.CancellaDipendente(id);\r\n    window.location.reload();\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      nome: this.state.nome,\r\n      cognome: this.state.cognome,\r\n      codice_fiscale: this.state.codice_fiscale,\r\n      data_nascita: this.state.data_nascita,\r\n      sesso: this.state.sesso,\r\n      luogo_nascita: this.state.luogo_nascita,\r\n      provincia_nascita: this.state.provincia_nascita,\r\n      patente: this.state.patente,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      ruolo: this.state.ruolo,\r\n      password2: this.state.password2,\r\n      numero_patente: this.state.numero_patente,\r\n      data_rilascio_patente: this.state.data_rilascio_patente,\r\n      data_scadenza_patente: this.state.data_scadenza_patente,\r\n      ente_rilascio: this.state.ente_rilascio,\r\n      id_parcheggio: this.state.id_parcheggio,\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  viewCustomer(id) {\r\n    console.log(id);\r\n  }\r\n  setModalShow = (input) => {\r\n    if (this.state.ruolo === \"\") this.setState({ modalShow: input });\r\n    else if (this.state.ruolo === \"Addetto\")\r\n      this.setState({ modalShow1: input });\r\n    else if (this.state.ruolo === \"Autista\")\r\n      this.setState({ modalShow2: input });\r\n  };\r\n\r\n  render() {\r\n    const { filtroNome, filtroCognome, filtroEmail, filtroFiscale, errors } =\r\n      this.state;\r\n    const { parcheggio } = this.props.listaparcheggi;\r\n    let utentiFiltrati = [];\r\n    const { user } = this.props.customerlist;\r\n    utentiFiltrati = ricercaFiltro(user, filtroNome, \"nome\");\r\n    utentiFiltrati = ricercaFiltro(utentiFiltrati, filtroCognome, \"cognome\");\r\n    utentiFiltrati = ricercaFiltro(utentiFiltrati, filtroEmail, \"email\");\r\n    utentiFiltrati = ricercaFiltro(\r\n      utentiFiltrati,\r\n      filtroFiscale,\r\n      \"codice_fiscale\"\r\n    );\r\n\r\n    const CL = (\r\n      <div className=\"container\" style={{ marginBottom: \"14rem\" }}>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Cognome</th>\r\n                <th>Codice Fiscale</th>\r\n                <th>Email</th>\r\n                <th>Ruolo</th>\r\n                <th>Elimina</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {utentiFiltrati.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.nome}</td>\r\n                  <td>{user.cognome}</td>\r\n                  <td>{user.codice_fiscale}</td>\r\n                  <td>{user.email}</td>\r\n\r\n                  <td>{user.ruolo}</td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <button\r\n                      class=\"btn\"\r\n                      onClick={() => this.deleteDipendente(user._id)}\r\n                    >\r\n                      <i class=\"material-icons\">delete</i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    const PL = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Capienza Auto</th>\r\n                <th>Capienza Moto</th>\r\n                <th>Capienza Biciclette</th>\r\n                <th>Capienza Monopattini</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>{parcheggio.capienza_auto}</td>\r\n                  <td>{parcheggio.capienza_moto}</td>\r\n                  <td>{parcheggio.capienza_bici}</td>\r\n                  <td>{parcheggio.capienza_monopattini}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() =>\r\n                        (this.state.id_parcheggio = parcheggio._id)\r\n                      }\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => window.location.reload()}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Inserisci i dati del dipendente\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"Form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Ruolo</label>\r\n                    <select\r\n                      id=\"ruolo\"\r\n                      type=\"text\"\r\n                      value={this.state.ruolo}\r\n                      onChange={async (e) => {\r\n                        await this.onChange(e);\r\n                        this.setModalShow(true);\r\n                      }}\r\n                      error={errors.ruolo}\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.ruolo,\r\n                      })}\r\n                    >\r\n                      <option value=\"\" disabled selected>\r\n                        Ruolo\r\n                      </option>\r\n                      <option value=\"Addetto\">Addetto al parcheggio</option>\r\n                      <option value=\"Autista\">Autista</option>\r\n                    </select>\r\n                    <span className=\"red-text\">{errors.ruolo}</span>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => window.location.reload()}>Annulla</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow2}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci i dati dell'autista\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"nome\">Nome</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.nome}\r\n                        error={errors.nome}\r\n                        id=\"nome\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.nome,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.nome}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"cognome\">Cognome</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.cognome}\r\n                        error={errors.cognome}\r\n                        id=\"cognome\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.cognome,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.cognome}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"data_nascita\">Data di nascita</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.data_nascita}\r\n                        error={errors.data_nascita}\r\n                        id=\"data_nascita\"\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.data_nascita,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.data_nascita}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Sesso</label>\r\n                      <select\r\n                        id=\"sesso\"\r\n                        type=\"text\"\r\n                        value={this.state.sesso}\r\n                        onChange={this.onChange}\r\n                        error={errors.sesso}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.sesso,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Sesso\r\n                        </option>\r\n                        <option value=\"M\">Uomo</option>\r\n                        <option value=\"F\">Donna</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.sesso}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"luogo_nascita\">Luogo di nascita</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.luogo_nascita}\r\n                        error={errors.luogo_nascita}\r\n                        id=\"luogo_nascita\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.luogo_nascita,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.luogo_nascita}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Provincia di nascita</label>\r\n                      <select\r\n                        id=\"provincia_nascita\"\r\n                        type=\"text\"\r\n                        value={this.state.provincia_nascita}\r\n                        onChange={this.onChange}\r\n                        error={errors.provincia_nascita}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.provincia_nascita,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Provincia di Nascita\r\n                        </option>\r\n                        <option value=\"AG\">Agrigento</option>\r\n                        <option value=\"CL\">Caltanissetta</option>\r\n                        <option value=\"CT\">Catania</option>\r\n                        <option value=\"EN\">Enna</option>\r\n                        <option value=\"ME\">Messina</option>\r\n                        <option value=\"PA\">Palermo</option>\r\n                        <option value=\"RG\">Ragusa</option>\r\n                        <option value=\"SR\">Siracusa</option>\r\n                        <option value=\"TP\">Trapani</option>\r\n                      </select>\r\n                      <span className=\"red-text\">\r\n                        {errors.provincia_nascita}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"codice_fiscale\">Codice Fiscale</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.codice_fiscale}\r\n                        error={errors.codice_fiscale}\r\n                        id=\"codice_fiscale\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.codice_fiscale,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.codice_fiscale}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"numero_patente\">Numero Patente</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.numero_patente}\r\n                        error={errors.numero_patente}\r\n                        id=\"numero_patente\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.numero_patente,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.numero_patente}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"data_rilascio_patente\">\r\n                        Data rilascio\r\n                      </label>\r\n                      <input\r\n                        type=\"date\"\r\n                        onChange={this.onChange}\r\n                        value={this.state.data_rilascio_patente}\r\n                        error={errors.data_rilascio_patente}\r\n                        id=\"data_rilascio_patente\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.data_rilascio_patente,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">\r\n                        {errors.data_rilascio_patente}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"data_scadenza_patente\">\r\n                        Data scadenza\r\n                      </label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        type=\"date\"\r\n                        value={this.state.data_scadenza_patente}\r\n                        error={errors.data_scadenza_patente}\r\n                        id=\"data_scadenza_patente\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.data_scadenza_patente,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">\r\n                        {errors.data_scadenza_patente}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"ente_rilascio\">Ente rilascio</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        placeholder={user.ente_rilascio}\r\n                        value={this.state.ente_rilascio}\r\n                        error={errors.ente_rilascio}\r\n                        id=\"ente_rilascio\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.ente_rilascio,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.ente_rilascio}</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        error={errors.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.email,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.email}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.password,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.password}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password2\">Conferma Password</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password2}\r\n                        error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.password2,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.password2}</span>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <Container fluid style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            show={this.state.modalShow1}\r\n            onHide={() => this.setModalShow(false)}\r\n            backdrop=\"static\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Inserisci i dati dell'addetto al parcheggio\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n                <div className=\"Form\">\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"nome\">Nome</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.nome}\r\n                        error={errors.nome}\r\n                        id=\"nome\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.nome,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.nome}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"cognome\">Cognome</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.cognome}\r\n                        error={errors.cognome}\r\n                        id=\"cognome\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.cognome,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.cognome}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"data_nascita\">Data di nascita</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.data_nascita}\r\n                        error={errors.data_nascita}\r\n                        id=\"data_nascita\"\r\n                        type=\"date\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.data_nascita,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.data_nascita}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Sesso</label>\r\n                      <select\r\n                        id=\"sesso\"\r\n                        type=\"text\"\r\n                        value={this.state.sesso}\r\n                        onChange={this.onChange}\r\n                        error={errors.sesso}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.sesso,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Sesso\r\n                        </option>\r\n                        <option value=\"M\">Uomo</option>\r\n                        <option value=\"F\">Donna</option>\r\n                      </select>\r\n                      <span className=\"red-text\">{errors.sesso}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"luogo_nascita\">Luogo di nascita</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.luogo_nascita}\r\n                        error={errors.luogo_nascita}\r\n                        id=\"luogo_nascita\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.luogo_nascita,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.luogo_nascita}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Provincia di nascita</label>\r\n                      <select\r\n                        id=\"provincia_nascita\"\r\n                        type=\"text\"\r\n                        value={this.state.provincia_nascita}\r\n                        onChange={this.onChange}\r\n                        error={errors.provincia_nascita}\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.provincia_nascita,\r\n                        })}\r\n                      >\r\n                        <option value=\"\" disabled selected>\r\n                          Provincia di Nascita\r\n                        </option>\r\n                        <option value=\"AG\">Agrigento</option>\r\n                        <option value=\"CL\">Caltanissetta</option>\r\n                        <option value=\"CT\">Catania</option>\r\n                        <option value=\"EN\">Enna</option>\r\n                        <option value=\"ME\">Messina</option>\r\n                        <option value=\"PA\">Palermo</option>\r\n                        <option value=\"RG\">Ragusa</option>\r\n                        <option value=\"SR\">Siracusa</option>\r\n                        <option value=\"TP\">Trapani</option>\r\n                      </select>\r\n                      <span className=\"red-text\">\r\n                        {errors.provincia_nascita}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"codice_fiscale\">Codice Fiscale</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.codice_fiscale}\r\n                        error={errors.codice_fiscale}\r\n                        id=\"codice_fiscale\"\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.codice_fiscale,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.codice_fiscale}</span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        error={errors.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.email,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.email}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.password,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.password}</span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password2\">Conferma Password</label>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password2}\r\n                        error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        className={classnames(\"form-control\", {\r\n                          invalid: errors.password2,\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.password2}</span>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Registrazione Log\"\r\n                      className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => this.setModalShow(false)}>Annulla</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Container>\r\n        <div className=\"Form\">\r\n          <Row>\r\n            <Col sm={3} md={{ span: 3, offset: 9 }}>\r\n              <button\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                onClick={() => this.setModalShow(true)}\r\n              >\r\n                + Inserisci dipendente\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"nome\">Nome</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroNome\", event.target.value)\r\n                  }\r\n                  id=\"nome\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cognome\">Cognome</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroCognome\", event.target.value)\r\n                  }\r\n                  id=\"cognome\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroEmail\", event.target.value)\r\n                  }\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"fiscale\">Codice Fiscale</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroFiscale\", event.target.value)\r\n                  }\r\n                  id=\"fiscale\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"row\">\r\n          {user.length === 0 ? \"Non ci sono dipendenti\" : CL}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAggiornaDipendenti.propTypes = {\r\n  CancellaDipendente: PropTypes.func.isRequired,\r\n  Listadipendenti: PropTypes.func.isRequired,\r\n  registerUser: PropTypes.func.isRequired,\r\n\r\n  Listaparcheggi: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  customerlist: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  customerlist: state.customerlist,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaparcheggi,\r\n  Listadipendenti,\r\n  registerUser,\r\n  CancellaDipendente,\r\n})(withRouter(AggiornaDipendenti));\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineDipendenti\\ModificaParcheggio.js",["483","484","485","486"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Listaparcheggi } from \"../../actions/parcheggiActions\";\r\nimport { modificaParcheggioAssociato } from \"../../actions/authAutentications\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass ModificaParcheggio extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      id_parcheggio: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.Listaparcheggi();\r\n  }\r\n\r\n  ModificaParcheggioAssociato(id_parcheggio) {\r\n    this.state.id_parcheggio = id_parcheggio;\r\n    const dataUser = {\r\n      id_parcheggio: this.state.id_parcheggio,\r\n    };\r\n    this.props.modificaParcheggioAssociato(this.state.id, dataUser);\r\n  }\r\n\r\n  render() {\r\n    const { parcheggio } = this.props.listaparcheggi;\r\n    const { user } = this.props.auth;\r\n    this.state.id = user.id;\r\n\r\n    const PL = (\r\n      <div className=\"container\">\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          <table class=\"responsive-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Indirizzo</th>\r\n                <th>Numero Civico</th>\r\n                <th>Capienza Auto</th>\r\n                <th>Capienza Moto</th>\r\n                <th>Capienza Biciclette</th>\r\n                <th>Capienza Monopattini</th>\r\n                <th>Seleziona</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {parcheggio.map((parcheggio) => (\r\n                <tr key={parcheggio._id}>\r\n                  <td>{parcheggio.nome}</td>\r\n                  <td>{parcheggio.indirizzo}</td>\r\n                  <td>{parcheggio.numero_civico}</td>\r\n                  <td>{parcheggio.capienza_auto}</td>\r\n                  <td>{parcheggio.capienza_moto}</td>\r\n                  <td>{parcheggio.capienza_bici}</td>\r\n                  <td>{parcheggio.capienza_monopattini}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() =>\r\n                        this.ModificaParcheggioAssociato(parcheggio._id)\r\n                      }\r\n                      className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    >\r\n                      Avanti\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Container style={{ marginTop: \"5rem\", marginBottom: \"31rem\" }}>\r\n        <div className=\"row\">\r\n          {parcheggio.length === 0 ? \"Non ci sono parcheggi\" : PL}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nModificaParcheggio.propTypes = {\r\n  Listaparcheggi: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  modificaParcheggioAssociato: PropTypes.object.isRequired,\r\n  listaparcheggi: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  listaparcheggi: state.listaparcheggi,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  Listaparcheggi,\r\n  modificaParcheggioAssociato,\r\n})(ModificaParcheggio);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\PagineDipendenti\\DashboardDipendenti.js",["487"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authAutentications\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Logo from \"../../immagini/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DashboardDipendenti extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    if (user.ruolo === \"Cliente\") this.props.history.push(\"/HomeCliente\");\r\n    else if (user.ruolo === \"Admin\") this.props.history.push(\"/Dashboard\");\r\n    return (\r\n      <div className=\"dashboardAutista\" style={{ backgroundColor: \"#010101\" }}>\r\n        <Container\r\n          style={{\r\n            textAlign: \"center\",\r\n            paddingBottom: \"21rem\",\r\n          }}\r\n        >\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={12}>\r\n              <h1>\r\n                Benvenuto <b>{user.nome}</b>, un nuovo giorno in KARM!\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={4} className=\"colonnaAutista\">\r\n              <Link to=\"/GestioneCorsaAdmin\">\r\n                <Button variant=\"primary\" size=\"lg\" block className=\"bottone\">\r\n                  Gestione Corsa\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboardDipendenti.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(DashboardDipendenti);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\layout\\layout.js",["488"],"import React from \"react\";\r\n\r\n//Componenti\r\nimport Navbar from \"../navbar/navbar\";\r\nimport Footer from \"../footer/footer\";\r\n\r\nexport default class Layout extends React.Component{ \r\n   constructor(props){ \r\n      super(props); \r\n   }\r\n   render(){ \r\n       return( \r\n          <div> \r\n             <Navbar/> \r\n             {this.props.children} \r\n             <Footer/> \r\n         </div>\r\n      ); \r\n   }\r\n}","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\type.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\prenotazioniActions.js",["489","490"],"import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  VISUALIZZA_PRENOTAZIONI,\r\n  MODIFICA_PPRENOTAZIONE,\r\n  CANCELLA_PRENOTAZIONE,\r\n} from \"./type\";\r\n\r\n//Register Prenotazioni\r\nexport const registerPrenotazione = (prenotazione) => (dispatch) => {\r\n  axios\r\n    .post(\"api/prenotazioni/addPrenotazione\", prenotazione)\r\n    .then()\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const ListaPrenotazioni = (cliente) => (dispatch) => {\r\n  axios\r\n    .put(\"/api/prenotazioni/prenotazionilist/\", cliente)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: VISUALIZZA_PRENOTAZIONI,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const inviaNotificheAutisti = (prenotazione) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/prenotazioni/notificheprenotazioni/\", prenotazione)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      window.location.href = \"/HomeCliente\";\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const modificaStatoPrenotazione = (prenotazione) => (dispatch) => {\r\n  axios\r\n    .put(`/api/prenotazioni/modificastatoprenotazione/`, prenotazione)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: MODIFICA_PPRENOTAZIONE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const modificaStatoPrenotazione2 = (id, prenotazione) => (dispatch) => {\r\n  axios\r\n    .put(`/api/prenotazioni/modificastatoprenotazione2/${id}`, prenotazione)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: MODIFICA_PPRENOTAZIONE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const modificaPrenotazione = (id, Prenotazione) => (dispatch) => {\r\n  axios\r\n    .put(`/api/prenotazioni/modificaprenotazione/${id}`, Prenotazione)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: MODIFICA_PPRENOTAZIONE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const cancellaPrenotazione = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/prenotazioni/cancellaPrenotazione/${id}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CANCELLA_PRENOTAZIONE,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\filtriVeicoli.js",["491"],"export default function (listaveicoli, filter, filterBy) {\r\n    if (!listaveicoli) return null;\r\n    if (\r\n      !filter ||\r\n      !filterBy ||\r\n      !filter.trim()\r\n    )\r\n      return listaveicoli;\r\n    return listaveicoli.filter((element) =>\r\n      element[filterBy]\r\n        .toString()\r\n        .toLowerCase()\r\n        .startsWith(filter.toString().toLowerCase())\r\n    );\r\n  }","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\notificheActions.js",["492"],"import axios from \"axios\";\r\nimport {\r\n  VISUALIZZA_NOTIFICHE,\r\n  INVIA_NOTIFICA_CLIENTE,\r\n  CANCELLA_NOTIFICA,\r\n  GET_ERRORS,\r\n} from \"./type\";\r\n\r\nexport const ListaNotifiche = (cliente) => (dispatch) => {\r\n  axios\r\n    .put(\"/api/notifiche/notifichelist/\", cliente)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: VISUALIZZA_NOTIFICHE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const inviaNotificaCliente = (id_utente) => (dispatch) => {\r\n  axios\r\n    .post(`/api/notifiche/notificheprenotazionicliente/${id_utente}`, id_utente)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const cancellaNotifica = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/notifiche/cancellanotifica/${id}`)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: CANCELLA_NOTIFICA,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\veicoliActions.js",["493","494","495","496","497","498","499"],"import { Container, Col, Row, Modal, Button, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {\r\n  VISUALIZZA_VEICOLI,\r\n  ERROR_VEICOLI,\r\n  INSERISCI_VEICOLO,\r\n  MODIFICA_VEICOLO,\r\n  GET_SPECIFIC_VEICOLO,\r\n  CANCELLA_VEICOLO,\r\n  VISUALIZZA_VEICOLI_DISPONIBILI,\r\n} from \"./type\";\r\n\r\n// Register User\r\nexport const registerVeicolo = (veicolo) => (dispatch) => {\r\n  axios.post(\"/api/veicoli/addVeicolo\", veicolo).catch((err) =>\r\n    dispatch({\r\n      type: ERROR_VEICOLI,\r\n      payload: err.response.data,\r\n    })\r\n  );\r\n};\r\n\r\n// Lista Veicoli\r\nexport const Listaveicoli = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/veicoli/veicolilist\")\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: VISUALIZZA_VEICOLI,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const Listaveicolidisponibili = (tipo, veicolo) => (dispatch) => {\r\n  axios\r\n    .put(`/api/veicoli/veicolilistdisponibili/${tipo}`, veicolo)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: VISUALIZZA_VEICOLI_DISPONIBILI,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const ModificaVeicolo = (id, veicolo) => (dispatch) => {\r\n  axios\r\n    .put(`/api/veicoli/updateVeicolo/${id}`, veicolo)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: MODIFICA_VEICOLO,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const CancellaVeicolo = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/veicoli/deleteVeicolo/${id}`)\r\n    .then((res) => {\r\n      console.log(id);\r\n      dispatch({\r\n        type: CANCELLA_VEICOLO,\r\n        payload: id,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: ERROR_VEICOLI,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\nexport const GetSpecificVeicolo = (id) => (dispatch) => {\r\n  axios\r\n    .get(`/api/veicoli/veicolo/${id}`)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: GET_SPECIFIC_VEICOLO,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\nexport const modificaStato = (id, veicolo) => (dispatch) => {\r\n  axios\r\n    .put(`/api/veicoli/updatestatoveicolo/${id}`, veicolo)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      window.location.reload();\r\n      dispatch({\r\n        type: MODIFICA_VEICOLO,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\nexport const modificaParcheggio = (id, veicolo) => (dispatch) => {\r\n  axios\r\n    .put(`/api/veicoli/updateparcheggioveicolo/${id}`, veicolo)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      window.location.reload();\r\n      dispatch({\r\n        type: MODIFICA_VEICOLO,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\nexport const modificaTariffa = (id, veicolo) => (dispatch) => {\r\n  axios\r\n    .put(`/api/veicoli/updatetariffaveicolo/${id}`, veicolo)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      window.location.href = \"/GestioneAmministrazione\";\r\n\r\n      dispatch({\r\n        type: MODIFICA_VEICOLO,\r\n        payload: res.data,\r\n      });\r\n\r\n      return true;\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\ricercaFiltro.js",["500"],"export default function (customerlist, filter, filterBy) {\r\n    if (!customerlist) return null;\r\n    if (\r\n      !filter ||\r\n      !filterBy ||\r\n      !filter.trim()\r\n    )\r\n      return customerlist;\r\n    return customerlist.filter((element) =>\r\n      element[filterBy]\r\n        .toString()\r\n        .toLowerCase()\r\n        .startsWith(filter.toString().toLowerCase())\r\n    );\r\n  }","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\parcheggiActions.js",["501","502"],"import axios from \"axios\";\r\nimport {\r\n  VISUALIZZA_PARCHEGGI,\r\n  ERROR_PARCHEGGI,\r\n  INSERISCI_PARCHEGGIO,\r\n  GET_ERRORS,\r\n} from \"./type\";\r\n\r\n// Register User\r\nexport const registerParcheggio = (parcheggio, history) => (dispatch) => {\r\n  axios.post(\"/api/parcheggi/addParcheggio\", parcheggio).catch((err) =>\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    })\r\n  );\r\n};\r\n\r\n// Lista Veicoli\r\nexport const Listaparcheggi = () => (dispatch) => {\r\n  axios\r\n    .get(\"/api/parcheggi/parcheggilist\")\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: VISUALIZZA_PARCHEGGI,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.error(err));\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\utils\\filtriParcheggi.js",["503"],"export default function (listaparcheggi, filter, filterBy) {\r\n  if (!listaparcheggi) return null;\r\n  if (!filter || !filterBy || !filter.trim()) return listaparcheggi;\r\n  return listaparcheggi.filter((element) =>\r\n    element[filterBy]\r\n      .toString()\r\n      .toLowerCase()\r\n      .startsWith(filter.toString().toLowerCase())\r\n  );\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\footer\\footer.js",["504"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n//icone da material ui-icons\r\nimport CopyrightIcon from \"@material-ui/icons/Copyright\";\r\n\r\n//Componenti nostre\r\nimport Logo from \"../../../immagini/logo1.png\";\r\n\r\nexport default class Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Footer\">\r\n        <Container fluid>\r\n          <Row>\r\n            <Col sm={4}>\r\n              <img\r\n                src={Logo}\r\n                alt=\"Karm-Logo-Footer\"\r\n                width=\"160em\"\r\n                style={{ marginBottom: \"2rem\" }}\r\n              />\r\n            </Col>\r\n            <Col sm={4}>\r\n              <h6 style={{ color: \"#010101\", fontWeight: \"bold\" }}>Azienda</h6>\r\n              <Link to=\"/ChiSiamo\">\r\n                <h6 style={{ color: \"#010101\" }}>Chi Siamo</h6>\r\n              </Link>\r\n              <Link to=\"/Mappa\">\r\n                <h6 style={{ color: \"#010101\" }}>I nostri parcheggi</h6>\r\n              </Link>\r\n              <a href=\"https://www.instagram.com/gab.krr/\">\r\n                <h6 style={{ color: \"#010101\" }}>Instagram</h6>\r\n              </a>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <h6 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                Contattaci\r\n              </h6>\r\n              <h6 style={{ color: \"#010101\" }}>Gabriele +39 3803719481</h6>\r\n              <h6 style={{ color: \"#010101\" }}>Salvatore +39 3803719481</h6>\r\n              <h6 style={{ color: \"#010101\" }}>Maria +39 3803719481</h6>\r\n              <h6 style={{ color: \"#010101\" }}>Giuseppe +39 3803719481</h6>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"Copyright\" sm={12} style={{ textAlign: \"center\" }}>\r\n              <CopyrightIcon style={{ fontSize: 20 }} />{\" \"}\r\n              <h6 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                KARM 2021\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\Layout\\navbar\\navbar.js",["505","506","507","508","509"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loginUser,\r\n  setCurrentUser,\r\n  logoutUser,\r\n} from \"../../../actions/authAutentications\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport \"../../../App.css\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Navbar, ButtonGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\n//icone da material ui-icons\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\n\r\n//Componenti nostre\r\nimport Logo from \"../../../immagini/logo.png\";\r\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\r\n\r\nlet stile;\r\n\r\nclass MyNavbar extends React.Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ modalShow: false });\r\n    this.props.logoutUser();\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { modalShow: false };\r\n  }\r\n  render() {\r\n    try {\r\n      const { user } = this.props.auth;\r\n      if (user.ruolo === \"Admin\" || user.ruolo === \"Addetto\") stile = \"AA\";\r\n      else if (user.ruolo === \"Cliente\" || user.ruolo === \"Autista\")\r\n        stile = \"CA\";\r\n    } catch (error) {\r\n      stile = \"default\";\r\n    }\r\n    switch (stile) {\r\n      case \"AA\":\r\n        return (\r\n          <div>\r\n            <Modal\r\n              {...this.props}\r\n              size=\"lg\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              centered\r\n              show={this.state.modalShow}\r\n              onHide={() => this.setState({ modalShow: false })}\r\n              backdrop=\"static\"\r\n            >\r\n              <Modal.Header closeButton></Modal.Header>\r\n              <Modal.Body>\r\n                <Container style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                    Sei sicuro di volerti disconnettere?\r\n                  </h3>\r\n                  <Row>\r\n                    <Col sm>\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"Registrazione Log\"\r\n                        className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                        onClick={(e) => this.onLogoutClick(e)}\r\n                      >\r\n                        Conferma\r\n                      </button>\r\n                    </Col>\r\n                    <Col sm>\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"Registrazione Log\"\r\n                        className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                        onClick={() => (window.location.href = \"/HomeCliente\")}\r\n                      >\r\n                        Annulla\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button onClick={() => this.setState({ modalShow: false })}>\r\n                  Annulla\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Navbar className=\"Navbar justify-content-between\">\r\n              <Navbar.Brand href=\"/HomeCliente\">\r\n                <img\r\n                  src={Logo}\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  alt=\"Karm-Logo\"\r\n                  className=\"logonavbar\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle />\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <DropdownButton\r\n                  menuAlign=\"right\"\r\n                  title={<PersonIcon style={{ fontSize: \"25\" }} />}\r\n                  id=\"dropdown-menu-align-right\"\r\n                  className=\"bottonenavbar\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\" href=\"/IlMioProfilo\">\r\n                    Il Mio Profilo\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item\r\n                    eventKey=\"4\"\r\n                    style={{ backgroundColor: \"red\" }}\r\n                    onClick={() => this.setState({ modalShow: true })}\r\n                  >\r\n                    Disconnettiti\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n      case \"CA\":\r\n        return (\r\n          <div>\r\n            <Modal\r\n              {...this.props}\r\n              size=\"lg\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              centered\r\n              show={this.state.modalShow}\r\n              onHide={() => this.setState({ modalShow: false })}\r\n              backdrop=\"static\"\r\n            >\r\n              <Modal.Header closeButton></Modal.Header>\r\n              <Modal.Body>\r\n                <Container style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n                    Sei sicuro di volerti disconnettere?\r\n                  </h3>\r\n                  <Row>\r\n                    <Col sm>\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"Registrazione Log\"\r\n                        className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                        onClick={(e) => this.onLogoutClick(e)}\r\n                      >\r\n                        Conferma\r\n                      </button>\r\n                    </Col>\r\n                    <Col sm>\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"Registrazione Log\"\r\n                        className=\"btn btn-primary btn-lg btn-block bottone\"\r\n                        onClick={() => (window.location.href = \"/HomeCliente\")}\r\n                      >\r\n                        Annulla\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button onClick={() => this.setState({ modalShow: false })}>\r\n                  Annulla\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Navbar className=\"Navbar justify-content-between\">\r\n              <Navbar.Brand href=\"/HomeCliente\">\r\n                <img\r\n                  src={Logo}\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  alt=\"Karm-Logo\"\r\n                  className=\"logonavbar\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle />\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Link to=\"/Notifiche\">\r\n                  <NotificationsActiveIcon\r\n                    style={{ fontSize: \"25\", marginTop: \"0.25rem\" }}\r\n                  />\r\n                </Link>\r\n                <DropdownButton\r\n                  menuAlign=\"right\"\r\n                  title={<PersonIcon style={{ fontSize: \"25\" }} />}\r\n                  id=\"dropdown-menu-align-right\"\r\n                  className=\"bottonenavbar\"\r\n                >\r\n                  <Dropdown.Item eventKey=\"1\" href=\"/IlMioProfilo\">\r\n                    Il Mio Profilo\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item\r\n                    eventKey=\"4\"\r\n                    style={{ backgroundColor: \"red\" }}\r\n                    onClick={() => this.setState({ modalShow: true })}\r\n                  >\r\n                    Disconnettiti\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <Navbar\r\n              className=\"Navbar\"\r\n              style={{ display: \"block\", textAlign: \"center\" }}\r\n            >\r\n              <Navbar.Brand href=\"/Login\">\r\n                <img\r\n                  src={Logo}\r\n                  width=\"50\"\r\n                  height=\"auto\"\r\n                  alt=\"Karm-Logo\"\r\n                  className=\"logonavbar1\"\r\n                />\r\n              </Navbar.Brand>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nMyNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(MyNavbar);\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\actions\\metodipagamentoActions.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\componenti\\googlemap\\styleMappa.js",["510"],"export default [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n      {\r\n        lightness: 13,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#144b53\",\r\n      },\r\n      {\r\n        lightness: 14,\r\n      },\r\n      {\r\n        weight: 1.4,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#08304b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#0c4152\",\r\n      },\r\n      {\r\n        lightness: 5,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#0b434f\",\r\n      },\r\n      {\r\n        lightness: 25,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#0b3d51\",\r\n      },\r\n      {\r\n        lightness: 16,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#146474\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#021019\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\notificheReducers.js",["511"],"import {\r\n  VISUALIZZA_NOTIFICHE,\r\n  INVIA_NOTIFICA_CLIENTE,\r\n  CANCELLA_NOTIFICA,\r\n} from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  notifica: [],\r\n  notifiche: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case VISUALIZZA_NOTIFICHE:\r\n      return {\r\n        ...state,\r\n        notifica: action.payload,\r\n      };\r\n    case CANCELLA_NOTIFICA:\r\n      const notifica = state.notifica.filter(\r\n        (notifica) => notifica._id !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        deleted: true,\r\n        notifica: notifica,\r\n      };\r\n    case INVIA_NOTIFICA_CLIENTE:\r\n      return {\r\n        ...state,\r\n        notifica: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\prenotazioniReducers.js",["512","513","514"],"import {\r\n  VISUALIZZA_PRENOTAZIONI,\r\n  MODIFICA_PPRENOTAZIONE,\r\n  CANCELLA_PRENOTAZIONE,\r\n} from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  prenotazione: [],\r\n  prenotazioni: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case VISUALIZZA_PRENOTAZIONI:\r\n      return {\r\n        ...state,\r\n        prenotazione: action.payload,\r\n      };\r\n    case MODIFICA_PPRENOTAZIONE:\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        prenotazione: action.payload,\r\n      };\r\n    case CANCELLA_PRENOTAZIONE:\r\n      const prenotazione = state.prenotazione.filter(\r\n        (prenotazione) => prenotazione._id !== action.payload.id\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\veicoliDisponibiliReducers.js",["515"],"import { VISUALIZZA_VEICOLI_DISPONIBILI } from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  veicolo: [],\r\n  veicoli: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case VISUALIZZA_VEICOLI_DISPONIBILI:\r\n      return {\r\n        ...state,\r\n        veicolo: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\metodipagamentoReducers.js",["516"],"import {\r\n  VISUALIZZA_METODIPAGAMENTO,\r\n  CANCELLA_METODIPAGAMENTO,\r\n} from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  pagamento: [],\r\n  pagamenti: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case VISUALIZZA_METODIPAGAMENTO:\r\n      return {\r\n        ...state,\r\n        pagamento: action.payload,\r\n      };\r\n    case CANCELLA_METODIPAGAMENTO:\r\n      const pagamento = state.pagamento.filter(\r\n        (pagamento) => pagamento._id !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        deleted: true,\r\n        pagamento: pagamento,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\parcheggiReducers.js",["517","518"],"import {\r\n  INSERISCI_PARCHEGGIO,\r\n  VISUALIZZA_PARCHEGGI,\r\n  ERROR_PARCHEGGI,\r\n} from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  parcheggio: [],\r\n  parcheggi: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case INSERISCI_PARCHEGGIO:\r\n      return {\r\n        ...state,\r\n        parcheggio: [action.payload],\r\n      };\r\n    case VISUALIZZA_PARCHEGGI:\r\n      return {\r\n        ...state,\r\n        parcheggio: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\veicoliReducers.js",["519"],"import {\r\n  INSERISCI_VEICOLO,\r\n  VISUALIZZA_VEICOLI,\r\n  ERROR_VEICOLI,\r\n  CANCELLA_VEICOLO,\r\n  GET_SPECIFIC_VEICOLO,\r\n  MODIFICA_VEICOLO,\r\n} from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  veicolo: [],\r\n  veicoli: {},\r\n  error: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case INSERISCI_VEICOLO:\r\n      return {\r\n        ...state,\r\n        veicolo: [action.payload],\r\n      };\r\n    case VISUALIZZA_VEICOLI:\r\n      return {\r\n        ...state,\r\n        veicolo: action.payload,\r\n      };\r\n    case ERROR_VEICOLI:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    case CANCELLA_VEICOLO:\r\n      const veicolo = state.veicolo.filter(\r\n        (veicolo) => veicolo._id !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        deleted: true,\r\n        veicolo: veicolo,\r\n      };\r\n    case GET_SPECIFIC_VEICOLO:\r\n      return {\r\n        ...state,\r\n        isFound: true,\r\n        veicolo: action.payload,\r\n      };\r\n    case MODIFICA_VEICOLO:\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        veicolo: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\errorReducers.js",["520"],"import {\r\n  GET_ERRORS,\r\n  ERROR_DIPENDENTI,\r\n  GET_ERRORS_MODIFICAPASSWORD,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case GET_ERRORS_MODIFICAPASSWORD:\r\n      return action.payload;\r\n    case ERROR_DIPENDENTI:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\customerlistReducers.js",["521"],"import { VISUALIZZA_CLIENTI, VISUALIZZA_DIPENDENTI } from \"../actions/type\";\r\n\r\nconst INITIAL_STATE = {\r\n  isFound: false,\r\n  isRetrieved: false,\r\n  deleted: false,\r\n  isUpdated: false,\r\n  user: [],\r\n  customer: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case VISUALIZZA_CLIENTI:\r\n      return {\r\n        ...state,\r\n        isRetrieved: true,\r\n        user: action.payload,\r\n      };\r\n    case VISUALIZZA_DIPENDENTI:\r\n      return {\r\n        ...state,\r\n        isRetrieved: true,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\gabri\\OneDrive\\Desktop\\KARM - REACT FINALE\\frontend\\src\\reducers\\authReducers.js",["522"],"import {\r\n  SET_CURRENT_USER,\r\n  USER_LOADING,\r\n  CANCELLA_DIPENDENTE,\r\n  MODIFICA_PASSWORD,\r\n  MODIFICA_PATENTE,\r\n  MODIFICA_PARCHEGGIO_ASSOCIATO,\r\n} from \"../actions/type\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case CANCELLA_DIPENDENTE:\r\n      const user = state.user.filter((user) => user._id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n        deleted: true,\r\n        user: user,\r\n      };\r\n    case MODIFICA_PASSWORD:\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        user: action.payload,\r\n      };\r\n    case MODIFICA_PATENTE:\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        user: action.payload,\r\n      };\r\n    case MODIFICA_PARCHEGGIO_ASSOCIATO:\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"527","severity":1,"message":"528","line":1,"column":17,"nodeType":"529","messageId":"530","endLine":1,"endColumn":26},{"ruleId":"527","severity":1,"message":"531","line":8,"column":3,"nodeType":"529","messageId":"530","endLine":8,"endColumn":15},{"ruleId":"527","severity":1,"message":"532","line":12,"column":8,"nodeType":"529","messageId":"530","endLine":12,"endColumn":13},{"ruleId":"527","severity":1,"message":"533","line":15,"column":21,"nodeType":"529","messageId":"530","endLine":15,"endColumn":24},{"ruleId":"527","severity":1,"message":"534","line":15,"column":26,"nodeType":"529","messageId":"530","endLine":15,"endColumn":29},{"ruleId":"535","severity":1,"message":"536","line":60,"column":7,"nodeType":"537","messageId":"538","endLine":60,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":95,"column":7,"nodeType":"537","messageId":"538","endLine":95,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":98,"column":7,"nodeType":"537","messageId":"538","endLine":98,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":101,"column":7,"nodeType":"537","messageId":"538","endLine":101,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":105,"column":7,"nodeType":"537","messageId":"538","endLine":105,"endColumn":24},{"ruleId":"527","severity":1,"message":"539","line":4,"column":10,"nodeType":"529","messageId":"530","endLine":4,"endColumn":19},{"ruleId":"527","severity":1,"message":"533","line":4,"column":21,"nodeType":"529","messageId":"530","endLine":4,"endColumn":24},{"ruleId":"527","severity":1,"message":"534","line":4,"column":26,"nodeType":"529","messageId":"530","endLine":4,"endColumn":29},{"ruleId":"527","severity":1,"message":"540","line":4,"column":31,"nodeType":"529","messageId":"530","endLine":4,"endColumn":37},{"ruleId":"541","severity":1,"message":"542","line":9,"column":3,"nodeType":"543","messageId":"544","endLine":11,"endColumn":4},{"ruleId":"527","severity":1,"message":"545","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":14},{"ruleId":"527","severity":1,"message":"546","line":9,"column":3,"nodeType":"529","messageId":"530","endLine":9,"endColumn":19},{"ruleId":"527","severity":1,"message":"547","line":10,"column":3,"nodeType":"529","messageId":"530","endLine":10,"endColumn":12},{"ruleId":"535","severity":1,"message":"536","line":59,"column":7,"nodeType":"537","messageId":"538","endLine":59,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":70,"column":5,"nodeType":"537","messageId":"538","endLine":70,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":61,"column":5,"nodeType":"537","messageId":"538","endLine":61,"endColumn":15},{"ruleId":"527","severity":1,"message":"548","line":5,"column":39,"nodeType":"529","messageId":"530","endLine":5,"endColumn":44},{"ruleId":"527","severity":1,"message":"540","line":4,"column":31,"nodeType":"529","messageId":"530","endLine":4,"endColumn":37},{"ruleId":"527","severity":1,"message":"549","line":4,"column":22,"nodeType":"529","messageId":"530","endLine":4,"endColumn":36},{"ruleId":"527","severity":1,"message":"550","line":5,"column":8,"nodeType":"529","messageId":"530","endLine":5,"endColumn":20},{"ruleId":"527","severity":1,"message":"551","line":6,"column":8,"nodeType":"529","messageId":"530","endLine":6,"endColumn":16},{"ruleId":"527","severity":1,"message":"552","line":7,"column":8,"nodeType":"529","messageId":"530","endLine":7,"endColumn":17},{"ruleId":"527","severity":1,"message":"545","line":8,"column":10,"nodeType":"529","messageId":"530","endLine":8,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":8,"column":16,"nodeType":"529","messageId":"530","endLine":8,"endColumn":26},{"ruleId":"527","severity":1,"message":"554","line":10,"column":3,"nodeType":"529","messageId":"530","endLine":10,"endColumn":20},{"ruleId":"527","severity":1,"message":"555","line":11,"column":3,"nodeType":"529","messageId":"530","endLine":11,"endColumn":23},{"ruleId":"527","severity":1,"message":"556","line":12,"column":3,"nodeType":"529","messageId":"530","endLine":12,"endColumn":29},{"ruleId":"527","severity":1,"message":"557","line":22,"column":3,"nodeType":"529","messageId":"530","endLine":22,"endColumn":7},{"ruleId":"527","severity":1,"message":"558","line":26,"column":8,"nodeType":"529","messageId":"530","endLine":26,"endColumn":18},{"ruleId":"527","severity":1,"message":"559","line":85,"column":13,"nodeType":"529","messageId":"530","endLine":85,"endColumn":19},{"ruleId":"527","severity":1,"message":"560","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":31},{"ruleId":"527","severity":1,"message":"545","line":6,"column":10,"nodeType":"529","messageId":"530","endLine":6,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":6,"column":16,"nodeType":"529","messageId":"530","endLine":6,"endColumn":26},{"ruleId":"527","severity":1,"message":"561","line":17,"column":3,"nodeType":"529","messageId":"530","endLine":17,"endColumn":8},{"ruleId":"527","severity":1,"message":"540","line":18,"column":3,"nodeType":"529","messageId":"530","endLine":18,"endColumn":9},{"ruleId":"527","severity":1,"message":"557","line":19,"column":3,"nodeType":"529","messageId":"530","endLine":19,"endColumn":7},{"ruleId":"527","severity":1,"message":"558","line":26,"column":8,"nodeType":"529","messageId":"530","endLine":26,"endColumn":18},{"ruleId":"527","severity":1,"message":"559","line":69,"column":13,"nodeType":"529","messageId":"530","endLine":69,"endColumn":19},{"ruleId":"535","severity":1,"message":"536","line":72,"column":5,"nodeType":"537","messageId":"538","endLine":72,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":73,"column":5,"nodeType":"537","messageId":"538","endLine":73,"endColumn":15},{"ruleId":"527","severity":1,"message":"562","line":75,"column":11,"nodeType":"529","messageId":"530","endLine":75,"endColumn":16},{"ruleId":"527","severity":1,"message":"545","line":4,"column":10,"nodeType":"529","messageId":"530","endLine":4,"endColumn":14},{"ruleId":"527","severity":1,"message":"558","line":14,"column":8,"nodeType":"529","messageId":"530","endLine":14,"endColumn":18},{"ruleId":"535","severity":1,"message":"536","line":58,"column":7,"nodeType":"537","messageId":"538","endLine":58,"endColumn":17},{"ruleId":"535","severity":1,"message":"536","line":66,"column":7,"nodeType":"537","messageId":"538","endLine":66,"endColumn":17},{"ruleId":"527","severity":1,"message":"559","line":88,"column":26,"nodeType":"529","messageId":"530","endLine":88,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":90,"column":5,"nodeType":"537","messageId":"538","endLine":90,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":91,"column":35,"nodeType":"537","messageId":"538","endLine":91,"endColumn":45},{"ruleId":"535","severity":1,"message":"536","line":92,"column":38,"nodeType":"537","messageId":"538","endLine":92,"endColumn":48},{"ruleId":"535","severity":1,"message":"536","line":93,"column":40,"nodeType":"537","messageId":"538","endLine":93,"endColumn":50},{"ruleId":"535","severity":1,"message":"536","line":94,"column":40,"nodeType":"537","messageId":"538","endLine":94,"endColumn":50},{"ruleId":"535","severity":1,"message":"536","line":140,"column":27,"nodeType":"537","messageId":"538","endLine":140,"endColumn":37},{"ruleId":"535","severity":1,"message":"536","line":141,"column":27,"nodeType":"537","messageId":"538","endLine":141,"endColumn":37},{"ruleId":"535","severity":1,"message":"536","line":143,"column":27,"nodeType":"537","messageId":"538","endLine":143,"endColumn":37},{"ruleId":"527","severity":1,"message":"563","line":1,"column":10,"nodeType":"529","messageId":"530","endLine":1,"endColumn":33},{"ruleId":"527","severity":1,"message":"564","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":24},{"ruleId":"527","severity":1,"message":"545","line":7,"column":10,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":7,"column":16,"nodeType":"529","messageId":"530","endLine":7,"endColumn":26},{"ruleId":"527","severity":1,"message":"565","line":9,"column":3,"nodeType":"529","messageId":"530","endLine":9,"endColumn":23},{"ruleId":"527","severity":1,"message":"557","line":14,"column":46,"nodeType":"529","messageId":"530","endLine":14,"endColumn":50},{"ruleId":"527","severity":1,"message":"566","line":20,"column":8,"nodeType":"529","messageId":"530","endLine":20,"endColumn":21},{"ruleId":"527","severity":1,"message":"540","line":4,"column":31,"nodeType":"529","messageId":"530","endLine":4,"endColumn":37},{"ruleId":"527","severity":1,"message":"545","line":7,"column":10,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":7,"column":16,"nodeType":"529","messageId":"530","endLine":7,"endColumn":26},{"ruleId":"527","severity":1,"message":"561","line":10,"column":31,"nodeType":"529","messageId":"530","endLine":10,"endColumn":36},{"ruleId":"527","severity":1,"message":"540","line":10,"column":38,"nodeType":"529","messageId":"530","endLine":10,"endColumn":44},{"ruleId":"527","severity":1,"message":"558","line":13,"column":8,"nodeType":"529","messageId":"530","endLine":13,"endColumn":18},{"ruleId":"527","severity":1,"message":"559","line":59,"column":46,"nodeType":"529","messageId":"530","endLine":59,"endColumn":52},{"ruleId":"535","severity":1,"message":"536","line":62,"column":5,"nodeType":"537","messageId":"538","endLine":62,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":63,"column":5,"nodeType":"537","messageId":"538","endLine":63,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":64,"column":5,"nodeType":"537","messageId":"538","endLine":64,"endColumn":15},{"ruleId":"527","severity":1,"message":"549","line":5,"column":22,"nodeType":"529","messageId":"530","endLine":5,"endColumn":36},{"ruleId":"527","severity":1,"message":"540","line":7,"column":31,"nodeType":"529","messageId":"530","endLine":7,"endColumn":37},{"ruleId":"527","severity":1,"message":"553","line":11,"column":16,"nodeType":"529","messageId":"530","endLine":11,"endColumn":26},{"ruleId":"541","severity":1,"message":"542","line":14,"column":3,"nodeType":"543","messageId":"544","endLine":16,"endColumn":4},{"ruleId":"527","severity":1,"message":"532","line":2,"column":8,"nodeType":"529","messageId":"530","endLine":2,"endColumn":13},{"ruleId":"527","severity":1,"message":"567","line":10,"column":10,"nodeType":"529","messageId":"530","endLine":10,"endColumn":20},{"ruleId":"527","severity":1,"message":"540","line":9,"column":38,"nodeType":"529","messageId":"530","endLine":9,"endColumn":44},{"ruleId":"527","severity":1,"message":"568","line":9,"column":8,"nodeType":"529","messageId":"530","endLine":9,"endColumn":12},{"ruleId":"527","severity":1,"message":"569","line":31,"column":10,"nodeType":"529","messageId":"530","endLine":31,"endColumn":17},{"ruleId":"527","severity":1,"message":"570","line":34,"column":9,"nodeType":"529","messageId":"530","endLine":34,"endColumn":19},{"ruleId":"527","severity":1,"message":"571","line":46,"column":9,"nodeType":"529","messageId":"530","endLine":46,"endColumn":18},{"ruleId":"527","severity":1,"message":"572","line":50,"column":9,"nodeType":"529","messageId":"530","endLine":50,"endColumn":14},{"ruleId":"527","severity":1,"message":"573","line":115,"column":10,"nodeType":"529","messageId":"530","endLine":115,"endColumn":16},{"ruleId":"527","severity":1,"message":"574","line":5,"column":3,"nodeType":"529","messageId":"530","endLine":5,"endColumn":28},{"ruleId":"527","severity":1,"message":"545","line":11,"column":10,"nodeType":"529","messageId":"530","endLine":11,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":11,"column":16,"nodeType":"529","messageId":"530","endLine":11,"endColumn":26},{"ruleId":"527","severity":1,"message":"561","line":14,"column":31,"nodeType":"529","messageId":"530","endLine":14,"endColumn":36},{"ruleId":"527","severity":1,"message":"540","line":14,"column":38,"nodeType":"529","messageId":"530","endLine":14,"endColumn":44},{"ruleId":"527","severity":1,"message":"558","line":17,"column":8,"nodeType":"529","messageId":"530","endLine":17,"endColumn":18},{"ruleId":"527","severity":1,"message":"559","line":101,"column":46,"nodeType":"529","messageId":"530","endLine":101,"endColumn":52},{"ruleId":"535","severity":1,"message":"536","line":104,"column":5,"nodeType":"537","messageId":"538","endLine":104,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":105,"column":5,"nodeType":"537","messageId":"538","endLine":105,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":106,"column":5,"nodeType":"537","messageId":"538","endLine":106,"endColumn":15},{"ruleId":"527","severity":1,"message":"545","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":2,"column":16,"nodeType":"529","messageId":"530","endLine":2,"endColumn":26},{"ruleId":"527","severity":1,"message":"575","line":5,"column":10,"nodeType":"529","messageId":"530","endLine":5,"endColumn":22},{"ruleId":"527","severity":1,"message":"576","line":5,"column":24,"nodeType":"529","messageId":"530","endLine":5,"endColumn":34},{"ruleId":"527","severity":1,"message":"540","line":7,"column":8,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"577","line":10,"column":21,"nodeType":"529","messageId":"530","endLine":10,"endColumn":25},{"ruleId":"527","severity":1,"message":"548","line":10,"column":27,"nodeType":"529","messageId":"530","endLine":10,"endColumn":32},{"ruleId":"578","severity":1,"message":"579","line":24,"column":7,"nodeType":"580","messageId":"581","endLine":24,"endColumn":19},{"ruleId":"535","severity":1,"message":"536","line":51,"column":5,"nodeType":"537","messageId":"538","endLine":51,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":52,"column":5,"nodeType":"537","messageId":"538","endLine":52,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":53,"column":5,"nodeType":"537","messageId":"538","endLine":53,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":54,"column":5,"nodeType":"537","messageId":"538","endLine":54,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":55,"column":5,"nodeType":"537","messageId":"538","endLine":55,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":56,"column":5,"nodeType":"537","messageId":"538","endLine":56,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":57,"column":5,"nodeType":"537","messageId":"538","endLine":57,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":58,"column":5,"nodeType":"537","messageId":"538","endLine":58,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":59,"column":5,"nodeType":"537","messageId":"538","endLine":59,"endColumn":22},{"ruleId":"535","severity":1,"message":"536","line":61,"column":7,"nodeType":"537","messageId":"538","endLine":61,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":65,"column":7,"nodeType":"537","messageId":"538","endLine":65,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":69,"column":7,"nodeType":"537","messageId":"538","endLine":69,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":73,"column":7,"nodeType":"537","messageId":"538","endLine":73,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":77,"column":7,"nodeType":"537","messageId":"538","endLine":77,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":81,"column":7,"nodeType":"537","messageId":"538","endLine":81,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":85,"column":7,"nodeType":"537","messageId":"538","endLine":85,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":89,"column":7,"nodeType":"537","messageId":"538","endLine":89,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":93,"column":7,"nodeType":"537","messageId":"538","endLine":93,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":115,"column":7,"nodeType":"537","messageId":"538","endLine":115,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":119,"column":7,"nodeType":"537","messageId":"538","endLine":119,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":120,"column":7,"nodeType":"537","messageId":"538","endLine":120,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":126,"column":7,"nodeType":"537","messageId":"538","endLine":126,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":127,"column":7,"nodeType":"537","messageId":"538","endLine":127,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":137,"column":7,"nodeType":"537","messageId":"538","endLine":137,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":145,"column":7,"nodeType":"537","messageId":"538","endLine":145,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":155,"column":7,"nodeType":"537","messageId":"538","endLine":155,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":235,"column":5,"nodeType":"537","messageId":"538","endLine":235,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":236,"column":5,"nodeType":"537","messageId":"538","endLine":236,"endColumn":15},{"ruleId":"527","severity":1,"message":"545","line":4,"column":10,"nodeType":"529","messageId":"530","endLine":4,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":4,"column":16,"nodeType":"529","messageId":"530","endLine":4,"endColumn":26},{"ruleId":"535","severity":1,"message":"536","line":81,"column":5,"nodeType":"537","messageId":"538","endLine":81,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":255,"column":58,"nodeType":"537","messageId":"538","endLine":255,"endColumn":68},{"ruleId":"527","severity":1,"message":"545","line":7,"column":10,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":7,"column":16,"nodeType":"529","messageId":"530","endLine":7,"endColumn":26},{"ruleId":"527","severity":1,"message":"561","line":11,"column":31,"nodeType":"529","messageId":"530","endLine":11,"endColumn":36},{"ruleId":"527","severity":1,"message":"540","line":11,"column":38,"nodeType":"529","messageId":"530","endLine":11,"endColumn":44},{"ruleId":"527","severity":1,"message":"557","line":11,"column":46,"nodeType":"529","messageId":"530","endLine":11,"endColumn":50},{"ruleId":"527","severity":1,"message":"558","line":14,"column":8,"nodeType":"529","messageId":"530","endLine":14,"endColumn":18},{"ruleId":"527","severity":1,"message":"582","line":58,"column":25,"nodeType":"529","messageId":"530","endLine":58,"endColumn":41},{"ruleId":"527","severity":1,"message":"559","line":58,"column":53,"nodeType":"529","messageId":"530","endLine":58,"endColumn":59},{"ruleId":"527","severity":1,"message":"583","line":64,"column":5,"nodeType":"529","messageId":"530","endLine":64,"endColumn":20},{"ruleId":"535","severity":1,"message":"536","line":90,"column":25,"nodeType":"537","messageId":"538","endLine":90,"endColumn":35},{"ruleId":"535","severity":1,"message":"536","line":130,"column":25,"nodeType":"537","messageId":"538","endLine":130,"endColumn":35},{"ruleId":"584","severity":1,"message":"585","line":151,"column":5,"nodeType":"586","messageId":"587","endLine":255,"endColumn":6},{"ruleId":"588","severity":1,"message":"589","line":186,"column":17,"nodeType":"590","endLine":194,"endColumn":18},{"ruleId":"588","severity":1,"message":"589","line":230,"column":17,"nodeType":"590","endLine":238,"endColumn":18},{"ruleId":"527","severity":1,"message":"553","line":8,"column":16,"nodeType":"529","messageId":"530","endLine":8,"endColumn":26},{"ruleId":"527","severity":1,"message":"561","line":15,"column":3,"nodeType":"529","messageId":"530","endLine":15,"endColumn":8},{"ruleId":"527","severity":1,"message":"540","line":16,"column":3,"nodeType":"529","messageId":"530","endLine":16,"endColumn":9},{"ruleId":"527","severity":1,"message":"557","line":17,"column":3,"nodeType":"529","messageId":"530","endLine":17,"endColumn":7},{"ruleId":"527","severity":1,"message":"591","line":19,"column":3,"nodeType":"529","messageId":"530","endLine":19,"endColumn":16},{"ruleId":"578","severity":1,"message":"579","line":43,"column":7,"nodeType":"580","messageId":"581","endLine":43,"endColumn":19},{"ruleId":"584","severity":1,"message":"585","line":73,"column":5,"nodeType":"586","messageId":"587","endLine":245,"endColumn":6},{"ruleId":"527","severity":1,"message":"545","line":4,"column":10,"nodeType":"529","messageId":"530","endLine":4,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":4,"column":16,"nodeType":"529","messageId":"530","endLine":4,"endColumn":26},{"ruleId":"535","severity":1,"message":"536","line":104,"column":5,"nodeType":"537","messageId":"538","endLine":104,"endColumn":15},{"ruleId":"527","severity":1,"message":"568","line":6,"column":8,"nodeType":"529","messageId":"530","endLine":6,"endColumn":12},{"ruleId":"527","severity":1,"message":"568","line":6,"column":8,"nodeType":"529","messageId":"530","endLine":6,"endColumn":12},{"ruleId":"527","severity":1,"message":"545","line":7,"column":10,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":7,"column":16,"nodeType":"529","messageId":"530","endLine":7,"endColumn":26},{"ruleId":"527","severity":1,"message":"592","line":11,"column":3,"nodeType":"529","messageId":"530","endLine":11,"endColumn":18},{"ruleId":"527","severity":1,"message":"593","line":13,"column":3,"nodeType":"529","messageId":"530","endLine":13,"endColumn":21},{"ruleId":"535","severity":1,"message":"536","line":79,"column":5,"nodeType":"537","messageId":"538","endLine":79,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":84,"column":5,"nodeType":"537","messageId":"538","endLine":84,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":93,"column":5,"nodeType":"537","messageId":"538","endLine":93,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":101,"column":5,"nodeType":"537","messageId":"538","endLine":101,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":281,"column":26,"nodeType":"537","messageId":"538","endLine":281,"endColumn":36},{"ruleId":"527","severity":1,"message":"545","line":6,"column":10,"nodeType":"529","messageId":"530","endLine":6,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":6,"column":16,"nodeType":"529","messageId":"530","endLine":6,"endColumn":26},{"ruleId":"527","severity":1,"message":"564","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":24},{"ruleId":"527","severity":1,"message":"545","line":7,"column":10,"nodeType":"529","messageId":"530","endLine":7,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":7,"column":16,"nodeType":"529","messageId":"530","endLine":7,"endColumn":26},{"ruleId":"535","severity":1,"message":"536","line":58,"column":5,"nodeType":"537","messageId":"538","endLine":58,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":62,"column":5,"nodeType":"537","messageId":"538","endLine":62,"endColumn":15},{"ruleId":"527","severity":1,"message":"545","line":6,"column":10,"nodeType":"529","messageId":"530","endLine":6,"endColumn":14},{"ruleId":"535","severity":1,"message":"536","line":188,"column":26,"nodeType":"537","messageId":"538","endLine":188,"endColumn":36},{"ruleId":"527","severity":1,"message":"545","line":2,"column":10,"nodeType":"529","messageId":"530","endLine":2,"endColumn":14},{"ruleId":"527","severity":1,"message":"553","line":2,"column":16,"nodeType":"529","messageId":"530","endLine":2,"endColumn":26},{"ruleId":"535","severity":1,"message":"536","line":39,"column":5,"nodeType":"537","messageId":"538","endLine":39,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":49,"column":5,"nodeType":"537","messageId":"538","endLine":49,"endColumn":15},{"ruleId":"527","severity":1,"message":"568","line":6,"column":8,"nodeType":"529","messageId":"530","endLine":6,"endColumn":12},{"ruleId":"541","severity":1,"message":"542","line":8,"column":4,"nodeType":"543","messageId":"544","endLine":10,"endColumn":5},{"ruleId":"527","severity":1,"message":"594","line":2,"column":8,"nodeType":"529","messageId":"530","endLine":2,"endColumn":20},{"ruleId":"527","severity":1,"message":"595","line":3,"column":8,"nodeType":"529","messageId":"530","endLine":3,"endColumn":18},{"ruleId":"596","severity":1,"message":"597","line":1,"column":1,"nodeType":"598","endLine":15,"endColumn":4},{"ruleId":"527","severity":1,"message":"599","line":4,"column":3,"nodeType":"529","messageId":"530","endLine":4,"endColumn":25},{"ruleId":"527","severity":1,"message":"539","line":1,"column":10,"nodeType":"529","messageId":"530","endLine":1,"endColumn":19},{"ruleId":"527","severity":1,"message":"534","line":1,"column":21,"nodeType":"529","messageId":"530","endLine":1,"endColumn":24},{"ruleId":"527","severity":1,"message":"533","line":1,"column":26,"nodeType":"529","messageId":"530","endLine":1,"endColumn":29},{"ruleId":"527","severity":1,"message":"561","line":1,"column":31,"nodeType":"529","messageId":"530","endLine":1,"endColumn":36},{"ruleId":"527","severity":1,"message":"540","line":1,"column":38,"nodeType":"529","messageId":"530","endLine":1,"endColumn":44},{"ruleId":"527","severity":1,"message":"548","line":1,"column":46,"nodeType":"529","messageId":"530","endLine":1,"endColumn":51},{"ruleId":"527","severity":1,"message":"600","line":6,"column":3,"nodeType":"529","messageId":"530","endLine":6,"endColumn":20},{"ruleId":"596","severity":1,"message":"597","line":1,"column":1,"nodeType":"598","endLine":15,"endColumn":4},{"ruleId":"527","severity":1,"message":"601","line":4,"column":3,"nodeType":"529","messageId":"530","endLine":4,"endColumn":18},{"ruleId":"527","severity":1,"message":"602","line":5,"column":3,"nodeType":"529","messageId":"530","endLine":5,"endColumn":23},{"ruleId":"596","severity":1,"message":"597","line":1,"column":1,"nodeType":"598","endLine":10,"endColumn":2},{"ruleId":"541","severity":1,"message":"542","line":14,"column":3,"nodeType":"543","messageId":"544","endLine":16,"endColumn":4},{"ruleId":"527","severity":1,"message":"603","line":5,"column":3,"nodeType":"529","messageId":"530","endLine":5,"endColumn":12},{"ruleId":"527","severity":1,"message":"549","line":6,"column":3,"nodeType":"529","messageId":"530","endLine":6,"endColumn":17},{"ruleId":"527","severity":1,"message":"553","line":10,"column":16,"nodeType":"529","messageId":"530","endLine":10,"endColumn":26},{"ruleId":"527","severity":1,"message":"604","line":15,"column":18,"nodeType":"529","messageId":"530","endLine":15,"endColumn":29},{"ruleId":"527","severity":1,"message":"605","line":19,"column":10,"nodeType":"529","messageId":"530","endLine":19,"endColumn":14},{"ruleId":"596","severity":1,"message":"606","line":1,"column":1,"nodeType":"598","endLine":137,"endColumn":3},{"ruleId":"596","severity":1,"message":"607","line":13,"column":1,"nodeType":"598","endLine":37,"endColumn":3},{"ruleId":"596","severity":1,"message":"607","line":13,"column":1,"nodeType":"598","endLine":33,"endColumn":3},{"ruleId":"527","severity":1,"message":"608","line":27,"column":13,"nodeType":"529","messageId":"530","endLine":27,"endColumn":25},{"ruleId":"609","severity":1,"message":"610","line":30,"column":5,"nodeType":"611","messageId":"612","endLine":31,"endColumn":20},{"ruleId":"596","severity":1,"message":"607","line":9,"column":1,"nodeType":"598","endLine":19,"endColumn":3},{"ruleId":"596","severity":1,"message":"607","line":12,"column":1,"nodeType":"598","endLine":31,"endColumn":3},{"ruleId":"527","severity":1,"message":"601","line":4,"column":3,"nodeType":"529","messageId":"530","endLine":4,"endColumn":18},{"ruleId":"596","severity":1,"message":"607","line":13,"column":1,"nodeType":"598","endLine":28,"endColumn":3},{"ruleId":"596","severity":1,"message":"607","line":16,"column":1,"nodeType":"598","endLine":57,"endColumn":3},{"ruleId":"596","severity":1,"message":"597","line":9,"column":1,"nodeType":"598","endLine":23,"endColumn":2},{"ruleId":"596","severity":1,"message":"607","line":12,"column":1,"nodeType":"598","endLine":29,"endColumn":3},{"ruleId":"596","severity":1,"message":"597","line":18,"column":1,"nodeType":"598","endLine":59,"endColumn":2},"no-native-reassign",["613"],"no-negated-in-lhs",["614"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Listaclienti' is defined but never used.","'axios' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Container' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","'recuperoPassword' is defined but never used.","'codiceOTP' is defined but never used.","'Alert' is defined but never used.","'setCurrentUser' is defined but never used.","'LockOpenIcon' is defined but never used.","'LockIcon' is defined but never used.","'BuildIcon' is defined but never used.","'withRouter' is defined but never used.","'ListaPrenotazioni' is defined but never used.","'cancellaPrenotazione' is defined but never used.","'modificaStatoPrenotazione2' is defined but never used.","'Card' is defined but never used.","'classnames' is defined but never used.","'errors' is assigned a value but never used.","'inviaNotificheAutisti' is defined but never used.","'Modal' is defined but never used.","'today' is assigned a value but never used.","'Listaveicolidisponibili' is defined but never used.","'Listaparcheggi' is defined but never used.","'registerPrenotazione' is defined but never used.","'filtriVeicoli' is defined but never used.","'GET_ERRORS' is defined but never used.","'Logo' is defined but never used.","'markers' is assigned a value but never used.","'onMapClick' is assigned a value but never used.","'onMapLoad' is assigned a value but never used.","'panTo' is assigned a value but never used.","'Locate' is defined but never used.","'modificaStatoPrenotazione' is defined but never used.","'registerUser' is defined but never used.","'logoutUser' is defined but never used.","'Form' is defined but never used.","no-dupe-keys","Duplicate key 'ora_partenza'.","ObjectExpression","unexpected","'filtroParcheggio' is assigned a value but never used.","'veicoliFiltrati' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'ListGroupItem' is defined but never used.","'ModificaVeicolo' is defined but never used.","'GetSpecificVeicolo' is defined but never used.","'setAuthToken' is defined but never used.","'jwt_decode' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'INVIA_NOTIFICA_CLIENTE' is defined but never used.","'INSERISCI_VEICOLO' is defined but never used.","'ERROR_PARCHEGGI' is defined but never used.","'INSERISCI_PARCHEGGIO' is defined but never used.","'loginUser' is defined but never used.","'ButtonGroup' is defined but never used.","'blue' is defined but never used.","Assign array to a variable before exporting as module default","Assign arrow function to a variable before exporting as module default","'prenotazione' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]
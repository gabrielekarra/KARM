{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\NuovaPrenotazione.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\"; //componenti da react-bootstrap\n\nimport { Container, Form } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\"; //componenti da material-ui\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      if (e.target.id == \"tipo_veicolo\" && e.target.value == \"Autovettura\") {\n        document.getElementById(\"presenza-autista\").disabled = false;\n      }\n\n      if (e.target.id == \"tipo_veicolo\" && e.target.value != \"Autovettura\") {\n        document.getElementById(\"presenza-autista\").disabled = true;\n      }\n\n      e.preventDefault();\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); //if (state.data_partenza===new Date().getDay Date())\n\n      const newPrenotazione = {\n        ora_partenza: this.state.ora_partenza,\n        partenza: this.state.partenza,\n        ora_arrivo: this.state.ora_arrivo,\n        ora_partenza: this.state.ora_partenza,\n        data_partenza: this.state.data_partenza,\n        data_arrivo: this.state.data_arrivo,\n        destinazione: this.state.destinazione,\n        parcheggio_partenza: this.state.parcheggio_partenza,\n        parcheggio_destinazione: this.state.parcheggio_destinazione,\n        tipo_veicolo: this.state.tipo_veicolo,\n        idVeicolo: this.state.idVeicolo,\n        idCliente: this.state.idCliente,\n        idAutista: this.state.idAutista\n      };\n      window.alert(this.state.data_partenza);\n      this.props.registerPrenotazione(newPrenotazione, this.props.history);\n    };\n\n    this.state = {\n      partenza: \"\",\n      data_partenza: \"\",\n      //Date invece di ''?\n      ora_partenza: \"\",\n      destinazione: \"\",\n      data_arrivo: \"\",\n      ora_arrivo: \"\",\n      ora_partenza: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      tipo_veicolo: \"\",\n      type: \"switch\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.setType = this.setType.bind(this);\n  }\n\n  setType() {\n    // così dovrebbe funzionare\n    if (this.state.data_partenza === \"2021-08-08\") {\n      this.state.errors.check = \"Non puoi selezionare l'autista se la data è 3 giorni\";\n      this.state.type = \"hidden\";\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n\n    var yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenitore nuovaPrenotazione\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"black\",\n          gridColumn: \"2\",\n          gridRow: \"2\"\n        },\n        children: \"Nuova Prenotazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          gridColumn: \"2\",\n          gridRow: \"3\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.onChange,\n            value: this.state.partenza,\n            error: errors.partenza,\n            id: \"partenza\",\n            type: \"text\",\n            className: classnames(\"form-control\", {\n              invalid: errors.partenza\n            }),\n            placeholder: \"Inserisci l'indirizzo di partenza\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data di partenza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: async e => {\n              await this.onChange(e);\n              await this.setType();\n            },\n            value: this.state.data_partenza,\n            error: errors.data_partenza,\n            id: \"data_partenza\",\n            type: \"date\",\n            className: classnames(\"form-control\", {\n              invalid: errors.data_partenza\n            }),\n            required: true,\n            min: today\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Orario di partenza\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.onChange,\n            value: this.state.ora_partenza,\n            error: errors.ora_partenza,\n            id: \"ora_partenza\",\n            type: \"time\",\n            className: classnames(\"form-control\", {\n              invalid: errors.ora_partenza\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.onChange,\n            value: this.state.destinazione,\n            error: errors.destinazione,\n            id: \"destinazione\",\n            type: \"text\",\n            className: classnames(\"form-control\", {\n              invalid: errors.destinazione\n            }),\n            placeholder: \"Inserisci l'indirizzo di destinazione\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data di arrivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.onChange,\n            value: this.state.data_arrivo,\n            error: errors.data_arrivo,\n            id: \"data_arrivo\",\n            type: \"date\",\n            className: classnames(\"form-control\", {\n              invalid: errors.data_arrivo\n            }),\n            min: today,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Orario di arrivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.onChange,\n            value: this.state.ora_arrivo,\n            error: errors.ora_arrivo,\n            id: \"ora_arrivo\",\n            type: \"time\",\n            className: classnames(\"form-control\", {\n              invalid: errors.ora_arrivo\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          style: {\n            gridColumn: \"2\",\n            gridRow: \"4\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo Veicolo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onChange,\n            value: this.state.tipo_veicolo,\n            error: errors.tipo_veicolo,\n            id: \"tipo_veicolo\",\n            type: \"text\",\n            className: classnames(\"form-control\", {\n              invalid: errors.tipo_veicolo\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              children: \"Tipo Veicolo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Autovettura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Motore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Bicicletta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Monopattino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"switch\",\n            id: \"custom-switch\",\n            label: \"Dichiaro di possedere un dispositivo portatile per l'intera durata della corsa\",\n            required: true,\n            style: {\n              margin: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            onChange: this.onChange,\n            type: this.state.type,\n            id: \"presenza-autista\",\n            label: \"Voglio un Autista per la mia corsa\",\n            style: {\n              margin: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-text\",\n            children: errors.check\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              right: \"0px\"\n            },\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Avanti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(NuovaPrenotazione);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/PagineCliente/NuovaPrenotazione.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","logoutUser","classnames","InputGroup","Button","Container","Form","Checkbox","NuovaPrenotazione","constructor","onChange","e","setState","target","id","value","document","getElementById","disabled","preventDefault","onSubmit","newPrenotazione","ora_partenza","state","partenza","ora_arrivo","data_partenza","data_arrivo","destinazione","parcheggio_partenza","parcheggio_destinazione","tipo_veicolo","idVeicolo","idCliente","idAutista","window","alert","props","registerPrenotazione","history","type","errors","bind","setType","check","componentWillReceiveProps","nextProps","render","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","textAlign","color","gridColumn","gridRow","invalid","margin","right","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\n\n//componenti da react-bootstrap\nimport { Container, Form } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\n\n//componenti da material-ui\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n    this.state = {\n      partenza: \"\",\n      data_partenza: \"\", //Date invece di ''?\n      ora_partenza: \"\",\n      destinazione: \"\",\n      data_arrivo: \"\",\n      ora_arrivo: \"\",\n      ora_partenza: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      tipo_veicolo: \"\",\n      type: \"switch\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.setType = this.setType.bind(this);\n  }\n\n  setType() {\n    // così dovrebbe funzionare\n    if (this.state.data_partenza === \"2021-08-08\") {\n      this.state.errors.check =\n        \"Non puoi selezionare l'autista se la data è 3 giorni\";\n      this.state.type = \"hidden\";\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n\n    if (e.target.id == \"tipo_veicolo\" && e.target.value == \"Autovettura\") {\n      document.getElementById(\"presenza-autista\").disabled = false;\n    }\n    if (e.target.id == \"tipo_veicolo\" && e.target.value != \"Autovettura\") {\n      document.getElementById(\"presenza-autista\").disabled = true;\n    }\n    e.preventDefault();\n  };\n\n  /*onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n   \n  \n\n     };*/\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    //if (state.data_partenza===new Date().getDay Date())\n\n    const newPrenotazione = {\n      ora_partenza: this.state.ora_partenza,\n      partenza: this.state.partenza,\n      ora_arrivo: this.state.ora_arrivo,\n      ora_partenza: this.state.ora_partenza,\n      data_partenza: this.state.data_partenza,\n      data_arrivo: this.state.data_arrivo,\n      destinazione: this.state.destinazione,\n      parcheggio_partenza: this.state.parcheggio_partenza,\n      parcheggio_destinazione: this.state.parcheggio_destinazione,\n      tipo_veicolo: this.state.tipo_veicolo,\n      idVeicolo: this.state.idVeicolo,\n      idCliente: this.state.idCliente,\n      idAutista: this.state.idAutista,\n    };\n    window.alert(this.state.data_partenza);\n    this.props.registerPrenotazione(newPrenotazione, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    return (\n      <div className=\"contenitore nuovaPrenotazione\">\n        <h1\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            gridColumn: \"2\",\n            gridRow: \"2\",\n          }}\n        >\n          Nuova Prenotazione\n        </h1>\n\n        <Form style={{ gridColumn: \"2\", gridRow: \"3\" }}>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              onChange={this.onChange}\n              value={this.state.partenza}\n              error={errors.partenza}\n              id=\"partenza\"\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                invalid: errors.partenza,\n              })}\n              placeholder=\"Inserisci l'indirizzo di partenza\"\n              required\n            />\n          </Form.Group>\n          <label>Data di partenza</label>\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              onChange={async (e) => {\n                await this.onChange(e);\n                await this.setType();\n              }}\n              value={this.state.data_partenza}\n              error={errors.data_partenza}\n              id=\"data_partenza\"\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                invalid: errors.data_partenza,\n              })}\n              required\n              min={today}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <label>Orario di partenza</label>\n            <Form.Control\n              onChange={this.onChange}\n              value={this.state.ora_partenza}\n              error={errors.ora_partenza}\n              id=\"ora_partenza\"\n              type=\"time\"\n              className={classnames(\"form-control\", {\n                invalid: errors.ora_partenza,\n              })}\n              required\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Control\n              onChange={this.onChange}\n              value={this.state.destinazione}\n              error={errors.destinazione}\n              id=\"destinazione\"\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                invalid: errors.destinazione,\n              })}\n              placeholder=\"Inserisci l'indirizzo di destinazione\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <label>Data di arrivo</label>\n            <Form.Control\n              onChange={this.onChange}\n              value={this.state.data_arrivo}\n              error={errors.data_arrivo}\n              id=\"data_arrivo\"\n              type=\"date\"\n              className={classnames(\"form-control\", {\n                invalid: errors.data_arrivo,\n              })}\n              min={today}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <label>Orario di arrivo</label>\n            <Form.Control\n              onChange={this.onChange}\n              value={this.state.ora_arrivo}\n              error={errors.ora_arrivo}\n              id=\"ora_arrivo\"\n              type=\"time\"\n              className={classnames(\"form-control\", {\n                invalid: errors.ora_arrivo,\n              })}\n              required\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group\n            className=\"mb-3\"\n            style={{ gridColumn: \"2\", gridRow: \"4\" }}\n          >\n            <label>Tipo Veicolo</label>\n            <select\n              onChange={this.onChange}\n              value={this.state.tipo_veicolo}\n              error={errors.tipo_veicolo}\n              id=\"tipo_veicolo\"\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                invalid: errors.tipo_veicolo,\n              })}\n              required\n            >\n              <option disabled selected>\n                Tipo Veicolo\n              </option>\n              <option>Autovettura</option>\n              <option>Motore</option>\n              <option>Bicicletta</option>\n              <option>Monopattino</option>\n            </select>\n\n            <Form.Check\n              type=\"switch\"\n              id=\"custom-switch\"\n              label=\"Dichiaro di possedere un dispositivo portatile per l'intera durata della corsa\"\n              required\n              style={{ margin: \"5px\" }}\n            />\n\n            <Form.Check\n              onChange={this.onChange}\n              type={this.state.type}\n              id=\"presenza-autista\"\n              label=\"Voglio un Autista per la mia corsa\"\n              style={{ margin: \"5px\" }}\n            />\n            <span className=\"red-text\">{errors.check}</span>\n            <Button style={{ right: \"0px\" }} variant=\"primary\" type=\"submit\">\n              Avanti\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(NuovaPrenotazione);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\ListaVeicoli.js\";\nimport { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\"; //componenti da react-bootstrap\n\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport classnames from \"classnames\";\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListaVeicoli extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {},\n      filtroModello: \"\",\n      filtroCilindrata: \"\",\n      current_id: \"\",\n      veicoli_inparcheggio: [] //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\n\n    };\n\n    this.handleChange = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onChange = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  async componentDidMount() {\n    const Veicolo = {\n      tipo: localStorage.getItem(\"tipoVeicolo\")\n    };\n    await this.props.Listaveicolidisponibili(localStorage.getItem(\"tipoVeicolo\"), Veicolo);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      filtroModello,\n      filtroCilindrata,\n      errors\n    } = this.state;\n    let veicoliFiltrati = [];\n    const {\n      veicolo\n    } = this.props.listaveicolidisponibili;\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroCilindrata, \"cilindrata\");\n    const stile = localStorage.getItem(\"idAutista\");\n\n    const VL = /*#__PURE__*/_jsxDEV(Container, {\n      sm: 12,\n      style: {\n        marginBottom: \"21rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"center\",\n        style: {\n          textAlign: \"left\",\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: veicoliFiltrati.map(veicolo => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: veicolo.marca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.modello\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.prezzo_feriale + \"â‚¬/ora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: veicolo.descrizione\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary btn-lg btn-block bottone\",\n                onClick: () => this.aggiungiVeicolo(veicolo._id, veicolo.id_parcheggio, veicolo.modello, veicolo.marca),\n                children: \"Prosegui\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n\n    switch (stile) {\n      case \"No\":\n        return /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          style: {\n            marginBottom: \"3rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"modello\",\n                    children: \"Modello\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: event => this.handleChange(\"filtroModello\", event.target.value),\n                    id: \"modello\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"cilindrata\",\n                    children: \"Cilindrata\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: event => this.handleChange(\"filtroCilindrata\", event.target.value),\n                    id: \"cilindrata\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"#010101\",\n                fontWeight: \"bold\",\n                fontSize: \"25px\",\n                textAlign: \"center\"\n              },\n              children: \"VEICOLI DISPONIBILI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), veicolo.length === 0 ? \"Non ci sono veicoli per la tipologia scelta disponibili\" : VL]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this);\n    }\n  }\n\n}\n\nListaVeicoli.propTypes = {\n  Listaveicolidisponibili: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  listaveicolidisponibili: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  listaveicolidisponibili: state.listaveicolidisponibili\n});\n\nexport default connect(mapStateToProps, {\n  Listaveicolidisponibili\n})(ListaVeicoli);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/PagineCliente/ListaVeicoli.js"],"names":["Listaveicolidisponibili","React","Component","PropTypes","connect","Link","withRouter","Container","Col","Row","Modal","Button","Card","classnames","filtriVeicoli","ListaVeicoli","state","errors","filtroModello","filtroCilindrata","current_id","veicoli_inparcheggio","handleChange","name","value","setState","onChange","e","target","id","onSubmit","preventDefault","componentDidMount","Veicolo","tipo","localStorage","getItem","props","componentWillReceiveProps","nextProps","render","veicoliFiltrati","veicolo","listaveicolidisponibili","stile","VL","marginBottom","textAlign","display","flexWrap","map","width","marca","modello","prezzo_feriale","descrizione","aggiungiVeicolo","_id","id_parcheggio","event","color","fontWeight","fontSize","length","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass ListaVeicoli extends Component {\r\n  state = {\r\n    errors: {},\r\n    filtroModello: \"\",\r\n    filtroCilindrata: \"\",\r\n    current_id: \"\",\r\n    veicoli_inparcheggio: [], //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const Veicolo = {\r\n      tipo: localStorage.getItem(\"tipoVeicolo\"),\r\n    };\r\n    await this.props.Listaveicolidisponibili(\r\n      localStorage.getItem(\"tipoVeicolo\"),\r\n      Veicolo\r\n    );\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { filtroModello, filtroCilindrata, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroCilindrata,\r\n      \"cilindrata\"\r\n    );\r\n    const stile = localStorage.getItem(\"idAutista\");\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div\r\n          class=\"center\"\r\n          style={{ textAlign: \"left\", display: \"flex\", flexWrap: \"wrap\" }}\r\n        >\r\n          {veicoliFiltrati.map((veicolo) => (\r\n            <Card style={{ width: \"18rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{veicolo.marca}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.modello}\r\n                </Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.prezzo_feriale + \"â‚¬/ora\"}\r\n                </Card.Subtitle>\r\n                <Card.Text>{veicolo.descrizione}</Card.Text>\r\n                <Card.Link>\r\n                  {\" \"}\r\n                  <button\r\n                    class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() =>\r\n                      this.aggiungiVeicolo(\r\n                        veicolo._id,\r\n                        veicolo.id_parcheggio,\r\n                        veicolo.modello,\r\n                        veicolo.marca\r\n                      )\r\n                    }\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    switch (stile) {\r\n      case \"No\":\r\n        return (\r\n          <Container fluid style={{ marginBottom: \"3rem\" }}>\r\n            <Container sm={12}>\r\n              <Row>\r\n                <Col sm>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"modello\">Modello</label>\r\n                    <input\r\n                      onChange={(event) =>\r\n                        this.handleChange(\"filtroModello\", event.target.value)\r\n                      }\r\n                      id=\"modello\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col sm>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                    <input\r\n                      onChange={(event) =>\r\n                        this.handleChange(\r\n                          \"filtroCilindrata\",\r\n                          event.target.value\r\n                        )\r\n                      }\r\n                      id=\"cilindrata\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <h1\r\n                style={{\r\n                  color: \"#010101\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"25px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                VEICOLI DISPONIBILI\r\n              </h1>\r\n              {veicolo.length === 0\r\n                ? \"Non ci sono veicoli per la tipologia scelta disponibili\"\r\n                : VL}\r\n            </Container>\r\n          </Container>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nListaVeicoli.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n})(ListaVeicoli);\r\n"]},"metadata":{},"sourceType":"module"}
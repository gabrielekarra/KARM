{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\NuovaPrenotazione.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\"; //componenti da react-bootstrap\n\nimport { Container } from 'react-bootstrap'; //componenti da material-ui\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newPrenotazione = {\n        ora_partenza: this.state.ora_partenza,\n        partenza: this.state.partenza,\n        ora_arrivo: this.state.ora_arrivo,\n        data_partenza: this.state.data_partenza,\n        data_arrivo: this.state.data_arrivo,\n        destinazione: this.state.destinazione,\n        parcheggio_partenza: this.state.parcheggio_partenza,\n        parcheggio_destinazione: this.state.parcheggio_destinazione,\n        idVeicolo: this.state.idVeicolo,\n        idCliente: this.state.idCliente,\n        idAutista: this.state.idAutista\n      };\n      this.props.registerPrenotazione(newPrenotazione, this.props.history);\n    };\n\n    this.state = {\n      ora_partenza: \"\",\n      partenza: \"\",\n      ora_arrivo: \"\",\n      data_partenza: \"\",\n      data_arrivo: \"\",\n      destinazione: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '3rem',\n        marginBottom: '3rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: 'center',\n              color: 'black'\n            },\n            children: \"Nuova Prenotazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"partenza\",\n              children: \"Partenza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.partenza,\n              error: errors.partenza,\n              id: \"name\",\n              type: \"text\",\n              className: classnames(\"form-control\", {\n                invalid: errors.partenza\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.partenza\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cognome\",\n              children: \"Destinazione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.cognome,\n              error: errors.cognome,\n              id: \"cognome\",\n              type: \"text\",\n              className: classnames(\"form-control\", {\n                invalid: errors.cognome\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.cognome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cognome\",\n              children: \"Data Partenza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cognome\",\n              children: \"Data Arrivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Registrazione Log\",\n            className: \"btn btn-dark btn-lg btn-block\",\n            children: \"Avanti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(NuovaPrenotazione);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/PagineCliente/NuovaPrenotazione.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","logoutUser","classnames","Container","NuovaPrenotazione","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newPrenotazione","ora_partenza","state","partenza","ora_arrivo","data_partenza","data_arrivo","destinazione","parcheggio_partenza","parcheggio_destinazione","idVeicolo","idCliente","idAutista","props","registerPrenotazione","history","errors","componentWillReceiveProps","nextProps","render","marginTop","marginBottom","textAlign","color","invalid","cognome","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\n//componenti da react-bootstrap\r\nimport { Container } from 'react-bootstrap';\r\n\r\n//componenti da material-ui\r\n\r\n\r\nclass NuovaPrenotazione extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      ora_partenza: \"\",\r\n      partenza: \"\",\r\n      ora_arrivo: \"\",\r\n      data_partenza: \"\",\r\n      data_arrivo: \"\",\r\n      destinazione: \"\",\r\n      parcheggio_partenza: \"\",\r\n      parcheggio_destinazione: \"\",\r\n      idVeicolo: \"\",\r\n      idCliente: \"\",\r\n      idAutista: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newPrenotazione = {\r\n        ora_partenza: this.state.ora_partenza,\r\n        partenza: this.state.partenza,\r\n        ora_arrivo: this.state.ora_arrivo,\r\n        data_partenza: this.state.data_partenza,\r\n        data_arrivo: this.state.data_arrivo,\r\n        destinazione: this.state.destinazione,\r\n        parcheggio_partenza: this.state.parcheggio_partenza,\r\n        parcheggio_destinazione: this.state.parcheggio_destinazione,\r\n        idVeicolo: this.state.idVeicolo,\r\n        idCliente: this.state.idCliente,\r\n        idAutista: this.state.idAutista\r\n    };\r\n\r\n    this.props.registerPrenotazione(newPrenotazione, this.props.history);\r\n  };\r\n  \r\n  render() {\r\n    const { errors } = this.state;\r\n    \r\n    return (\r\n      <Container style={{marginTop: '3rem', marginBottom: '3rem'}}>\r\n      <div className=\"Form\">\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n            <h3 style={{textAlign: 'center', color: 'black'}}>Nuova Prenotazione</h3>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"partenza\">Partenza</label>\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.partenza}\r\n                  error={errors.partenza}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.partenza\r\n                  })}\r\n                />\r\n                <span className=\"red-text\">{errors.partenza}</span>\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"cognome\">Destinazione</label>\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.cognome}\r\n                  error={errors.cognome}\r\n                  id=\"cognome\"\r\n                  type=\"text\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.cognome\r\n                  })}\r\n                />\r\n                <span className=\"red-text\">{errors.cognome}</span>\r\n              </div>\r\n             <div className=\"form-group\">\r\n             <label htmlFor=\"cognome\">Data Partenza</label>\r\n                 <input type=\"date\" />\r\n             </div>\r\n             <div className=\"form-group\">\r\n             <label htmlFor=\"cognome\">Data Arrivo</label>\r\n                 <input type=\"date\" />\r\n             </div>\r\n        \r\n              \r\n              <button type=\"submit\" value=\"Registrazione Log\" className=\"btn btn-dark btn-lg btn-block\">Avanti</button>\r\n            </form>\r\n          </div>\r\n          </Container>\r\n    );\r\n  }\r\n}\r\n\r\nNuovaPrenotazione.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n  )(NuovaPrenotazione);"]},"metadata":{},"sourceType":"module"}
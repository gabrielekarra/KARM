{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\KARM - REACT FINALE\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\ListaVeicoli.js\";\nimport { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\nimport React, { Component } from \"react\";\nimport { inviaNotificheAutisti } from \"../../actions/prenotazioniActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\"; //componenti da react-bootstrap\n\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport classnames from \"classnames\";\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListaVeicoli extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {},\n      filtroModello: \"\",\n      filtroCilindrata: \"\",\n      id_utente: \"\",\n      nome_utente: \"\",\n      cognome_utente: \"\",\n      prenotazione: \"\",\n      current_id: \"\"\n    };\n\n    this.handleChange = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onChange = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  aggiungiVeicolo(idVeicolo, posizione, modello, marca, prezzo_feriale) {\n    localStorage.setItem(\"idVeicolo\", idVeicolo);\n    localStorage.setItem(\"posizioneVeicolo\", posizione);\n    localStorage.setItem(\"modelloveicolo\", modello);\n    localStorage.setItem(\"marcaveicolo\", marca);\n    localStorage.setItem(\"prezzo\", prezzo_feriale);\n    if (localStorage.getItem(\"idAutista\") === \"No\") window.location.href = \"/InserimentoParcheggio\";else if (localStorage.getItem(\"idAutista\") === \"SÃ¬\") {\n      const NewPrenotazione = {\n        id_utente: this.state.id_utente,\n        nome_utente: this.state.nome_utente,\n        cognome_utente: this.state.cognome_utente,\n        partenza: localStorage.getItem(\"partenza\"),\n        destinazione: localStorage.getItem(\"destinazione\"),\n        ora_partenza: localStorage.getItem(\"ora_partenza\"),\n        data_partenza: localStorage.getItem(\"data_partenza\")\n      };\n      this.props.inviaNotificheAutisti(NewPrenotazione);\n    }\n  }\n\n  async componentDidMount() {\n    const Veicolo = {\n      tipo: localStorage.getItem(\"tipoVeicolo\")\n    };\n    await this.props.Listaveicolidisponibili(localStorage.getItem(\"tipoVeicolo\"), Veicolo);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      filtroModello,\n      filtroCilindrata,\n      errors\n    } = this.state;\n    let veicoliFiltrati = [];\n    const {\n      user\n    } = this.props.auth;\n    this.state.id_utente = user.id;\n    this.state.nome_utente = user.nome;\n    this.state.cognome_utente = user.cognome;\n    const {\n      veicolo\n    } = this.props.listaveicolidisponibili;\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroCilindrata, \"cilindrata\");\n\n    const VL = /*#__PURE__*/_jsxDEV(Container, {\n      sm: 12,\n      style: {\n        marginBottom: \"21rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"center\",\n        style: {\n          textAlign: \"left\",\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: veicoliFiltrati.map(veicolo => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: veicolo.marca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.modello\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.prezzo_feriale + \"â‚¬/ora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: veicolo.descrizione\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary btn-lg btn-block bottone\",\n                onClick: () => this.aggiungiVeicolo(veicolo._id, veicolo.id_parcheggio, veicolo.modello, veicolo.marca, veicolo.prezzo_feriale),\n                children: \"Prosegui\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        marginBottom: \"3rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        sm: 12,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"modello\",\n                children: \"Modello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: event => this.handleChange(\"filtroModello\", event.target.value),\n                id: \"modello\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cilindrata\",\n                children: \"Cilindrata\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: event => this.handleChange(\"filtroCilindrata\", event.target.value),\n                id: \"cilindrata\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: \"#010101\",\n            fontWeight: \"bold\",\n            fontSize: \"25px\",\n            textAlign: \"center\"\n          },\n          children: \"VEICOLI DISPONIBILI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), veicolo.length === 0 ? \"Non ci sono veicoli per la tipologia scelta disponibili\" : VL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nListaVeicoli.propTypes = {\n  Listaveicolidisponibili: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  listaveicolidisponibili: PropTypes.object.isRequired,\n  inviaNotificheAutisti: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  listaveicolidisponibili: state.listaveicolidisponibili\n});\n\nexport default connect(mapStateToProps, {\n  Listaveicolidisponibili,\n  inviaNotificheAutisti\n})(ListaVeicoli);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/KARM - REACT FINALE/frontend/src/componenti/PagineCliente/ListaVeicoli.js"],"names":["Listaveicolidisponibili","React","Component","inviaNotificheAutisti","PropTypes","connect","Link","withRouter","Container","Col","Row","Modal","Button","Card","classnames","filtriVeicoli","ListaVeicoli","state","errors","filtroModello","filtroCilindrata","id_utente","nome_utente","cognome_utente","prenotazione","current_id","handleChange","name","value","setState","onChange","e","target","id","onSubmit","preventDefault","aggiungiVeicolo","idVeicolo","posizione","modello","marca","prezzo_feriale","localStorage","setItem","getItem","window","location","href","NewPrenotazione","partenza","destinazione","ora_partenza","data_partenza","props","componentDidMount","Veicolo","tipo","componentWillReceiveProps","nextProps","render","veicoliFiltrati","user","auth","nome","cognome","veicolo","listaveicolidisponibili","VL","marginBottom","textAlign","display","flexWrap","map","width","descrizione","_id","id_parcheggio","event","color","fontWeight","fontSize","length","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport React, { Component } from \"react\";\r\nimport { inviaNotificheAutisti } from \"../../actions/prenotazioniActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass ListaVeicoli extends Component {\r\n  state = {\r\n    errors: {},\r\n    filtroModello: \"\",\r\n    filtroCilindrata: \"\",\r\n    id_utente: \"\",\r\n    nome_utente: \"\",\r\n    cognome_utente: \"\",\r\n    prenotazione: \"\",\r\n    current_id: \"\",\r\n  };\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  aggiungiVeicolo(idVeicolo, posizione, modello, marca, prezzo_feriale) {\r\n    localStorage.setItem(\"idVeicolo\", idVeicolo);\r\n    localStorage.setItem(\"posizioneVeicolo\", posizione);\r\n    localStorage.setItem(\"modelloveicolo\", modello);\r\n    localStorage.setItem(\"marcaveicolo\", marca);\r\n    localStorage.setItem(\"prezzo\", prezzo_feriale);\r\n    if (localStorage.getItem(\"idAutista\") === \"No\")\r\n      window.location.href = \"/InserimentoParcheggio\";\r\n    else if (localStorage.getItem(\"idAutista\") === \"SÃ¬\") {\r\n      const NewPrenotazione = {\r\n        id_utente: this.state.id_utente,\r\n        nome_utente: this.state.nome_utente,\r\n        cognome_utente: this.state.cognome_utente,\r\n        partenza: localStorage.getItem(\"partenza\"),\r\n        destinazione: localStorage.getItem(\"destinazione\"),\r\n        ora_partenza: localStorage.getItem(\"ora_partenza\"),\r\n        data_partenza: localStorage.getItem(\"data_partenza\"),\r\n      };\r\n      this.props.inviaNotificheAutisti(NewPrenotazione);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const Veicolo = {\r\n      tipo: localStorage.getItem(\"tipoVeicolo\"),\r\n    };\r\n    await this.props.Listaveicolidisponibili(\r\n      localStorage.getItem(\"tipoVeicolo\"),\r\n      Veicolo\r\n    );\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { filtroModello, filtroCilindrata, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { user } = this.props.auth;\r\n    this.state.id_utente = user.id;\r\n    this.state.nome_utente = user.nome;\r\n    this.state.cognome_utente = user.cognome;\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroModello, \"modello\");\r\n    veicoliFiltrati = filtriVeicoli(\r\n      veicoliFiltrati,\r\n      filtroCilindrata,\r\n      \"cilindrata\"\r\n    );\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div\r\n          class=\"center\"\r\n          style={{ textAlign: \"left\", display: \"flex\", flexWrap: \"wrap\" }}\r\n        >\r\n          {veicoliFiltrati.map((veicolo) => (\r\n            <Card style={{ width: \"18rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{veicolo.marca}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.modello}\r\n                </Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.prezzo_feriale + \"â‚¬/ora\"}\r\n                </Card.Subtitle>\r\n                <Card.Text>{veicolo.descrizione}</Card.Text>\r\n                <Card.Link>\r\n                  {\" \"}\r\n                  <button\r\n                    class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() =>\r\n                      this.aggiungiVeicolo(\r\n                        veicolo._id,\r\n                        veicolo.id_parcheggio,\r\n                        veicolo.modello,\r\n                        veicolo.marca,\r\n                        veicolo.prezzo_feriale\r\n                      )\r\n                    }\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    return (\r\n      <Container fluid style={{ marginBottom: \"3rem\" }}>\r\n        <Container sm={12}>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"modello\">Modello</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroModello\", event.target.value)\r\n                  }\r\n                  id=\"modello\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cilindrata\">Cilindrata</label>\r\n                <input\r\n                  onChange={(event) =>\r\n                    this.handleChange(\"filtroCilindrata\", event.target.value)\r\n                  }\r\n                  id=\"cilindrata\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <h1\r\n            style={{\r\n              color: \"#010101\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"25px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            VEICOLI DISPONIBILI\r\n          </h1>\r\n          {veicolo.length === 0\r\n            ? \"Non ci sono veicoli per la tipologia scelta disponibili\"\r\n            : VL}\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nListaVeicoli.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n  inviaNotificheAutisti: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n  inviaNotificheAutisti,\r\n})(ListaVeicoli);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\googlemap\\\\mappa.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport styleMappa from \"./styleMappa\";\nimport Logo from \"../../immagini/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 43.6532,\n  lng: -79.3832\n};\nexport default function Mappa() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const onMapClick = React.useCallback(e => {\n    setMarkers(current => [...current, {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Locate, {\n      panTo: panTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      onClick: e => {\n        setMarkers(current => [...current, {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng(),\n          time: new Date()\n        }]);\n      },\n      children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: {\n          url: \"/logo.png\",\n          scaledSize: new window.google.maps.Size(40, 40),\n          origin: new window.google.maps.Point(0, 0),\n          anchor: new window.google.maps.Point(20, 20)\n        },\n        onClick: () => {\n          setSelected(marker);\n        }\n      }, marker.time.toISOString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.lat,\n          lng: selected.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"#010101\",\n              fontWeight: \"bold\"\n            },\n            children: \"PARCHEGGIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"600\"\n            },\n            children: \"PARCHEGGIO KARM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mappa, \"2guadH9d5JoIeeHJyfaULPLamLs=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Mappa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mappa\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/googlemap/mappa.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","styleMappa","Logo","libraries","mapContainerStyle","height","width","options","styles","mapStyles","disableDefaultUI","zoomControl","center","lat","lng","Mappa","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","markers","setMarkers","useState","selected","setSelected","onMapClick","useCallback","e","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom","marker","url","scaledSize","window","google","maps","Size","origin","Point","anchor","toISOString","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport styleMappa from \"./styleMappa\";\r\nimport Logo from \"../../immagini/logo.png\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nconst center = {\r\n  lat: 43.6532,\r\n  lng: -79.3832,\r\n};\r\n\r\nexport default function Mappa() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  const onMapClick = React.useCallback((e) => {\r\n    setMarkers((current) => [\r\n      ...current,\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = React.useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(14);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <Locate panTo={panTo} />\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onClick={(e) => {\r\n          setMarkers((current) => [\r\n            ...current,\r\n            {\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng(),\r\n              time: new Date(),\r\n            },\r\n          ]);\r\n        }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={marker.time.toISOString()}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            icon={{\r\n              url: \"/logo.png\",\r\n              scaledSize: new window.google.maps.Size(40, 40),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(20, 20),\r\n            }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                PARCHEGGIO\r\n              </h2>\r\n              <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                PARCHEGGIO KARM\r\n              </p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
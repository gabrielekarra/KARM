{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\googlemap\\\\mappa.js\";\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox, Autocomplete } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HeaderMap extends Component {\n  constructor(props) {\n    super(props);\n    this.autocomplete = null;\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlaceChanged = this.onPlaceChanged.bind(this);\n    this.state = {\n      currentLocation: {\n        lat: 0,\n        lng: 0\n      },\n      markers: [],\n      zoom: 8\n    };\n  }\n\n  componentDidMount() {\n    var _navigator;\n\n    (_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.geolocation.getCurrentPosition(({\n      coords: {\n        latitude: lat,\n        longitude: lng\n      }\n    }) => {\n      const pos = {\n        lat,\n        lng\n      };\n      this.setState({\n        currentLocation: pos\n      });\n    });\n  }\n\n  onLoad(autocomplete) {\n    console.log('autocomplete: ', autocomplete);\n    this.autocomplete = autocomplete;\n  }\n\n  onPlaceChanged() {\n    if (this.autocomplete !== null) {\n      let lat = this.autocomplete.getPlace().geometry.location.lat();\n      let long = this.autocomplete.getPlace().geometry.location.lat();\n    } else {\n      console.log('Autocomplete is not loaded yet!');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"API_KEY_HERE\",\n      libraries: [\"places\"],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"search-box-example\",\n        mapContainerStyle: containerStyle,\n        center: this.state.currentLocation,\n        zoom: 14 // onDragEnd={search for centers in current location}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: this.state.currentLocation\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onLoad: this.onLoad,\n          onPlaceChanged: this.onPlaceChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Customized your placeholder\",\n            style: inputStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/googlemap/mappa.js"],"names":["GoogleMap","LoadScript","Marker","StandaloneSearchBox","Autocomplete","HeaderMap","Component","constructor","props","autocomplete","onLoad","bind","onPlaceChanged","state","currentLocation","lat","lng","markers","zoom","componentDidMount","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","pos","setState","console","log","getPlace","geometry","location","long","render","containerStyle","inputStyles"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,EAAwCC,mBAAxC,EAA6DC,YAA7D,QAAiF,wBAAjF;;;AAEA,MAAMC,SAAN,SAAwBC,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,IAApB;AAEA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE;AAAd,OADN;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAGDC,EAAAA,iBAAiB,GAAG;AAAA;;AAClB,kBAAAC,SAAS,UAAT,gDAAWC,WAAX,CAAuBC,kBAAvB,CAA0C,CAAC;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAET,GAAX;AAAgBU,QAAAA,SAAS,EAAET;AAA3B;AAAT,KAAD,KAA+C;AACvF,YAAMU,GAAG,GAAG;AAACX,QAAAA,GAAD;AAAMC,QAAAA;AAAN,OAAZ;AACA,WAAKW,QAAL,CAAc;AAACb,QAAAA,eAAe,EAAEY;AAAlB,OAAd;AACD,KAHD;AAID;;AAEDhB,EAAAA,MAAM,CAAED,YAAF,EAAgB;AACpBmB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BpB,YAA9B;AAEA,SAAKA,YAAL,GAAoBA,YAApB;AACD;;AAGDG,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKH,YAAL,KAAsB,IAA1B,EAAgC;AAC9B,UAAIM,GAAG,GAAG,KAAKN,YAAL,CAAkBqB,QAAlB,GAA6BC,QAA7B,CAAsCC,QAAtC,CAA+CjB,GAA/C,EAAV;AACA,UAAIkB,IAAI,GAAG,KAAKxB,YAAL,CAAkBqB,QAAlB,GAA6BC,QAA7B,CAAsCC,QAAtC,CAA+CjB,GAA/C,EAAX;AACD,KAHD,MAGO;AACLa,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AACE,MAAA,gBAAgB,EAAC,cADnB;AAEE,MAAA,SAAS,EAAE,CAAC,QAAD,CAFb;AAAA,6BAIE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,oBADL;AAEE,QAAA,iBAAiB,EAAEC,cAFrB;AAGE,QAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWC,eAHrB;AAIE,QAAA,IAAI,EAAE,EAJR,CAKE;AALF;AAAA,gCAOE,QAAC,MAAD;AAAgB,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAArC,WAAa,CAAb;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,YAAD;AACE,UAAA,MAAM,EAAE,KAAKJ,MADf;AAEE,UAAA,cAAc,EAAE,KAAKE,cAFvB;AAAA,iCAIE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,6BAFd;AAGE,YAAA,KAAK,EAAEwB;AAHT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAnE+B","sourcesContent":["import { GoogleMap, LoadScript, Marker, StandaloneSearchBox, Autocomplete } from '@react-google-maps/api';\r\n\r\nclass HeaderMap extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.autocomplete = null\r\n\r\n    this.onLoad = this.onLoad.bind(this)\r\n    this.onPlaceChanged = this.onPlaceChanged.bind(this)\r\n\r\n    this.state = {\r\n      currentLocation: {lat: 0, lng: 0},\r\n      markers: [],\r\n      zoom: 8\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    navigator?.geolocation.getCurrentPosition(({coords: {latitude: lat, longitude: lng}}) => {\r\n      const pos = {lat, lng}\r\n      this.setState({currentLocation: pos})  \r\n    })\r\n  }\r\n\r\n  onLoad (autocomplete) {\r\n    console.log('autocomplete: ', autocomplete)\r\n\r\n    this.autocomplete = autocomplete\r\n  }\r\n\r\n\r\n  onPlaceChanged() {\r\n    if (this.autocomplete !== null) {\r\n      let lat = this.autocomplete.getPlace().geometry.location.lat()\r\n      let long = this.autocomplete.getPlace().geometry.location.lat()\r\n    } else {\r\n      console.log('Autocomplete is not loaded yet!')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoadScript\r\n        googleMapsApiKey=\"API_KEY_HERE\"\r\n        libraries={[\"places\"]}\r\n      >\r\n        <GoogleMap\r\n          id='search-box-example'\r\n          mapContainerStyle={containerStyle}\r\n          center={this.state.currentLocation}\r\n          zoom={14}\r\n          // onDragEnd={search for centers in current location}\r\n        >\r\n          <Marker key={1} position={this.state.currentLocation} />\r\n          <Autocomplete\r\n            onLoad={this.onLoad}\r\n            onPlaceChanged={this.onPlaceChanged}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Customized your placeholder\"\r\n              style={inputStyles}\r\n            />\r\n          </Autocomplete>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\ListaVeicoli.js\";\nimport { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\"; //componenti da react-bootstrap\n\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport classnames from \"classnames\";\nimport Mappa from \"../googlemap/mappa\";\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListaVeicoli extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {},\n      filtroModello: \"\",\n      filtroCilindrata: \"\",\n      current_id: \"\",\n      veicoli_inparcheggio: [] //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\n\n    };\n\n    this.onChange = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  aggiungiVeicolo(idVeicolo, posizione) {\n    localStorage.setItem(\"idVeicolo\", idVeicolo);\n    localStorage.setItme(\"posizioneVeicolo\", posizione);\n    window.location.href = \"/InserimentoParcheggio\";\n  }\n\n  async componentDidMount() {\n    const Veicolo = {\n      tipo: localStorage.getItem(\"tipoVeicolo\")\n    };\n    await this.props.Listaveicolidisponibili(localStorage.getItem(\"tipoVeicolo\"), Veicolo);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      filtroTipo,\n      filtroParcheggio,\n      filtroID,\n      errors\n    } = this.state;\n    let veicoliFiltrati = [];\n    const {\n      veicolo\n    } = this.props.listaveicolidisponibili;\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroTipo, \"tipo\");\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroID, \"_id\");\n    const stile = localStorage.getItem(\"idAutista\");\n\n    const VL = /*#__PURE__*/_jsxDEV(Container, {\n      sm: 12,\n      style: {\n        marginBottom: \"21rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"center\",\n        style: {\n          textAlign: \"left\"\n        },\n        children: veicoliFiltrati.map(veicolo => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: veicolo.marca\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.modello\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: veicolo.prezzo_feriale + \"€/ora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: veicolo.descrizione\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary btn-lg btn-block bottone\",\n                onClick: () => this.aggiungiVeicolo(veicolo._id, veicolo.id_parcheggio),\n                children: \"Prosegui\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n\n    switch (stile) {\n      case \"Sì\":\n        return /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          style: {\n            marginBottom: \"3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Mappa, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"#010101\",\n                fontWeight: \"bold\",\n                fontSize: \"25px\",\n                textAlign: \"center\"\n              },\n              children: \"VEICOLI DISPONIBILI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), veicolo.length === 0 ? \"Non ci sono veicoli per la tipologia scelta disponibili\" : VL]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n\n      case \"No\":\n        {\n          return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }, this);\n        }\n    }\n  }\n\n}\n\nListaVeicoli.propTypes = {\n  Listaveicolidisponibili: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  listaveicolidisponibili: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  listaveicolidisponibili: state.listaveicolidisponibili\n});\n\nexport default connect(mapStateToProps, {\n  Listaveicolidisponibili\n})(ListaVeicoli);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/PagineCliente/ListaVeicoli.js"],"names":["Listaveicolidisponibili","React","Component","PropTypes","connect","Link","withRouter","Container","Col","Row","Modal","Button","Card","classnames","Mappa","filtriVeicoli","ListaVeicoli","state","errors","filtroModello","filtroCilindrata","current_id","veicoli_inparcheggio","onChange","e","setState","target","id","value","onSubmit","preventDefault","aggiungiVeicolo","idVeicolo","posizione","localStorage","setItem","setItme","window","location","href","componentDidMount","Veicolo","tipo","getItem","props","componentWillReceiveProps","nextProps","render","filtroTipo","filtroParcheggio","filtroID","veicoliFiltrati","veicolo","listaveicolidisponibili","stile","VL","marginBottom","textAlign","map","width","marca","modello","prezzo_feriale","descrizione","_id","id_parcheggio","color","fontWeight","fontSize","length","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import { Listaveicolidisponibili } from \"../../actions/veicoliActions\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Col, Row, Modal, Button, Card } from \"react-bootstrap\";\r\n\r\nimport \"../../App.css\";\r\nimport classnames from \"classnames\";\r\nimport Mappa from \"../googlemap/mappa\";\r\n\r\nimport filtriVeicoli from \"../../utils/filtriVeicoli\";\r\n\r\nclass ListaVeicoli extends Component {\r\n  state = {\r\n    errors: {},\r\n    filtroModello: \"\",\r\n    filtroCilindrata: \"\",\r\n    current_id: \"\",\r\n    veicoli_inparcheggio: [], //per fare capienza mettere dentro tutti i veicoli del parcheggio selezionato e in caso restituire error\r\n  };\r\n\r\n  aggiungiVeicolo(idVeicolo, posizione) {\r\n    localStorage.setItem(\"idVeicolo\", idVeicolo);\r\n    localStorage.setItme(\"posizioneVeicolo\", posizione);\r\n    window.location.href = \"/InserimentoParcheggio\";\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const Veicolo = {\r\n      tipo: localStorage.getItem(\"tipoVeicolo\"),\r\n    };\r\n    await this.props.Listaveicolidisponibili(\r\n      localStorage.getItem(\"tipoVeicolo\"),\r\n      Veicolo\r\n    );\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = async (e) => {\r\n    await this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { filtroTipo, filtroParcheggio, filtroID, errors } = this.state;\r\n    let veicoliFiltrati = [];\r\n    const { veicolo } = this.props.listaveicolidisponibili;\r\n    veicoliFiltrati = filtriVeicoli(veicolo, filtroTipo, \"tipo\");\r\n    veicoliFiltrati = filtriVeicoli(veicoliFiltrati, filtroID, \"_id\");\r\n    const stile = localStorage.getItem(\"idAutista\");\r\n    const VL = (\r\n      <Container sm={12} style={{ marginBottom: \"21rem\" }}>\r\n        <div class=\"center\" style={{ textAlign: \"left\" }}>\r\n          {veicoliFiltrati.map((veicolo) => (\r\n            <Card style={{ width: \"18rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>{veicolo.marca}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.modello}\r\n                </Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {veicolo.prezzo_feriale + \"€/ora\"}\r\n                </Card.Subtitle>\r\n                <Card.Text>{veicolo.descrizione}</Card.Text>\r\n                <Card.Link>\r\n                  {\" \"}\r\n                  <button\r\n                    class=\"btn btn-primary btn-lg btn-block bottone\"\r\n                    onClick={() =>\r\n                      this.aggiungiVeicolo(veicolo._id, veicolo.id_parcheggio)\r\n                    }\r\n                  >\r\n                    Prosegui\r\n                  </button>\r\n                </Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n    switch (stile) {\r\n      case \"Sì\":\r\n        return (\r\n          <Container fluid style={{ marginBottom: \"3rem\" }}>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Mappa />\r\n            </Row>\r\n            <Container sm={12}>\r\n              <h1\r\n                style={{\r\n                  color: \"#010101\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"25px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                VEICOLI DISPONIBILI\r\n              </h1>\r\n              {veicolo.length === 0\r\n                ? \"Non ci sono veicoli per la tipologia scelta disponibili\"\r\n                : VL}\r\n            </Container>\r\n          </Container>\r\n        );\r\n      case \"No\": {\r\n        return <Container></Container>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nListaVeicoli.propTypes = {\r\n  Listaveicolidisponibili: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  listaveicolidisponibili: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  listaveicolidisponibili: state.listaveicolidisponibili,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  Listaveicolidisponibili,\r\n})(ListaVeicoli);\r\n"]},"metadata":{},"sourceType":"module"}
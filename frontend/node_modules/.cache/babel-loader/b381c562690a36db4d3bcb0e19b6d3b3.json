{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\"; //componenti da react-bootstrap\n\nimport { Container, Row, Col, Modal, Button, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.setModalShow = input => {\n      this.setState({\n        modalShow: input\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log(this.state.show);\n      this.props.loginUser(userData, this.state.show);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      modalShow: false,\n      errors: {},\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    //se sei autenticato e provi ad andare indietro\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/HomeCliente\");\n    }\n  } //dopo autenticazione\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/HomeCliente\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        paddingTop: \"20rem\",\n        paddingBottom: \"16rem\"\n      },\n      children: [this.state.show && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"Campi non validi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        show: this.state.modalShow,\n        onHide: () => this.setModalShow(false),\n        backdrop: \"static\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-center\",\n            children: \"Inserisci i dati di accesso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            style: {\n              marginTop: \"3rem\",\n              marginBottom: \"3rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                onSubmit: this.onSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    textAlign: \"center\",\n                    color: \"#010101\"\n                  },\n                  children: \"Accedi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: this.onChange,\n                    value: this.state.email,\n                    error: errors.email,\n                    id: \"email\",\n                    type: \"email\",\n                    className: classnames(\"form-control\", {\n                      invalid: errors.email || errors.emailnotfound\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"red-text\",\n                    children: [errors.email, errors.emailnotfound]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: this.onChange,\n                    value: this.state.password,\n                    error: errors.password,\n                    id: \"password\",\n                    type: \"password\",\n                    className: classnames(\"form-control\", {\n                      invalid: errors.password || errors.passwordincorrect\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"red-text\",\n                    children: [errors.password, errors.passwordincorrect]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  value: \"Registrazione Log\",\n                  className: \"btn btn-dark btn-lg btn-block bottone\",\n                  children: \"Accedi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forgot-password text-left\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/email\",\n                children: \" Hai dimenticato la password? \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.setModalShow(true),\n              value: \"Registrazione Log\",\n              className: \"btn btn-dark btn-lg btn-block bottone\",\n              children: \"Accedi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: \"black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"forgot-password text-center\",\n                children: [\"Non sei registrato? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  children: \"Registrati\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/auth/Login.js"],"names":["React","Component","Link","PropTypes","connect","loginUser","classnames","Container","Row","Col","Modal","Button","Alert","Login","constructor","setModalShow","input","setState","modalShow","onChange","e","target","id","value","onSubmit","preventDefault","userData","email","state","password","console","log","show","props","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","paddingTop","paddingBottom","marginTop","marginBottom","textAlign","color","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container, Row, Col, Modal, Button, Alert } from \"react-bootstrap\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      modalShow: false,\r\n      errors: {},\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //se sei autenticato e provi ad andare indietro\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/HomeCliente\");\r\n    }\r\n  }\r\n  //dopo autenticazione\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/HomeCliente\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  setModalShow = (input) => {\r\n    this.setState({ modalShow: input });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    console.log(this.state.show);\r\n    this.props.loginUser(userData, this.state.show);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingTop: \"20rem\",\r\n          paddingBottom: \"16rem\",\r\n        }}\r\n      >\r\n        {this.state.show && <Alert variant=\"danger\">Campi non validi</Alert>}\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          backdrop=\"static\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-center\">\r\n              Inserisci i dati di accesso\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n              <div className=\"form\">\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <h3 style={{ textAlign: \"center\", color: \"#010101\" }}>\r\n                    Accedi\r\n                  </h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.email}\r\n                      error={errors.email}\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.email || errors.emailnotfound,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">\r\n                      {errors.email}\r\n                      {errors.emailnotfound}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                      error={errors.password}\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      className={classnames(\"form-control\", {\r\n                        invalid: errors.password || errors.passwordincorrect,\r\n                      })}\r\n                    />\r\n                    <span className=\"red-text\">\r\n                      {errors.password}\r\n                      {errors.passwordincorrect}\r\n                    </span>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    value=\"Registrazione Log\"\r\n                    className=\"btn btn-dark btn-lg btn-block bottone\"\r\n                  >\r\n                    Accedi\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <h5 style={{ marginTop: \"1rem\" }}>\r\n              <p className=\"forgot-password text-left\">\r\n                <Link to=\"/email\"> Hai dimenticato la password? </Link>\r\n              </p>\r\n            </h5>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={6}>\r\n              {\" \"}\r\n              <button\r\n                onClick={() => this.setModalShow(true)}\r\n                value=\"Registrazione Log\"\r\n                className=\"btn btn-dark btn-lg btn-block bottone\"\r\n              >\r\n                Accedi\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col sm={6}>\r\n              <h5 style={{ color: \"black\" }}>\r\n                <p className=\"forgot-password text-center\">\r\n                  Non sei registrato? <Link to=\"/register\">Registrati</Link>\r\n                </p>\r\n              </h5>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n"]},"metadata":{},"sourceType":"module"}
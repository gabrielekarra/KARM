{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser, logoutUser } from \"../src/actions/authAutentications\"; //store\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\"; //css\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //componenti\n\nimport Layout from './componenti/Layout/layout/layout';\nimport LayoutLogin from './componenti/Layout login/layout/layout';\nimport PrivateRoute from \"../src/componenti/private-route/PrivateRoute\";\nimport Register from './componenti/auth/Register';\nimport Login from './componenti/auth/Login'; //pagineCliente\n\nimport HomeCliente from './componenti/PagineCliente/HomeCliente'; // Check for token to keep user logged in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), \"const \", user, \" = this.props.auth;\", /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            exact: true,\n            path: \"/HomeCliente\",\n            component: HomeCliente\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/App.js"],"names":["React","BrowserRouter","Route","Switch","jwt_decode","setAuthToken","PropTypes","connect","setCurrentUser","logoutUser","Provider","store","Layout","LayoutLogin","PrivateRoute","Register","Login","HomeCliente","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,mCAA3C,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAO,sCAAP,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wCAAxB,C,CAEA;;;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAd,EAAAA,YAAY,CAACe,KAAD,CAAZ,CAHyB,CAIzB;;AACA,QAAMC,OAAO,GAAGjB,UAAU,CAACgB,KAAD,CAA1B,CALyB,CAMzB;;AACAT,EAAAA,KAAK,CAACW,QAAN,CAAed,cAAc,CAACa,OAAD,CAA7B,EAPyB,CAQ3B;;AACE,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAZ,IAAAA,KAAK,CAACW,QAAN,CAAeb,UAAU,EAAzB,EAF6B,CAG7B;;AACAkB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AAED,SAASC,GAAT,GAAe;AAEb,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEnB,KAAjB;AAAA,2BACA,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEK;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAED;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAHA,YAIQe,IAJR,sCAKE,QAAC,MAAD;AAAA,iCAEE,QAAC,YAAD;AAAc,YAAA,KAAK,MAAnB;AAAoB,YAAA,IAAI,EAAC,cAAzB;AAAwC,YAAA,SAAS,EAAEd;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAlBQa,G;AAoBT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser, logoutUser } from \"../src/actions/authAutentications\";\n\n//store\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n//css\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//componenti\nimport Layout from './componenti/Layout/layout/layout';\nimport LayoutLogin from './componenti/Layout login/layout/layout'\nimport PrivateRoute from \"../src/componenti/private-route/PrivateRoute\";\nimport Register from './componenti/auth/Register';\nimport Login from './componenti/auth/Login';\n\n//pagineCliente\nimport HomeCliente from './componenti/PagineCliente/HomeCliente';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n    <BrowserRouter>\n      <Layout>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n      <Route exact path=\"/login\" component={Login} />\n      const { user } = this.props.auth;\n        <Switch>\n        \n          <PrivateRoute exact path=\"/HomeCliente\" component={HomeCliente} />\n        </Switch>  \n    </Layout>    \n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
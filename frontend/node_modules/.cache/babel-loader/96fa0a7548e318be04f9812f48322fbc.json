{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\PagineCliente\\\\NuovaPrenotazione.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\nimport { registerPrenotazione } from \"../../actions/prenotazioniActions\"; //componenti da react-bootstrap\n\nimport { Container, Form } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\"; //componenti da material-ui\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n\n      if (e.target.id == \"tipo_veicolo\" && e.target.value == \"Autovettura\") {\n        document.getElementById(\"presenza-autista\").disabled = false;\n      }\n\n      if (e.target.id == \"tipo_veicolo\" && e.target.value != \"Autovettura\") {\n        document.getElementById(\"presenza-autista\").disabled = true;\n\n        if (document.getElementById(\"presenza-autista\").hasAttribute(\"checked\")) {\n          document.getElementById(\"presenza-autista\").removeAttribute(\"checked\");\n        }\n      }\n\n      e.preventDefault();\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var today = new Date();\n      var ora = today.getHours();\n      var minuti = today.getMinutes();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = \"0\" + dd;\n      }\n\n      if (mm < 10) {\n        mm = \"0\" + mm;\n      }\n\n      if (ora < 10) {\n        ora = \"0\" + ora;\n      }\n\n      if (minuti < 10) {\n        minuti = \"0\" + minuti;\n      }\n\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      var orario = ora + \":\" + minuti;\n      /*if (e.target.id==\"data_partenza\" && this.state.data_partenza===today){\n        document.getElementById('ora_partenza').min=orario;\n      }*/\n\n      console.log(this.state.idCliente);\n      const newPrenotazione = {\n        ora_partenza: this.state.ora_partenza,\n        partenza: this.state.partenza,\n        ora_arrivo: this.state.ora_arrivo,\n        ora_partenza: this.state.ora_partenza,\n        data_partenza: this.state.data_partenza,\n        data_arrivo: this.state.data_arrivo,\n        destinazione: this.state.destinazione,\n        parcheggio_partenza: this.state.parcheggio_partenza,\n        parcheggio_destinazione: this.state.parcheggio_destinazione,\n        tipo_veicolo: this.state.tipo_veicolo,\n        idVeicolo: this.state.idVeicolo,\n        idCliente: this.state.idCliente,\n        idAutista: this.state.idAutista\n      };\n\n      if (this.state.data_partenza == today) {\n        if (this.state.ora_partenza < orario) this.state.errors.ora_partenza = \"Errore partenza\";\n      }\n\n      if (this.state.data_arrivo == today) {\n        if (this.state.ora_arrivo < orario) this.state.errors.ora_arrivo = \"Errore arrivo\";\n      }\n\n      this.props.registerPrenotazione(newPrenotazione, this.props.history);\n    };\n\n    this.state = {\n      partenza: \"\",\n      data_partenza: \"\",\n      ora_partenza: \"\",\n      destinazione: \"\",\n      data_arrivo: \"\",\n      ora_arrivo: \"\",\n      ora_partenza: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      tipo_veicolo: \"\",\n      type: \"switch\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.setType = this.setType.bind(this);\n  }\n\n  setType() {\n    // così dovrebbe funzionare\n    if (this.state.data_partenza === \"2021-08-08\") {\n      this.state.errors.check = \"Non puoi selezionare l'autista se la data di partenza è tra 3 o meno giorni\";\n      this.state.type = \"hidden\";\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      user\n    } = this.props.auth;\n    this.state.idCliente = user.id;\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n\n    var yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sm: true,\n      style: {\n        marginTop: \"5rem\",\n        marginBottom: \"5rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\",\n              color: \"black\",\n              gridColumn: \"2\",\n              gridRow: \"2\"\n            },\n            children: \"Nuova Prenotazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.partenza,\n              error: errors.partenza,\n              id: \"partenza\",\n              type: \"text\",\n              placeholder: \"Inserisci l'indirizzo di partenza\",\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.partenza\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.partenza\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data di partenza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: async e => {\n                await this.onChange(e);\n                this.setType();\n              },\n              value: this.state.data_partenza,\n              error: errors.data_partenza,\n              id: \"data_partenza\",\n              type: \"date\",\n              min: today,\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.data_partenza\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.data_partenza\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Orario di partenza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.ora_partenza,\n              error: errors.ora_partenza,\n              id: \"ora_partenza\",\n              type: \"time\",\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.ora_partenza\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.ora_partenza\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.destinazione,\n              error: errors.destinazione,\n              id: \"destinazione\",\n              type: \"text\",\n              placeholder: \"Inserisci l'indirizzo di destinazione\",\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.destinazione\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.destinazione\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data di arrivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: async e => {\n                await this.onChange(e);\n                this.setType();\n              },\n              value: this.state.data_arrivo,\n              error: errors.data_arrivo,\n              id: \"data_arrivo\",\n              type: \"date\",\n              min: today,\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.data_arrivo\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.data_arrivo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Orario di arrivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.ora_arrivo,\n              error: errors.ora_arrivo,\n              id: \"ora_arrivo\",\n              type: \"time\",\n              required: true,\n              className: classnames(\"form-control\", {\n                invalid: errors.ora_arrivo\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.ora_arrivo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo Veicolo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.onChange,\n            value: this.state.tipo_veicolo,\n            error: errors.tipo_veicolo,\n            id: \"tipo_veicolo\",\n            type: \"text\",\n            className: classnames(\"form-control\", {\n              invalid: errors.tipo_veicolo\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              children: \"Tipo Veicolo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Autovettura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Moto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Bicicletta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Monopattino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"switch\",\n            id: \"custom-switch\",\n            label: \"Dichiaro di possedere un dispositivo portatile per l'intera durata della corsa\",\n            required: true,\n            style: {\n              margin: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: this.state.type,\n            onChange: this.onChangeAutista,\n            value: this.state.idAutista,\n            error: errors.idAutista,\n            id: \"idAutista\",\n            label: \"Voglio un Autista per la mia corsa\",\n            style: {\n              margin: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-text\",\n            children: errors.idAutista\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Registrazione Log\",\n            className: \"btn btn-dark btn-lg btn-block bottone\",\n            children: \"Prenota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  registerPrenotazione: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerPrenotazione\n})(NuovaPrenotazione);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/PagineCliente/NuovaPrenotazione.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","logoutUser","classnames","Button","registerPrenotazione","Container","Form","Checkbox","NuovaPrenotazione","constructor","onChange","e","setState","target","id","value","document","getElementById","disabled","hasAttribute","removeAttribute","preventDefault","onSubmit","today","Date","ora","getHours","minuti","getMinutes","dd","getDate","mm","getMonth","yyyy","getFullYear","orario","console","log","state","idCliente","newPrenotazione","ora_partenza","partenza","ora_arrivo","data_partenza","data_arrivo","destinazione","parcheggio_partenza","parcheggio_destinazione","tipo_veicolo","idVeicolo","idAutista","errors","props","history","type","bind","setType","check","componentWillReceiveProps","nextProps","render","user","auth","marginTop","marginBottom","textAlign","color","gridColumn","gridRow","invalid","margin","onChangeAutista","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, logoutUser } from \"../../actions/authAutentications\";\nimport classnames from \"classnames\";\nimport Button from \"react-bootstrap/Button\";\nimport { registerPrenotazione } from \"../../actions/prenotazioniActions\";\n\n//componenti da react-bootstrap\nimport { Container, Form } from \"react-bootstrap\";\nimport { Checkbox } from \"@material-ui/core\";\n\n//componenti da material-ui\n\nclass NuovaPrenotazione extends Component {\n  constructor() {\n    super();\n    this.state = {\n      partenza: \"\",\n      data_partenza: \"\",\n      ora_partenza: \"\",\n      destinazione: \"\",\n      data_arrivo: \"\",\n      ora_arrivo: \"\",\n      ora_partenza: \"\",\n      parcheggio_partenza: \"\",\n      parcheggio_destinazione: \"\",\n      idVeicolo: \"\",\n      idCliente: \"\",\n      idAutista: \"\",\n      tipo_veicolo: \"\",\n      type: \"switch\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.setType = this.setType.bind(this);\n  }\n\n  setType() {\n    // così dovrebbe funzionare\n    if (this.state.data_partenza === \"2021-08-08\") {\n      this.state.errors.check =\n        \"Non puoi selezionare l'autista se la data di partenza è tra 3 o meno giorni\";\n      this.state.type = \"hidden\";\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n\n    if (e.target.id == \"tipo_veicolo\" && e.target.value == \"Autovettura\") {\n      document.getElementById(\"presenza-autista\").disabled = false;\n    }\n    if (e.target.id == \"tipo_veicolo\" && e.target.value != \"Autovettura\") {\n      document.getElementById(\"presenza-autista\").disabled = true;\n      if (document.getElementById(\"presenza-autista\").hasAttribute(\"checked\")) {\n        document.getElementById(\"presenza-autista\").removeAttribute(\"checked\");\n      }\n    }\n    e.preventDefault();\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    var today = new Date();\n    var ora = today.getHours();\n    var minuti = today.getMinutes();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    if (ora < 10) {\n      ora = \"0\" + ora;\n    }\n    if (minuti < 10) {\n      minuti = \"0\" + minuti;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    var orario = ora + \":\" + minuti;\n\n    /*if (e.target.id==\"data_partenza\" && this.state.data_partenza===today){\n      document.getElementById('ora_partenza').min=orario;\n    }*/\n    console.log(this.state.idCliente);\n\n    const newPrenotazione = {\n      ora_partenza: this.state.ora_partenza,\n      partenza: this.state.partenza,\n      ora_arrivo: this.state.ora_arrivo,\n      ora_partenza: this.state.ora_partenza,\n      data_partenza: this.state.data_partenza,\n      data_arrivo: this.state.data_arrivo,\n      destinazione: this.state.destinazione,\n      parcheggio_partenza: this.state.parcheggio_partenza,\n      parcheggio_destinazione: this.state.parcheggio_destinazione,\n      tipo_veicolo: this.state.tipo_veicolo,\n      idVeicolo: this.state.idVeicolo,\n      idCliente: this.state.idCliente,\n      idAutista: this.state.idAutista,\n    };\n\n    if (this.state.data_partenza == today) {\n      if (this.state.ora_partenza < orario)\n        this.state.errors.ora_partenza = \"Errore partenza\";\n    }\n    if (this.state.data_arrivo == today) {\n      if (this.state.ora_arrivo < orario)\n        this.state.errors.ora_arrivo = \"Errore arrivo\";\n    }\n\n    this.props.registerPrenotazione(newPrenotazione, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    const { user } = this.props.auth;\n    this.state.idCliente = user.id;\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    return (\n      <Container sm style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}>\n        <div className=\"Form\">\n          <form noValidate onSubmit={this.onSubmit}>\n            <h1\n              style={{\n                textAlign: \"center\",\n                color: \"black\",\n                gridColumn: \"2\",\n                gridRow: \"2\",\n              }}\n            >\n              Nuova Prenotazione\n            </h1>\n            <div className=\"form-group\">\n              <input\n                onChange={this.onChange}\n                value={this.state.partenza}\n                error={errors.partenza}\n                id=\"partenza\"\n                type=\"text\"\n                placeholder=\"Inserisci l'indirizzo di partenza\"\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.partenza,\n                })}\n              />\n              <span className=\"red-text\">{errors.partenza}</span>\n            </div>\n            <div className=\"form-group\">\n              <label>Data di partenza</label>\n              <input\n                onChange={async (e) => {\n                  await this.onChange(e);\n                  this.setType();\n                }}\n                value={this.state.data_partenza}\n                error={errors.data_partenza}\n                id=\"data_partenza\"\n                type=\"date\"\n                min={today}\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.data_partenza,\n                })}\n              />\n              <span className=\"red-text\">{errors.data_partenza}</span>\n            </div>\n            <div className=\"form-group\">\n              <label>Orario di partenza</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.ora_partenza}\n                error={errors.ora_partenza}\n                id=\"ora_partenza\"\n                type=\"time\"\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.ora_partenza,\n                })}\n              />\n              <span className=\"red-text\">{errors.ora_partenza}</span>\n            </div>\n            <div className=\"form-group\">\n              <input\n                onChange={this.onChange}\n                value={this.state.destinazione}\n                error={errors.destinazione}\n                id=\"destinazione\"\n                type=\"text\"\n                placeholder=\"Inserisci l'indirizzo di destinazione\"\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.destinazione,\n                })}\n              />\n              <span className=\"red-text\">{errors.destinazione}</span>\n            </div>\n            <div className=\"form-group\">\n              <label>Data di arrivo</label>\n              <input\n                onChange={async (e) => {\n                  await this.onChange(e);\n                  this.setType();\n                }}\n                value={this.state.data_arrivo}\n                error={errors.data_arrivo}\n                id=\"data_arrivo\"\n                type=\"date\"\n                min={today}\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.data_arrivo,\n                })}\n              />\n              <span className=\"red-text\">{errors.data_arrivo}</span>\n            </div>\n            <div className=\"form-group\">\n              <label>Orario di arrivo</label>\n              <input\n                onChange={this.onChange}\n                value={this.state.ora_arrivo}\n                error={errors.ora_arrivo}\n                id=\"ora_arrivo\"\n                type=\"time\"\n                required\n                className={classnames(\"form-control\", {\n                  invalid: errors.ora_arrivo,\n                })}\n              />\n              <span className=\"red-text\">{errors.ora_arrivo}</span>\n            </div>\n\n            <label>Tipo Veicolo</label>\n            <select\n              onChange={this.onChange}\n              value={this.state.tipo_veicolo}\n              error={errors.tipo_veicolo}\n              id=\"tipo_veicolo\"\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                invalid: errors.tipo_veicolo,\n              })}\n              required\n            >\n              <option disabled selected>\n                Tipo Veicolo\n              </option>\n              <option>Autovettura</option>\n              <option>Moto</option>\n              <option>Bicicletta</option>\n              <option>Monopattino</option>\n            </select>\n\n            <Form.Check\n              type=\"switch\"\n              id=\"custom-switch\"\n              label=\"Dichiaro di possedere un dispositivo portatile per l'intera durata della corsa\"\n              required\n              style={{ margin: \"5px\" }}\n            />\n\n            <Form.Check\n              type={this.state.type}\n              onChange={this.onChangeAutista}\n              value={this.state.idAutista}\n              error={errors.idAutista}\n              id=\"idAutista\"\n              label=\"Voglio un Autista per la mia corsa\"\n              style={{ margin: \"5px\" }}\n            />\n            <span className=\"red-text\">{errors.idAutista}</span>\n            <button\n              type=\"submit\"\n              value=\"Registrazione Log\"\n              className=\"btn btn-dark btn-lg btn-block bottone\"\n            >\n              Prenota\n            </button>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nNuovaPrenotazione.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  registerPrenotazione: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { registerPrenotazione })(\n  NuovaPrenotazione\n);\n"]},"metadata":{},"sourceType":"module"}
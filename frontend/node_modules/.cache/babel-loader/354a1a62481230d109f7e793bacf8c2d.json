{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\googlemap\\\\mappa.js\",\n    _s = $RefreshSig$();\n\nimport { Listaclienti } from \"../../actions/authAutentications\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\nimport styleMappa from \"./styleMappa\";\nimport Logo from \"../../immagini/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100%\"\n};\nconst center = {\n  lat: 38.115688,\n  lng: 13.361267\n};\nconst options = {\n  styles: styleMappa,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nexport default function Mappa() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyCTbH-HgcbQUWQXz24mm9gmkQCmJk98L7c\",\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  if (loadError) return \"Errore nel caricare la mappa\";\n  if (!isLoaded) return \"Mappa in caricamento\";\n\n  function Locate({\n    panTo\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\"\n      },\n      children: \"ciao\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: \"absolute\",\n        zIndex: \"100\",\n        fontWeight: \"semi-bold\"\n      },\n      children: \"KARM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      onClick: e => {\n        setMarkers(current => [...current, {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng(),\n          time: new Date()\n        }]);\n      },\n      children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: {\n          url: \"/logo.png\",\n          scaledSize: new window.google.maps.Size(40, 40),\n          origin: new window.google.maps.Point(0, 0),\n          anchor: new window.google.maps.Point(20, 20)\n        },\n        onClick: () => {\n          setSelected(marker);\n        }\n      }, marker.time.toISOString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.lat,\n          lng: selected.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"#010101\",\n              fontWeight: \"bold\"\n            },\n            children: \"PARCHEGGIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"600\"\n            },\n            children: \"PARCHEGGIO KARM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mappa, \"kdDALmNaJ70++rWCeqeStQCeW/4=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Mappa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mappa\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/googlemap/mappa.js"],"names":["Listaclienti","React","Component","PropTypes","connect","GoogleMap","Marker","InfoWindow","useLoadScript","styleMappa","Logo","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","Mappa","isLoaded","loadError","googleMapsApiKey","markers","setMarkers","useState","selected","setSelected","Locate","panTo","position","zIndex","fontWeight","e","current","latLng","time","Date","map","marker","url","scaledSize","window","google","maps","Size","origin","Point","anchor","toISOString","color","textAlign"],"mappings":"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","sourcesContent":["import { Listaclienti } from \"../../actions/authAutentications\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  useLoadScript,\r\n} from \"@react-google-maps/api\";\r\nimport styleMappa from \"./styleMappa\";\r\nimport Logo from \"../../immagini/logo.png\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\nconst center = {\r\n  lat: 38.115688,\r\n  lng: 13.361267,\r\n};\r\n\r\nconst options = {\r\n  styles: styleMappa,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nexport default function Mappa() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyCTbH-HgcbQUWQXz24mm9gmkQCmJk98L7c\",\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  if (loadError) return \"Errore nel caricare la mappa\";\r\n  if (!isLoaded) return \"Mappa in caricamento\";\r\n\r\n  function Locate({ panTo }) {\r\n    return <button style={{ position: \"absolute\" }}>ciao</button>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1\r\n        style={{ position: \"absolute\", zIndex: \"100\", fontWeight: \"semi-bold\" }}\r\n      >\r\n        KARM\r\n      </h1>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onClick={(e) => {\r\n          setMarkers((current) => [\r\n            ...current,\r\n            {\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng(),\r\n              time: new Date(),\r\n            },\r\n          ]);\r\n        }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={marker.time.toISOString()}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            icon={{\r\n              url: \"/logo.png\",\r\n              scaledSize: new window.google.maps.Size(40, 40),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(20, 20),\r\n            }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                PARCHEGGIO\r\n              </h2>\r\n              <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                PARCHEGGIO KARM\r\n              </p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
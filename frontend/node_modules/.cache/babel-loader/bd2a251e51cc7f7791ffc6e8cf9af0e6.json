{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\googlemap\\\\mappa.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport styleMappa from \"./styleMappa\";\nimport Logo from \"../../immagini/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 43.6532,\n  lng: -79.3832\n};\nexport default function Mappa() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyCTbH-HgcbQUWQXz24mm9gmkQCmJk98L7c\",\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  if (loadError) return \"Errore nel caricare la mappa\";\n  if (!isLoaded) return \"Mappa in caricamento\";\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n\n  function Locate({\n    panTo\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"trovami\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Locate, {\n      panTo: panTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      options: options,\n      onClick: e => {\n        setMarkers(current => [...current, {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng(),\n          time: new Date()\n        }]);\n      },\n      children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: {\n          url: \"/logo.png\",\n          scaledSize: new window.google.maps.Size(40, 40),\n          origin: new window.google.maps.Point(0, 0),\n          anchor: new window.google.maps.Point(20, 20)\n        },\n        onClick: () => {\n          setSelected(marker);\n        }\n      }, marker.time.toISOString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selected.lat,\n          lng: selected.lng\n        },\n        onCloseClick: () => {\n          setSelected(null);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"#010101\",\n              fontWeight: \"bold\"\n            },\n            children: \"PARCHEGGIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"600\"\n            },\n            children: \"PARCHEGGIO KARM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mappa, \"sOL6GEbDZD5CrOPHZ4/l9qfqMvw=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Mappa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mappa\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/googlemap/mappa.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","styleMappa","Logo","libraries","mapContainerStyle","height","width","options","styles","mapStyles","disableDefaultUI","zoomControl","center","lat","lng","Mappa","isLoaded","loadError","googleMapsApiKey","markers","setMarkers","useState","selected","setSelected","panTo","useCallback","mapRef","current","setZoom","Locate","e","latLng","time","Date","map","marker","url","scaledSize","window","google","maps","Size","origin","Point","anchor","toISOString","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport styleMappa from \"./styleMappa\";\r\nimport Logo from \"../../immagini/logo.png\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nconst center = {\r\n  lat: 43.6532,\r\n  lng: -79.3832,\r\n};\r\n\r\nexport default function Mappa() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyCTbH-HgcbQUWQXz24mm9gmkQCmJk98L7c\",\r\n    libraries,\r\n  });\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  if (loadError) return \"Errore nel caricare la mappa\";\r\n  if (!isLoaded) return \"Mappa in caricamento\";\r\n\r\n  const panTo = React.useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(14);\r\n  }, []);\r\n\r\n  function Locate({ panTo }) {\r\n    return <button>trovami</button>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Locate panTo={panTo} />\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onClick={(e) => {\r\n          setMarkers((current) => [\r\n            ...current,\r\n            {\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng(),\r\n              time: new Date(),\r\n            },\r\n          ]);\r\n        }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={marker.time.toISOString()}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            icon={{\r\n              url: \"/logo.png\",\r\n              scaledSize: new window.google.maps.Size(40, 40),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(20, 20),\r\n            }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2 style={{ color: \"#010101\", fontWeight: \"bold\" }}>\r\n                PARCHEGGIO\r\n              </h2>\r\n              <p style={{ textAlign: \"center\", fontWeight: \"600\" }}>\r\n                PARCHEGGIO KARM\r\n              </p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
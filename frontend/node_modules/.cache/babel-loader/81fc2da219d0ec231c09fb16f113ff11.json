{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\pagineGeneriche\\\\modificaPassword.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser, logoutUser, recuperoPassword, codiceOTP, modificaPassword2 } from \"../actions/authAutentications\";\nimport classnames from \"classnames\"; //componenti da react-bootstrap\n\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModificaPassword extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const dataUser = {\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.modificaPassword2(this.state.email, dataUser);\n      if (this.state.errors === {}) this.props.history.push(\"/IlMioProfilo\"); //aggiungere notifica\n      //aggiungere notifica errore\n    };\n\n    this.state = {\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      user\n    } = this.props.auth;\n    this.state.email = user.email;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"12rem\",\n        marginBottom: \"15rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"center\",\n              color: \"black\"\n            },\n            children: \"Inserisci la nuova password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.password,\n              error: errors.modifica_password,\n              id: \"modifica_password\",\n              type: \"password\",\n              className: classnames(\"form-control\", {\n                invalid: errors.modifica_password\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.modifica_password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password2\",\n              children: \"Conferma Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.onChange,\n              value: this.state.password2,\n              error: errors.modifica_password2,\n              id: \"modifica_password2\",\n              type: \"password\",\n              className: classnames(\"form-control\", {\n                invalid: errors.modifica_password2\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: errors.modifica_password2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Registrazione Log\",\n            className: \"btn btn-dark btn-lg btn-block bottone\",\n            children: \"Conferma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nModificaPassword.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  modificaPassword2: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser,\n  modificaPassword2,\n  logoutUser\n})(withRouter(ModificaPassword));","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/pagineGeneriche/modificaPassword.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","loginUser","logoutUser","recuperoPassword","codiceOTP","modificaPassword2","classnames","Container","ModificaPassword","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","dataUser","email","state","password","password2","props","errors","history","push","componentWillReceiveProps","nextProps","render","user","auth","marginTop","marginBottom","textAlign","color","modifica_password","invalid","modifica_password2","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  recuperoPassword,\r\n  codiceOTP,\r\n  modificaPassword2,\r\n} from \"../actions/authAutentications\";\r\nimport classnames from \"classnames\";\r\n\r\n//componenti da react-bootstrap\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass ModificaPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const dataUser = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n    this.props.modificaPassword2(this.state.email, dataUser);\r\n    if (this.state.errors === {}) this.props.history.push(\"/IlMioProfilo\");\r\n    //aggiungere notifica\r\n    //aggiungere notifica errore\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.state.email = user.email;\r\n    return (\r\n      <Container style={{ marginTop: \"12rem\", marginBottom: \"15rem\" }}>\r\n        <div className=\"Form\">\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <h3 style={{ textAlign: \"center\", color: \"black\" }}>\r\n              Inserisci la nuova password\r\n            </h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.modifica_password}\r\n                id=\"modifica_password\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.modifica_password,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.modifica_password}</span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password2\">Conferma Password</label>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.password2}\r\n                error={errors.modifica_password2}\r\n                id=\"modifica_password2\"\r\n                type=\"password\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.modifica_password2,\r\n                })}\r\n              />\r\n              <span className=\"red-text\">{errors.modifica_password2}</span>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              value=\"Registrazione Log\"\r\n              className=\"btn btn-dark btn-lg btn-block bottone\"\r\n            >\r\n              Conferma\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nModificaPassword.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  modificaPassword2: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginUser,\r\n  modificaPassword2,\r\n  logoutUser,\r\n})(withRouter(ModificaPassword));\r\n"]},"metadata":{},"sourceType":"module"}
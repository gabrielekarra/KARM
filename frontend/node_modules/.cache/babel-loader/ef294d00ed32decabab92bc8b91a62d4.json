{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Desktop\\\\karm_noncelafacciopiu\\\\frontend\\\\src\\\\componenti\\\\googlemap\\\\mappa.js\";\nimport React from \"react\";\nimport { GoogleMap, StandaloneSearchBox, Marker, google } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet markerArray = [];\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentLocation: {\n        lat: 0,\n        lng: 0\n      },\n      markers: [],\n      bounds: null\n    };\n\n    this.onMapLoad = map => {\n      var _navigator;\n\n      (_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.geolocation.getCurrentPosition(({\n        coords: {\n          latitude: lat,\n          longitude: lng\n        }\n      }) => {\n        const pos = {\n          lat,\n          lng\n        };\n        this.setState({\n          currentLocation: pos\n        });\n      });\n      google.maps.event.addListener(map, \"bounds_changed\", () => {\n        console.log(map.getBounds());\n        this.setState({\n          bounds: map.getBounds()\n        });\n      });\n    };\n\n    this.onSBLoad = ref => {\n      this.searchBox = ref;\n    };\n\n    this.onPlacesChanged = () => {\n      markerArray = [];\n      let results = this.searchBox.getPlaces();\n\n      for (let i = 0; i < results.length; i++) {\n        let place = results[i].geometry.location;\n        markerArray.push(place);\n      }\n\n      this.setState({\n        markers: markerArray\n      });\n      console.log(markerArray);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchbox\",\n        children: /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: this.onSBLoad,\n          onPlacesChanged: this.onPlacesChanged,\n          bounds: this.state.bounds,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Customized your placeholder\",\n            style: {\n              boxSizing: `border-box`,\n              border: `1px solid transparent`,\n              width: `240px`,\n              height: `32px`,\n              padding: `0 12px`,\n              borderRadius: `3px`,\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n              fontSize: `14px`,\n              outline: `none`,\n              textOverflow: `ellipses`,\n              position: \"absolute\",\n              left: \"50%\",\n              marginLeft: \"-120px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          center: this.state.currentLocation,\n          zoom: 10,\n          onLoad: map => this.onMapLoad(map),\n          mapContainerStyle: {\n            height: \"400px\",\n            width: \"800px\"\n          },\n          children: this.state.markers.map((mark, index) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: mark\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/karm_noncelafacciopiu/frontend/src/componenti/googlemap/mappa.js"],"names":["React","GoogleMap","StandaloneSearchBox","Marker","google","markerArray","Map","Component","state","currentLocation","lat","lng","markers","bounds","onMapLoad","map","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","pos","setState","maps","event","addListener","console","log","getBounds","onSBLoad","ref","searchBox","onPlacesChanged","results","getPlaces","i","length","place","geometry","location","push","render","boxSizing","border","width","height","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","mark","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { GoogleMap, StandaloneSearchBox, Marker, google } from \"@react-google-maps/api\";\r\n\r\nlet markerArray = [];\r\nclass Map extends React.Component {\r\n  state = {\r\n    currentLocation: { lat: 0, lng: 0 },\r\n    markers: [],\r\n    bounds: null\r\n  };\r\n\r\n  onMapLoad = map => {\r\n    navigator?.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude: lat, longitude: lng } }) => {\r\n        const pos = { lat, lng };\r\n        this.setState({ currentLocation: pos });\r\n      }\r\n    );\r\n    google.maps.event.addListener(map, \"bounds_changed\", () => {\r\n      console.log(map.getBounds());\r\n      this.setState({ bounds: map.getBounds() });\r\n    });\r\n  };\r\n\r\n  onSBLoad = ref => {\r\n    this.searchBox = ref;\r\n  };\r\n\r\n  onPlacesChanged = () => {\r\n    markerArray = [];\r\n    let results = this.searchBox.getPlaces();\r\n    for (let i = 0; i < results.length; i++) {\r\n      let place = results[i].geometry.location;\r\n      markerArray.push(place);\r\n    }\r\n    this.setState({ markers: markerArray });\r\n    console.log(markerArray);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"searchbox\">\r\n          <StandaloneSearchBox\r\n            onLoad={this.onSBLoad}\r\n            onPlacesChanged={this.onPlacesChanged}\r\n            bounds={this.state.bounds}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Customized your placeholder\"\r\n              style={{\r\n                boxSizing: `border-box`,\r\n                border: `1px solid transparent`,\r\n                width: `240px`,\r\n                height: `32px`,\r\n                padding: `0 12px`,\r\n                borderRadius: `3px`,\r\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                fontSize: `14px`,\r\n                outline: `none`,\r\n                textOverflow: `ellipses`,\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                marginLeft: \"-120px\"\r\n              }}\r\n            />\r\n          </StandaloneSearchBox>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <GoogleMap\r\n            center={this.state.currentLocation}\r\n            zoom={10}\r\n            onLoad={map => this.onMapLoad(map)}\r\n            mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\r\n          >\r\n            {this.state.markers.map((mark, index) => (\r\n              <Marker key={index} position={mark} />\r\n            ))}\r\n          </GoogleMap>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}